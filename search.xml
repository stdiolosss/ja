<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ConEmu-setting</title>
    <url>/2017/08/21/cn/ConEmu-setting/</url>
    <content><![CDATA[<p>windows 下的ConEmu 配置</p>
<span id="more"></span>
<p>ConEmu 其实只是个外壳 我这里使用的是git-bash的作为内核 当然你也可以选择别的</p>
<h2 id="下载"><a class="header-anchor" href="#下载"></a>下载</h2>
<p>下载 <a href="https://conemu.github.io/">ConEmu</a> 和<a href="https://git-for-windows.github.io/">git-bash</a></p>
<h2 id="git-bash配置"><a class="header-anchor" href="#git-bash配置"></a>git-bash配置</h2>
<p>将git-bash的bin目录加入到系统的环境变量中</p>
<h2 id="ConEmu-配置"><a class="header-anchor" href="#ConEmu-配置"></a>ConEmu 配置</h2>
<h3 id="将gitbash-中的右下配置更改为自己gitbash安装的bin目录-D-CodeSoft-Git-bin-sh-exe-login-i"><a class="header-anchor" href="#将gitbash-中的右下配置更改为自己gitbash安装的bin目录-D-CodeSoft-Git-bin-sh-exe-login-i"></a>将gitbash 中的右下配置更改为自己gitbash安装的bin目录 <code>&quot;D:\CodeSoft\Git\bin\sh.exe&quot; --login -i</code></h3>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/ConEmu/1.png?x-oss-process=style/blogimage" alt=""></p>
<h3 id="载startup中选择gitbash"><a class="header-anchor" href="#载startup中选择gitbash"></a>载startup中选择gitbash</h3>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/ConEmu/2.png?x-oss-process=style/blogimage" alt=""></p>
<h3 id="勾选之后可以方便多窗口切换"><a class="header-anchor" href="#勾选之后可以方便多窗口切换"></a>勾选之后可以方便多窗口切换</h3>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/ConEmu/3.png?x-oss-process=style/blogimage" alt=""></p>
<h3 id="切换背景图片"><a class="header-anchor" href="#切换背景图片"></a>切换背景图片</h3>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/ConEmu/4.png?x-oss-process=style/blogimage" alt=""><br>
最终效果如下<br>
<img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/ConEmu/5.png?x-oss-process=style/blogimage" alt=""></p>
]]></content>
      <categories>
        <category>windows10</category>
      </categories>
      <tags>
        <tag>windows10</tag>
        <tag>ConEmu</tag>
      </tags>
  </entry>
  <entry>
    <title>atom-plugins</title>
    <url>/2017/08/16/cn/atom-plugins/</url>
    <content><![CDATA[<p>简介: atom中常用插件</p>
<span id="more"></span>
<h2 id="通用插件"><a class="header-anchor" href="#通用插件"></a>通用插件</h2>
<h3 id="dash"><a class="header-anchor" href="#dash"></a>dash</h3>
<p>配合 软件velocity使用方便查看文档</p>
<h3 id="atom-beautify"><a class="header-anchor" href="#atom-beautify"></a>atom beautify</h3>
<p>下载之后不要忘记设置保存时格式化(在对应package的 setting里面 找到对应的语言) 这个很方便</p>
<h3 id="auto-fold"><a class="header-anchor" href="#auto-fold"></a>auto-fold</h3>
<p>折叠代码</p>
<h3 id="file-icons"><a class="header-anchor" href="#file-icons"></a>file-icons</h3>
<p>根据不同文件类型加上不同的图标</p>
<h3 id="platformio-ide-terminal"><a class="header-anchor" href="#platformio-ide-terminal"></a>platformio-ide-terminal</h3>
<p><s>这个问题比较多经常不能用 已经用gitbash+conEmu代替了</s><br>
– 2017-10-7 更新–<br>
更新后又可以使用了考虑到便利性继续使用</p>
<h3 id="highlight-selected"><a class="header-anchor" href="#highlight-selected"></a>highlight-selected</h3>
<p>高亮所有与选中相同的单词</p>
<h3 id="minimap-highlight-selected"><a class="header-anchor" href="#minimap-highlight-selected"></a>minimap-highlight-selected</h3>
<h3 id="docblockr"><a class="header-anchor" href="#docblockr"></a>docblockr</h3>
<p>智能代码注释</p>
<h3 id="regex-railroad-diagram"><a class="header-anchor" href="#regex-railroad-diagram"></a>regex-railroad-diagram</h3>
<p>正则表达式图形化</p>
<p>–2017-10-26–</p>
<h3 id="Sublime-Style-Column-Selection"><a class="header-anchor" href="#Sublime-Style-Column-Selection"></a>Sublime Style Column Selection</h3>
<p>像sublime一样按滚轮竖列选择</p>
<h3 id="open-in-browser"><a class="header-anchor" href="#open-in-browser"></a>open-in-browser</h3>
<p>在浏览器中打开</p>
<h3 id="move-panes-暂时没有使用"><a class="header-anchor" href="#move-panes-暂时没有使用"></a>move-panes(暂时没有使用)</h3>
<p>移动活动的tab 到 pane</p>
<h2 id="markdown"><a class="header-anchor" href="#markdown"></a>markdown</h2>
<h3 id="markdown-preview-plus"><a class="header-anchor" href="#markdown-preview-plus"></a>markdown-preview-plus</h3>
<p>实时预览markdown文档<br>
注意:</p>
<ol>
<li>使用前要关先闭atom自带的预览插件</li>
<li>要在左侧tree中选中对应markdown文件 然后 用快捷键ctrl+shift+m才能显示</li>
</ol>
<h3 id="markdown-scroll-sync"><a class="header-anchor" href="#markdown-scroll-sync"></a>markdown-scroll-sync</h3>
<h3 id="markdown-table-editor"><a class="header-anchor" href="#markdown-table-editor"></a>markdown-table-editor</h3>
<h2 id="vim"><a class="header-anchor" href="#vim"></a>vim</h2>
<h3 id="vim-mode-plus"><a class="header-anchor" href="#vim-mode-plus"></a>vim-mode-plus</h3>
<h3 id="ex-mode"><a class="header-anchor" href="#ex-mode"></a>ex-mode</h3>
<p>这个配合上面一个用的</p>
<h3 id="relative-numbers"><a class="header-anchor" href="#relative-numbers"></a>relative-numbers</h3>
<p>显示相对行数 在vim下很有用</p>
<h2 id="git"><a class="header-anchor" href="#git"></a>git</h2>
<h3 id="tree-view-git-status"><a class="header-anchor" href="#tree-view-git-status"></a>tree-view-git-status</h3>
<p>会在右侧显示当前分支 有文件变动之后右侧会变色很实用</p>
<h3 id="merge-conflicts"><a class="header-anchor" href="#merge-conflicts"></a>merge-conflicts</h3>
<p>在 Atom 里面处理合并产生冲突的文件</p>
<h2 id="前端"><a class="header-anchor" href="#前端"></a>前端</h2>
<h3 id="emmet"><a class="header-anchor" href="#emmet"></a>emmet</h3>
<h3 id="color-picker"><a class="header-anchor" href="#color-picker"></a>color-picker</h3>
<p>取色工具</p>
<h3 id="autocomplete-modules"><a class="header-anchor" href="#autocomplete-modules"></a>autocomplete-modules</h3>
<p>模块名自动补全</p>
<h3 id="autocomplete-paths"><a class="header-anchor" href="#autocomplete-paths"></a>autocomplete-paths</h3>
<h3 id="atom-ternjs"><a class="header-anchor" href="#atom-ternjs"></a>atom-ternjs</h3>
<p>支持多种语言代码补全，例如：ES5, ES6 (JavaScript 2015), Node.js, jQuery, Angular</p>
<h3 id="pigments"><a class="header-anchor" href="#pigments"></a>pigments</h3>
<p>代码颜色可视化</p>
<h3 id="hyperclick-js-hyperclick"><a class="header-anchor" href="#hyperclick-js-hyperclick"></a>hyperclick / js-hyperclick</h3>
<p>这个两个插件配合使用，可以实现类似于IDE的Ctrl+click，跳转到变量函数声明或者定义的地方</p>
]]></content>
      <categories>
        <category>atom</category>
      </categories>
      <tags>
        <tag>plugins</tag>
      </tags>
  </entry>
  <entry>
    <title>atom-python-setting</title>
    <url>/2017/08/09/cn/atom-python-setting/</url>
    <content><![CDATA[<p>atom中关于使用python的设置</p>
<span id="more"></span>
<p>使用到的插件名称</p>
<h2 id="atom-python-run"><a class="header-anchor" href="#atom-python-run"></a>atom-python-run</h2>
<p>这个可以直接运行python文件<br>
<img src="https://i.github-camo.com/602be24c3200278afd853b2077652f9dce60f1ff/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f323731323637352f31383731303338382f39613636356564382d383033372d313165362d383033612d3335653435353565383964302e6a7067" alt=""></p>
<h2 id="linter-flake8"><a class="header-anchor" href="#linter-flake8"></a>linter-flake8</h2>
<p>这个可以检查python的语法错误<br>
<img src="https://i.github-camo.com/826e208290ec00e0a22c901e83cf6f13294ae2db/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f343237383131332f383736383438322f35326639373563362d326533662d313165352d383765342d3237633833353966643336632e676966" alt=""></p>
<h2 id="python-autopep8-使用-atom-beautify-代替"><a class="header-anchor" href="#python-autopep8-使用-atom-beautify-代替"></a><s>python-autopep8</s> 使用  atom beautify 代替</h2>
<p>在保存时自动格式化python代码去除多余的空格</p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>atom,deprecated</tag>
      </tags>
  </entry>
  <entry>
    <title>atom-settings</title>
    <url>/2017/08/17/cn/atom-settings/</url>
    <content><![CDATA[<p>Atom 的基础设置</p>
<span id="more"></span>
<p>我们从下载完成后开始设置的配置<br>
以下有很多是个人设置 选择自己喜欢的设置就好</p>
<h2 id="Atom自身设置"><a class="header-anchor" href="#Atom自身设置"></a>Atom自身设置</h2>
<h3 id="在编辑中像sublime一样会用点显示空格"><a class="header-anchor" href="#在编辑中像sublime一样会用点显示空格"></a>在编辑中像sublime一样会用点显示空格</h3>
<p><font color= "red"><code>File-&gt;Settings</code></font></p>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/atom-settings/1.png?x-oss-process=style/blogimage" alt=""></p>
<p>勾选show Invisible 即可</p>
<h3 id="修改tab为4个空格"><a class="header-anchor" href="#修改tab为4个空格"></a>修改tab为4个空格</h3>
<p><code>File-&gt;Settings</code></p>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/atom-settings/2.png?x-oss-process=style/blogimage" alt=""></p>
<p>修改tab length 为4</p>
<h3 id="删除中间的竖线"><a class="header-anchor" href="#删除中间的竖线"></a>删除中间的竖线</h3>
<p>竖线是提示超过改线可能会导致自动换行 如果想要隐藏<br>
<code>File-&gt;Stylesheet</code>增加以下代码</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">atom-text-editor::shadow .wrap-guide</span> <span class="token punctuation">&#123;</span>
  //隐藏右边的白线
  <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="常用快捷键"><a class="header-anchor" href="#常用快捷键"></a>常用快捷键</h2>
<p>可以在<code>file-settings-keybindings</code>中查找</p>
<ol>
<li>tree-view</li>
</ol>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>操作</th>
<th>对应配置中的名称</th>
</tr>
</thead>
<tbody>
<tr>
<td>alt+\ (esc返回)</td>
<td>焦点移到目录树</td>
<td>tree-view:toggle-focus</td>
</tr>
<tr>
<td>a</td>
<td>新建文件</td>
<td>tree-view:add-file</td>
</tr>
<tr>
<td>ctrl+[</td>
<td>展开文件夹</td>
<td>tree-view:collapse-directory</td>
</tr>
<tr>
<td>ctrl+]</td>
<td>关闭文件夹</td>
<td>tree-view:expand-item</td>
</tr>
<tr>
<td>ctrl+shift+c</td>
<td>复制当前文件绝对路径</td>
<td></td>
</tr>
</tbody>
</table>
<ol start="2">
<li>文件操作</li>
</ol>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>操作</th>
<th>对应配置中的名称</th>
</tr>
</thead>
<tbody>
<tr>
<td>ctrl+t</td>
<td>打开文件</td>
<td></td>
</tr>
<tr>
<td>ctrl+shift+f</td>
<td>在工程中搜索</td>
<td></td>
</tr>
<tr>
<td>ctrl+h</td>
<td>在当前文件中搜索替换</td>
<td></td>
</tr>
<tr>
<td>ctrl+b</td>
<td>在已经打开的文件中切换</td>
<td></td>
</tr>
<tr>
<td>ctrl+alt+[</td>
<td>收缩代码块</td>
<td></td>
</tr>
<tr>
<td>ctrl+alt+]</td>
<td>展开代码块</td>
<td></td>
</tr>
<tr>
<td>ctrl+tab</td>
<td>在已经打开的标签中切换</td>
<td></td>
</tr>
</tbody>
</table>
<ol start="3">
<li>在atom中更改的快捷键<br>
因为vim插件会和atom的默认快捷键冲突所以修改部分快捷键在<code>keymap.cson</code>中修改</li>
</ol>
<p>使用ctrl-c 复制(注意我这里使用的vim插件是vim-mode-plus如果用的别的vim插件 到setting-&gt;keybindings 里面查看ctrl-c对应的vim控件名称 可以参看<a href="https://www.urlteam.org/2017/07/atom%E5%9C%A8vim%E6%A8%A1%E5%BC%8F%E4%B8%8B%E8%AE%BE%E7%BD%AE%E5%BF%AB%E6%8D%B7%E5%A4%8D%E5%88%B6%E6%8C%89%E9%94%AE/">这里</a>)</p>
<pre class="line-numbers language-none"><code class="language-none">&#39;atom-text-editor.vim-mode-plus&#39;:
  # &#39;ctrl-c&#39;: &#39;vim-mode-plus:reset-normal-mode&#39;
  &#39;ctrl-c&#39;: &#39;core:copy&#39;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="常用插件-2"><a class="header-anchor" href="#常用插件-2"></a>常用插件</h2>
<p>请看我的另外一篇博客  <a href="#">Post not found: atom-plugins</a></p>
<h2 id="关于主题"><a class="header-anchor" href="#关于主题"></a>关于主题</h2>
<p>theme里面是有很多主题 但是我用了之后发现默认的markdown语法不高亮了 现在用的配置是 UI theme:One Dark Theme: One Dark</p>
]]></content>
      <categories>
        <category>atom</category>
      </categories>
      <tags>
        <tag>atom</tag>
      </tags>
  </entry>
  <entry>
    <title>babun-notes</title>
    <url>/2017/11/06/cn/babun-notes/</url>
    <content><![CDATA[<p>babun on windows10</p>
<span id="more"></span>
<h2 id="download"><a class="header-anchor" href="#download"></a>download</h2>
<p><a href="http://babun.github.io">http://babun.github.io</a></p>
<h2 id="set-oh-my-dash-theme"><a class="header-anchor" href="#set-oh-my-dash-theme"></a>set oh my dash theme</h2>
<ol>
<li>
<p>download <a href="https://github.com/powerline/fonts/blob/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20for%20Powerline.ttf">DejaVu Sans Mono</a></p>
</li>
<li>
<p><code>vim ~/.minttyrc</code>  copy/paste the below into the file</p>
</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">BoldAsFont&#x3D;no
Columns&#x3D;150
Rows&#x3D;55
Font&#x3D;DejaVu Sans Mono for Powerline
FontHeight&#x3D;10
Transparency&#x3D;low

ForegroundColour&#x3D;#A0A0A0
BackgroundColour&#x3D;#1B1D1E
CursorColour&#x3D;#A0A0A0
Black&#x3D;#1B1D1E
Red&#x3D;#F92672
Green&#x3D;#82B414
Yellow&#x3D;#FD971F
Blue&#x3D;#268BD2
Magenta&#x3D;#8C54FE
Cyan&#x3D;#56C2D6
White&#x3D;#CCCCC6
BoldRed&#x3D;#FF5995
BoldBlack&#x3D;#505354
BoldGreen&#x3D;#B7EB46
BoldYellow&#x3D;#FEED6C
BoldBlue&#x3D;#62ADE3
BoldMagenta&#x3D;#BFA0FE
BoldCyan&#x3D;#94D8E5
BoldWhite&#x3D;#F8F8F2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li><code>vim ~/.zshrc</code><br>
if you want to use other themes please let the theme file into <code>~/.oh-my-zsh/themes/</code></li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">ZSH_THEME&#x3D;&quot;agnoster&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="4">
<li>settings about mouse</li>
</ol>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/babun-notes/1.png?x-oss-process=style/blogimage" alt="mouse settings"></p>
<p>use shift and left mouse to choose</p>
<p>use right mouse to open menu</p>
<ol start="4">
<li>reload the babun</li>
</ol>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/babun-notes/2.png?x-oss-process=style/blogimage" alt="cool"></p>
<p><a href="https://www.sorendam.com/take-control-of-your-console-in-windows-with-babun-oh-my-zsh-and-powerline-fonts/">https://www.sorendam.com/take-control-of-your-console-in-windows-with-babun-oh-my-zsh-and-powerline-fonts/</a></p>
<h2 id="configure-Babun-ZSH-for-the-integrated-terminal-in-vscode"><a class="header-anchor" href="#configure-Babun-ZSH-for-the-integrated-terminal-in-vscode"></a>configure Babun/ZSH for the integrated terminal in vscode</h2>
<p>please use ZSH_THEME=“babun” or other themes because the theme “agnoster” has some problems<br>
1.</p>
<pre class="line-numbers language-none"><code class="language-none">&quot;terminal.integrated.shell.windows&quot;: &quot;C:\\Users\\losss\\.babun\\cygwin\\bin\\zsh.exe&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="2">
<li>Add on command in ~/.babunrc :</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">cd $OLDPWD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/babun-notes/3.png?x-oss-process=style/blogimage" alt="end"></p>
<p>use left mouse button to choose and copy then click the right mouse button to paste</p>
<h2 id="Package-manager"><a class="header-anchor" href="#Package-manager"></a>Package manager</h2>
<p>Babun provides a package manager called <code>pact</code>. It is similar to ‘apt-get’ or ‘yum’. Pact enables installing/searching/upgrading and deinstalling cygwin packages with no hassle at all. Just invoke pact --help to check how to use it.</p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>babun</tag>
      </tags>
  </entry>
  <entry>
    <title>chrome</title>
    <url>/2018/08/07/cn/chrome-extensions/</url>
    <content><![CDATA[<p>chrome 知识整理</p>
<span id="more"></span>
<h1>默认快捷键</h1>
<table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">alt+left</td>
<td style="text-align:left">后退</td>
</tr>
<tr>
<td style="text-align:left">alt+right</td>
<td style="text-align:left">前进</td>
</tr>
<tr>
<td style="text-align:left">cmd+y</td>
<td style="text-align:left">历史</td>
</tr>
<tr>
<td style="text-align:left">cmd+123</td>
<td style="text-align:left">标签间切换</td>
</tr>
</tbody>
</table>
<h1>常用插件</h1>
<h2 id="vimium"><a class="header-anchor" href="#vimium"></a>vimium</h2>
<blockquote>
<p>可以像用vim一样使用chrome</p>
</blockquote>
<h3 id="常用快捷键-2"><a class="header-anchor" href="#常用快捷键-2"></a>常用快捷键</h3>
<p>| 快捷键    | 功能                           |<br>
|:----------|: -------------------------------|<br>
| b         | 搜索书签                       |<br>
| B         | 搜索书签新标签页打开           |<br>
| F         | 在新标签页打开                 |<br>
| f         | 在当前页打开                   |<br>
| K         | 选中左边一个标签               |<br>
| J         | 选中右边一个标签               |<br>
| r         | reload 当前页面                |<br>
| t         | 新建一个标签                   |<br>
| o         | 搜索在当前页打开               |<br>
| O         | 搜索在新建页打开               |<br>
| yy        | 拷贝当前网址                   |<br>
| x         | 关闭当前页面                   |<br>
| gi        | 定位到第一个搜索框 tab可以切换 |<br>
| command+l | 定位到地址栏(mac自带)          |</p>
]]></content>
      <categories>
        <category>chrome</category>
      </categories>
      <tags>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>cs-learning</title>
    <url>/2017/10/31/cn/cs-learning/</url>
    <content><![CDATA[<p>记录我的计算机学习之路</p>
<span id="more"></span>
<p><a href="https://zhuanlan.zhihu.com/p/19959253">参照萧大给的路线</a></p>
<p>##　前言</p>
<ol>
<li>多看书少看视频</li>
<li>书可以下电子版的 用marginnote看</li>
</ol>
<h2 id="内功"><a class="header-anchor" href="#内功"></a>内功</h2>
<h3 id="English"><a class="header-anchor" href="#English"></a>English</h3>
<p>参考<a href="#">Post not found: language-learning</a></p>
<ol>
<li>新概念2</li>
</ol>
<h3 id="数学"><a class="header-anchor" href="#数学"></a>数学</h3>
<ol start="2">
<li>高等数学<br>
推荐 汤家凤老师的视频</li>
</ol>
<blockquote>
<p>视频教程</p>
<blockquote>
<p><a href="http://pan.baidu.com/s/1o8IEUE2">参考</a> m:9dpz</p>
</blockquote>
</blockquote>
<blockquote>
<p>参考书籍</p>
<blockquote>
<p>《高等数学上下》<br>
《普林斯顿微积分读本》</p>
</blockquote>
</blockquote>
<ol start="3">
<li><a href="https://www.bilibili.com/video/av8020753/?from=search&amp;seid=1484544829326888432">离散数学</a></li>
</ol>
<blockquote>
<p>参考书籍</p>
<blockquote>
<p>《离散数学及其应用》</p>
</blockquote>
</blockquote>
<ol start="4">
<li>
<p>线性代数</p>
</li>
<li>
<p>概率论</p>
</li>
</ol>
<h2 id="web-部分"><a class="header-anchor" href="#web-部分"></a>web 部分</h2>
<h3 id="front"><a class="header-anchor" href="#front"></a>front</h3>
<ol>
<li>
<p>html<br>
<a href="http://www.runoob.com/html/html-elements.html">html 菜鸟教程</a><br>
<a href="https://pugjs.org/api/getting-started.html">pug guide</a><br>
<a href="https://cn.vuejs.org/v2/guide/index.html">vue</a></p>
</li>
<li>
<p>js<br>
<a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000">js教程</a></p>
</li>
</ol>
<p><a href="https://www.imooc.com/learn/488">DOM探索之基础详解篇</a></p>
<blockquote>
<p>参考书籍</p>
<blockquote>
<p>《javascript语言精粹》<br>
《JavaScript DOM编程艺术 （第2版）》<br>
<a href="http://es6.ruanyifeng.com/">ECMAScript 6 入门</a><br>
《锋利的jquery》<br>
《你不知道的JavaScript》</p>
</blockquote>
</blockquote>
<ol start="3">
<li>css</li>
</ol>
<blockquote>
<p>参考书籍</p>
<blockquote>
<p>css权威指南<br>
<a href="http://sass-lang.com/guide">sass guide</a></p>
</blockquote>
</blockquote>
<h2 id="back"><a class="header-anchor" href="#back"></a>back</h2>
<ol>
<li>~~ [ MIT 6.00.1x （麻省理工：计算机科学和 Python 编程导论）]~~(<a href="http://www.xuetangx.com/courses/course-v1:MITx+6_00_1x+sp/about">http://www.xuetangx.com/courses/course-v1:MITx+6_00_1x+sp/about</a>)</li>
</ol>
<blockquote>
<p>因为是2.7所以暂时不看了</p>
</blockquote>
<ol start="2">
<li>
<p><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000">python教程</a></p>
</li>
<li>
<p>~~ [cs50]~~(<a href="https://www.bilibili.com/video/av12314616/?from=search&amp;seid=2063949878638470122">https://www.bilibili.com/video/av12314616/?from=search&amp;seid=2063949878638470122</a>)</p>
</li>
</ol>
<blockquote>
<p>很好的入门教程 因为我已经不是入门所以跳过了</p>
</blockquote>
]]></content>
      <categories>
        <category>cs</category>
      </categories>
      <tags>
        <tag>cs</tag>
      </tags>
  </entry>
  <entry>
    <title>css-notes</title>
    <url>/2017/10/31/cn/css-notes/</url>
    <content><![CDATA[<p>css 备忘</p>
<span id="more"></span>
<h2 id="学习途径"><a class="header-anchor" href="#学习途径"></a>学习途径</h2>
<h2 id="UI设计稿全自动切图和标注的工具推荐"><a class="header-anchor" href="#UI设计稿全自动切图和标注的工具推荐"></a><a href="https://github.com/jawil/blog/issues/11">UI设计稿全自动切图和标注的工具推荐</a></h2>
<p>! ps 有钱买个mac</p>
<h2 id="ps插件"><a class="header-anchor" href="#ps插件"></a>ps插件</h2>
<p><a href="http://www.cutterman.cn/zh/cutterman_usage">cutterman</a></p>
<h2 id="常用语法"><a class="header-anchor" href="#常用语法"></a>常用语法</h2>
<h3 id="选择器"><a class="header-anchor" href="#选择器"></a>选择器</h3>
<h4 id="伪类选择器"><a class="header-anchor" href="#伪类选择器"></a>伪类选择器</h4>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">a</span><span class="token punctuation">:</span>link
<span class="token property">a</span><span class="token punctuation">:</span>visited
<span class="token property">a</span><span class="token punctuation">:</span>hover
<span class="token property">a</span><span class="token punctuation">:</span>active
//其他标签也可以用
<span class="token property">p</span><span class="token punctuation">:</span>hover
//获取焦点
<span class="token property">input</span><span class="token punctuation">:</span>focus
//被选择
<span class="token property">p</span><span class="token punctuation">:</span><span class="token punctuation">:</span>selection
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="伪元素"><a class="header-anchor" href="#伪元素"></a>伪元素</h4>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p:first-letter
p:first-line

//before 结合content使用
//紧随p标签后面的位置
p:before</span> <span class="token punctuation">&#123;</span>
  <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">"出现在段落最前面"</span>
<span class="token punctuation">&#125;</span>

<span class="token selector">p:after</span><span class="token punctuation">&#123;</span>
  <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">"出现在段落最前面"</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="常见技巧"><a class="header-anchor" href="#常见技巧"></a>常见技巧</h2>
<h3 id="not"><a class="header-anchor" href="#not"></a>not</h3>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">ul li:not(li:last-child)</span><span class="token punctuation">&#123;</span>
  <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="img"><a class="header-anchor" href="#img"></a>img</h3>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 将一个方形图片 显示成圆形 */</span>
<span class="token property">border-radius</span><span class="token punctuation">:</span>50%<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 如果圆形图片显示有偏移则需要将图片放入div中给div加overflow --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circular--landscape<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxx.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.circular--landscape</span><span class="token punctuation">&#123;</span>
    <span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span>
    <span class="token property">border-radius</span><span class="token punctuation">:</span>50%<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token selector">.circular--landscape img</span><span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span>auto<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span>-50px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>eclipse</title>
    <url>/2019/03/07/cn/eclipse/</url>
    <content><![CDATA[<p>eclipse 常见配置和快捷键</p>
<span id="more"></span>
<h1>配置</h1>
<h2 id="设置tab为空格"><a class="header-anchor" href="#设置tab为空格"></a>设置tab为空格</h2>
<ol>
<li>Click Window » Preferences</li>
<li>Expand Java » Code Style</li>
<li>Click Formatter</li>
<li>Click the Edit button</li>
<li>Click the Indentation tab</li>
<li>Under General Settings, set Tab policy to: Spaces only</li>
<li>Click OK ad nauseam to apply the changes.</li>
</ol>
<h2 id="设置显示空格"><a class="header-anchor" href="#设置显示空格"></a>设置显示空格</h2>
<p>Window-&gt;Preferences-&gt;General-&gt;Editors-&gt;Text Editors-&gt;Show whitespace characters</p>
<h2 id="安装vim"><a class="header-anchor" href="#安装vim"></a>安装vim</h2>
<p>google 搜vrapper 或者<a href="https://sourceforge.net/projects/vrapper/files/latest/download?source=files">点此下载</a></p>
<h1>快捷键</h1>
<table>
<thead>
<tr>
<th>按键</th>
<th>操作</th>
</tr>
</thead>
<tbody>
<tr>
<td>ctrl+h</td>
<td>全局搜索</td>
</tr>
<tr>
<td>ctrl + 1</td>
<td>quick fix</td>
</tr>
<tr>
<td>ctrl + shift + r</td>
<td>打开资源</td>
</tr>
<tr>
<td>ctrl + shift + f</td>
<td>formatting</td>
</tr>
<tr>
<td>ctrl+o</td>
<td>预览类里面的所有方法和属性</td>
</tr>
<tr>
<td>ctrl+e</td>
<td>在已打开文件中切换</td>
</tr>
<tr>
<td>shift+enter</td>
<td>在当前行之下创建一个空白行</td>
</tr>
<tr>
<td>ctrl+shift+o</td>
<td>清除不需要引用的包</td>
</tr>
<tr>
<td>ctrl+l</td>
<td>跳转到指定行</td>
</tr>
<tr>
<td>ctrl+t</td>
<td>查看继承结构</td>
</tr>
<tr>
<td>alt+↑</td>
<td>上移本行代码</td>
</tr>
<tr>
<td>ctrl+alt+h</td>
<td>查看方法被调用的具体位置</td>
</tr>
</tbody>
</table>
<h1>自动补全</h1>
<p>コンテンツ　アシスト java自动提示处恢复默认的.</p>
<h1>参考</h1>
<p><a href="https://dzone.com/articles/top-30-eclipse-keyboard-shortcuts-for-java-program-1">30 Useful Eclipse Keyboard Shortcuts for Java Programmers</a></p>
]]></content>
      <categories>
        <category>ide</category>
      </categories>
      <tags>
        <tag>eclipse,ide</tag>
      </tags>
  </entry>
  <entry>
    <title>emoji</title>
    <url>/2017/08/07/cn/emoji/</url>
    <content><![CDATA[<p>在 hexo 中使用 emoji</p>
<span id="more"></span>
<ol>
<li>安装 markdown-it</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> un hexo-renderer-marked --save
<span class="token function">npm</span> i hexo-renderer-markdown-it --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="2">
<li>没有 emoji 的表情插件，因此要安装 markdown-it-emoji</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> markdown-it-emoji --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="3">
<li>配置 config.yml</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">markdown:
  render:
    html: true
    xhtmlOut: false
    breaks: true
    linkify: true
    typographer: true
    quotes: &#39;“”‘’&#39;
  plugins:
    - markdown-it-abbr
    - markdown-it-footnote
    - markdown-it-ins
    - markdown-it-sub
    - markdown-it-sup
    - markdown-it-emoji
  anchors:
    level: 2
    collisionSuffix: &#39;v&#39;
    permalink: true
    permalinkClass: header-anchor
    permalinkSymbol: &quot;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>demo</p>
<pre class="line-numbers language-none"><code class="language-none">:blush: :laughing:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>😊 😆<br>
<a href="https://github.com/guodongxiaren/README/blob/master/emoji.md">更多 emoji 参考</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>emoji</tag>
      </tags>
  </entry>
  <entry>
    <title>follow-rss</title>
    <url>/2024/10/15/cn/follow-rss/</url>
    <content><![CDATA[<span id="more"></span>
<p>以下是 RSS 订阅认证信息：</p>
<pre><code>
<follow_challenge>
    <feedId>68663100263030784</feedId>
    <userId>68182423782777856</userId>
</follow_challenge>
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>git-alias</title>
    <url>/2017/08/13/cn/git-alias/</url>
    <content><![CDATA[<p>git中修改别名</p>
<span id="more"></span>
<h2 id="修改方式"><a class="header-anchor" href="#修改方式"></a>修改方式</h2>
<ol>
<li>直接在命令行中修改</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global alias.st status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="2">
<li>或者找到文件<br>
<img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/git-alias/1.png?x-oss-process=style/blogimage" alt=""></li>
<li>修改对应的alias<br>
<img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/git-alias/2.png?x-oss-process=style/blogimage" alt=""></li>
<li>以下是我的alias名(仅作个人备忘)</li>
</ol>
<table>
<thead>
<tr>
<th>alias</th>
<th>full name</th>
</tr>
</thead>
<tbody>
<tr>
<td>st</td>
<td>git status</td>
</tr>
<tr>
<td>co</td>
<td>git checkout</td>
</tr>
<tr>
<td>ci</td>
<td>git commit -m</td>
</tr>
<tr>
<td>br</td>
<td>git branch</td>
</tr>
<tr>
<td>last</td>
<td>git log -1</td>
</tr>
<tr>
<td>lg</td>
<td>git log --color --graph --pretty=format:‘%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ --abbrev-commit</td>
</tr>
<tr>
<td>unstage</td>
<td>git reset HEAD</td>
</tr>
<tr>
<td>me</td>
<td>git merge --no-ff</td>
</tr>
</tbody>
</table>
<h2 id="git-in-zsh"><a class="header-anchor" href="#git-in-zsh"></a>git in zsh</h2>
<table>
<thead>
<tr>
<th>shortcuts</th>
<th>operation</th>
</tr>
</thead>
<tbody>
<tr>
<td>gaa</td>
<td>git add -all</td>
</tr>
<tr>
<td>gst</td>
<td>git status</td>
</tr>
<tr>
<td>gb</td>
<td>git branch</td>
</tr>
<tr>
<td>gcmsg</td>
<td>git commit -m</td>
</tr>
<tr>
<td>gd</td>
<td>git diff</td>
</tr>
<tr>
<td>gcb</td>
<td>git checkout -b</td>
</tr>
<tr>
<td>gco</td>
<td>git checkout</td>
</tr>
<tr>
<td>grhh</td>
<td>git reset HEAD --hard</td>
</tr>
<tr>
<td>ggp</td>
<td>git push origin $(current_branch)</td>
</tr>
<tr>
<td>ggl</td>
<td>git pull $(current_branch)</td>
</tr>
<tr>
<td>gco</td>
<td>git checkout</td>
</tr>
<tr>
<td>gm</td>
<td>git merge</td>
</tr>
</tbody>
</table>
<h2 id="参考文档"><a class="header-anchor" href="#参考文档"></a>参考文档</h2>
<p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375234012342f90be1fc4d81446c967bbdc19e7c03d3000">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375234012342f90be1fc4d81446c967bbdc19e7c03d3000</a></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git</title>
    <url>/2017/09/08/cn/git-commands/</url>
    <content><![CDATA[<p>常用的git 命令备忘及常见问题</p>
<span id="more"></span>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/git-commands/1.png?x-oss-process=style/blogimage" alt=""></p>
<h1>git command</h1>
<h2 id="终极杀招"><a class="header-anchor" href="#终极杀招"></a>终极杀招</h2>
<p>任何命令有问题就直接在后面 --help 直接到官方文档那里不会点哪里<br>
比如</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit --help
<span class="token function">git</span> <span class="token builtin class-name">help</span> commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="第一次装git连接github时需要的命令"><a class="header-anchor" href="#第一次装git连接github时需要的命令"></a>第一次装git连接github时需要的命令</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"losss"</span>

<span class="token function">git</span> config --global user.email <span class="token string">"stdiolosss@gmail.com"</span>  

<span class="token comment"># /home/losss/.ssh/id_rsa.pub</span>
ssh-keygen -t rsa -C <span class="token string">"stdiolosss@gmail.com"</span>
<span class="token comment"># 测试连接</span>
<span class="token function">ssh</span> -T git@github.com

<span class="token function">ssh</span> -T git@git.coding.net

如果提示
``<span class="token variable"><span class="token variable">`</span><span class="token function">bash</span>
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE<span class="token operator">!</span>          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0670 <span class="token keyword">for</span> <span class="token string">'/home/losss/.ssh/id_rsa'</span> are too open.
It is recommended that your private key files are NOT accessible by others.
This private key will be ignored.
Load key <span class="token string">"/home/losss/.ssh/id_rsa"</span><span class="token builtin class-name">:</span> bad permissions
Permission denied <span class="token punctuation">(</span>publickey<span class="token punctuation">)</span>.
<span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span><span class="token function">bash</span>
运行如下命令
<span class="token variable">`</span></span>``bash
 <span class="token function">chmod</span> <span class="token number">600</span> /home/losss/.ssh/id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>git clone …</p>
<p>commit 信息写错了 需要修改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit --amend<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="常用命令"><a class="header-anchor" href="#常用命令"></a>常用命令</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> status <span class="token comment"># 查看工作区和缓冲区状态</span>
<span class="token function">git</span> <span class="token function">add</span> --all <span class="token comment"># 将工作区修改暂存到缓冲区</span>
<span class="token function">git</span> commit -m<span class="token string">"&lt;comment>"</span> <span class="token comment"># 提交到仓库</span>
<span class="token function">git</span> push origin master <span class="token comment"># 推送到远程分支</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>git ignore(并不常用 但是我不知道怎么分类了)</p>
<p>检查.gitignore 文件规则</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> check-ignore -v App.class<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="版本的回退与前进"><a class="header-anchor" href="#版本的回退与前进"></a>版本的回退与前进</h2>
<p>回退到上一个版本 如果是上上个版本就是HEAD^^</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 回到上次的commit</span>
<span class="token function">git</span> reset --hard HEAD^

<span class="token comment"># 回到上一次操作</span>
<span class="token function">git</span> reset^<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>回到固定的版本</p>
<blockquote>
<p>6位 hash 就可以</p>
</blockquote>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset --hard <span class="token operator">&lt;</span>commit-hash<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>what is --hard</p>
<blockquote>
<p>Resets the index and working tree. Any changes to tracked files in the working tree since <commit> are discarded.<br>
与hard 对应的还有–soft</p>
</blockquote>
<p>查看命令历史</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reflog

<span class="token comment"># 这个命令可以配合 git reset 使用</span>
<span class="token function">git</span> reset <span class="token punctuation">(</span>git reflog 里前面的id<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="分支的操作"><a class="header-anchor" href="#分支的操作"></a>分支的操作</h2>
<p>创建并切换到新分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout -b <span class="token operator">&lt;</span>branch-name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>创建但是不切换分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch new <span class="token operator">&lt;</span>branch-name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>删除分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -d <span class="token builtin class-name">test</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>–no-ff 这样删除分支之后再git log 里面仍然可以显示出分支信息</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> merge --no-ff -m <span class="token string">"merge with no-ff"</span> dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="撤销操作"><a class="header-anchor" href="#撤销操作"></a>撤销操作</h2>
<p>撤销在add之前的修改 当然也可以用来回复被rm掉的文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout --readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>恢复暂存区的所有文件到工作区</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>撤销add</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset HEAD <span class="token operator">&lt;</span>file<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>去掉某个commit</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> revert <span class="token operator">&lt;</span>commit-bash<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>git stash<br>
这个命令是暂时封存工作空间的状态 <a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000">详细查看</a><br>
如果有多个stash的时候要小心 如果不加参数默认就会对最近的一次操作</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>还原最近一次操作 并且不删除标记</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash apply<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果需要还原对应序号的话</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash apply --index <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>会还原最近一次的保存 会删除标记</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash pop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>删除最近的一次的保存</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash drop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>显示list</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>显示对应保存中的内容 可以对应list中的序号</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash show <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>git stash 使用例子</p>
<ol>
<li>本地有修改，能不能先git pull</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash <span class="token comment"># 工作区修改暂存</span>
<span class="token function">git</span> pull  <span class="token comment"># 更新分支</span>
<span class="token function">git</span> stash pop <span class="token comment"># 暂存修改恢复到工作区</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>有bug需要修改可以先使用git stash 把现有的工作保存起来然后切换到别的分支修改之后再切回来使用git stash pop 还原之前的工作 在多人协作的情况下有用</li>
</ol>
<h2 id="关联远程仓库"><a class="header-anchor" href="#关联远程仓库"></a>关联远程仓库</h2>
<p>关联远程仓库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> <span class="token operator">&lt;</span>name<span class="token operator">></span> <span class="token operator">&lt;</span>git-repo-url<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>查看远端关联的仓库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>强制推送本地版本到远端</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin master -f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>远程分支被别人更新了，你需要更新代码</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull origin <span class="token operator">&lt;</span>branch-name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>重新设置远端地址</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote set-url origin <span class="token operator">&lt;</span>your-git-url<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1>常见问题</h1>
<h2 id="中文乱码"><a class="header-anchor" href="#中文乱码"></a>中文乱码</h2>
<p>使用git add添加要提交的文件的时候，如果文件名是中文，会显示形如 274\232\350\256\256\346\200\273\347\273\223.png 的乱码。</p>
<p>解决方案：在bash提示符下输入：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">
<span class="token function">git</span> config --global core.quotepath <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>core.quotepath设为false的话，就不会对0x80以上的字符进行quote。中文显示正常。</p>
<h2 id="alias-zsh中的设置"><a class="header-anchor" href="#alias-zsh中的设置"></a>alias(zsh中的设置)</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> ~/.zshrc
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">gm</span><span class="token operator">=</span><span class="token string">"git merge --no-ff "</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="hexo-中移除-next的-git文件后仍识别此git仓库"><a class="header-anchor" href="#hexo-中移除-next的-git文件后仍识别此git仓库"></a>hexo 中移除 next的.git文件后仍识别此git仓库</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span> --cached themes/next<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-add-checkbox</title>
    <url>/2017/08/09/cn/hexo-add-checkbox/</url>
    <content><![CDATA[<p>在hexo中添加复选框</p>
<span id="more"></span>
<h2 id="配置"><a class="header-anchor" href="#配置"></a>配置</h2>
<ol>
<li>修改 hexo 的 markdown 渲染引擎：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> hexo-blog.github.io/ <span class="token comment"># 首先进入你的 hexo 的根目录</span>
<span class="token function">npm</span> un hexo-renderer-marked --save <span class="token comment"># 卸载 hexo 默认的 markdown 渲染引擎</span>
<span class="token function">npm</span> i hexo-renderer-markdown-it --save <span class="token comment"># 安装 markdown-it</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>下载 markdown-it 的 markdown-it-checkbox 插件：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> node_modules/hexo-renderer-markdown-it/
<span class="token function">npm</span> <span class="token function">install</span> markdown-it-checkbox --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="3">
<li>在 hexo 的全局配置文件 _config.yml 添加以下：</li>
</ol>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Markdown-it config</span>
<span class="token comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span>
<span class="token key atrule">markdown</span><span class="token punctuation">:</span>
  <span class="token key atrule">render</span><span class="token punctuation">:</span>
    <span class="token key atrule">html</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># Doesn't escape HTML content so the tags will appear as html.</span>
    <span class="token key atrule">xhtmlOut</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># Parser will not produce XHTML compliant code.</span>
    <span class="token key atrule">breaks</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># Parser produces `&lt;br>` tags every time there is a line break in the source document.</span>
    <span class="token key atrule">linkify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># Returns text links as text.</span>
    <span class="token key atrule">typographer</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># Substitution of common typographical elements will take place.</span>
    <span class="token key atrule">quotes</span><span class="token punctuation">:</span> <span class="token string">'“”‘’'</span> <span class="token comment"># "double" will be turned into “single”</span>
                   <span class="token comment"># 'single' will be turned into ‘single’</span>
  <span class="token key atrule">plugins</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> markdown<span class="token punctuation">-</span>it<span class="token punctuation">-</span>abbr
    <span class="token punctuation">-</span> markdown<span class="token punctuation">-</span>it<span class="token punctuation">-</span>checkbox <span class="token comment"># 本行启用了 checkbox 插件</span>
    <span class="token punctuation">-</span> markdown<span class="token punctuation">-</span>it<span class="token punctuation">-</span>emoji <span class="token comment"># 如果你想在 md 中使用 emoji 表情的话，需要另外下载相关插件</span>
    <span class="token punctuation">-</span> markdown<span class="token punctuation">-</span>it<span class="token punctuation">-</span>footnote
    <span class="token punctuation">-</span> markdown<span class="token punctuation">-</span>it<span class="token punctuation">-</span>ins
    <span class="token punctuation">-</span> markdown<span class="token punctuation">-</span>it<span class="token punctuation">-</span>sub
    <span class="token punctuation">-</span> markdown<span class="token punctuation">-</span>it<span class="token punctuation">-</span>sup
  <span class="token key atrule">anchors</span><span class="token punctuation">:</span>
    <span class="token key atrule">level</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment"># Minimum level for ID creation. (Ex. h2 to h6)</span>
    <span class="token key atrule">collisionSuffix</span><span class="token punctuation">:</span> <span class="token string">'v'</span> <span class="token comment"># A suffix that is prepended to the number given if the ID is repeated.</span>
    <span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># If true, creates an anchor tag with a permalink besides the heading.</span>
    <span class="token key atrule">permalinkClass</span><span class="token punctuation">:</span> header<span class="token punctuation">-</span>anchor <span class="token comment"># Class used for the permalink anchor tag.</span>
    <span class="token key atrule">permalinkSymbol</span><span class="token punctuation">:</span> ¶ <span class="token comment"># The symbol used to make the permalink.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="显示效果"><a class="header-anchor" href="#显示效果"></a>显示效果</h2>
<ul>
<li><input type="checkbox" id="checkbox0" checked="true"><label for="checkbox0">测试</label></li>
<li><input type="checkbox" id="checkbox1"><label for="checkbox1">测试</label></li>
</ul>
<h2 id="修改复选框的样式"><a class="header-anchor" href="#修改复选框的样式"></a>修改复选框的样式</h2>
<ol>
<li>找到自定义样式的文件：themes/next/source/css/_custom/ 路径下的 custom.styl 。</li>
<li>添加以下样式：</li>
</ol>
<pre class="line-numbers language-code" data-language="code"><code class="language-code">input[type&#x3D;&quot;checkbox&quot;] &#123;
  display: none !important; &#x2F;&#x2F; by imo: to overwrite styles in DuoShuo-Comments-Plugin
&#125;
input[type&#x3D;&quot;checkbox&quot;] + label::before &#123;
  content: &#39;\a0&#39;;
  display: inline-block;
  margin-right: .2em;
  border: 1px solid;
  border-radius: .2em;
  width: .8em;
  height: .8em;
  vertical-align: .1em;
  text-indent: .1em;
  line-height: .7;
&#125;
input[type&#x3D;&quot;checkbox&quot;]:checked + label::before &#123;
  content: &#39;\2713&#39;;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用-markdown-it-的-anchors-功能带来的副作用"><a class="header-anchor" href="#使用-markdown-it-的-anchors-功能带来的副作用"></a>使用 markdown-it 的 anchors 功能带来的副作用</h2>
<p>使用 markdown-it 的 anchors 功能后，文章目录（Table of Content, TOC）中每个章节标题前均出现永久链接符号（默认为 ¶ ）。</p>
<ol>
<li>找到 hexo 定义 toc 函数的文件：/node_modules/hexo/lib/plugins/helper 目录下的 toc.js 。</li>
<li>修改生成标题文本的代码行 var text = $(this).text(); 为如下即可：</li>
</ol>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> text <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// by imo: remove markdown-it's anchor character in TOC</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="参考文档-2"><a class="header-anchor" href="#参考文档-2"></a>参考文档</h2>
<p>Hexo 的 markdown-it 渲染引擎和其相关插件 <a href="http://baishusama.github.io/2016/12/24/hexo-render-markdown-it-and-its-plugins/">http://baishusama.github.io/2016/12/24/hexo-render-markdown-it-and-its-plugins/</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-notes</title>
    <url>/2017/11/26/cn/hexo-notes/</url>
    <content><![CDATA[<p>hexo 博客搭建笔记</p>
<span id="more"></span>
<h2 id="博客源码-branch-dev"><a class="header-anchor" href="#博客源码-branch-dev"></a><a href="https://github.com/lossss/lossss.github.io">博客源码</a> branch:dev</h2>
<h2 id="安装过程"><a class="header-anchor" href="#安装过程"></a>安装过程</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> <span class="token function">node</span>
//换源
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org
//install hexo
<span class="token function">npm</span> <span class="token function">install</span> -g hexo
//init
<span class="token builtin class-name">cd</span> blog
<span class="token function">npm</span> <span class="token function">install</span>
hexo clean
hexo g
hexo s
hexo d -g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="本博客编译问题"><a class="header-anchor" href="#本博客编译问题"></a>本博客编译问题</h2>
<ol>
<li>
<p>确保更新到最新的 node 和 hexo</p>
</li>
<li>
<p><s>push 上去的 themes 中的 next 文件夹是空的这个暂时没想好怎么解决</s><br>
直接删除 next 的.git 文件即可 如果不行可以用<code>git rm --cached themes/next</code>清除缓存试试</p>
</li>
<li>
<p>部署后 css 不加载</p>
</li>
</ol>
<ul>
<li>
<ol>
<li>在_config.yml 中修改 url 为新的 url</li>
</ol>
</li>
<li>
<ol start="2">
<li>删除.deploy_git</li>
</ol>
</li>
<li>
<ol start="3">
<li>hexo d -g</li>
</ol>
</li>
</ul>
<h2 id="写-blog-时的图片处理"><a class="header-anchor" href="#写-blog-时的图片处理"></a>写 blog 时的图片处理</h2>
<h3 id="截图"><a class="header-anchor" href="#截图"></a>截图</h3>
<p>Mac 的话截图推荐用 Xnip 可以打标注很方便</p>
<h3 id="图片压缩"><a class="header-anchor" href="#图片压缩"></a>图片压缩</h3>
<p>当然你可以使用 <a href="https://tinypng.com/">tinypng</a>来压缩你的图片文件<br>
我用的是 命令行版本 <a href="https://www.npmjs.com/package/tinypng-cli">https://www.npmjs.com/package/tinypng-cli</a></p>
<ol>
<li>安装</li>
</ol>
<p><code>npm install -g tinypng-cli</code></p>
<p>你需要在官网申请一个 api key 然后在自己的 home 路径下新建一个.tinypng 文件吧自己的 key 放进去</p>
<ol start="2">
<li>使用</li>
</ol>
<ul>
<li>压缩当前目录下所有图片：tinypng .<br>
递归压缩子目录：tinypng -r</li>
<li>压缩当前目录下所有图片：tinypng .</li>
<li>递归压缩子目录：tinypng -r</li>
<li>压缩单个目录：tinypng assets/img</li>
<li>压缩多个目录：tinypng assets/img1 assets/img2</li>
<li>压缩单张图片：tinypng assets/img/demo.png</li>
<li>压缩多张图片：tinypng assets/img/demo1.png assets/img/demo2.png</li>
<li>单独指定 API key：tinypng demo.png -k E99a18c4f8cb3EL5f2l08u368_922e03</li>
</ul>
<h3 id="图床工具"><a class="header-anchor" href="#图床工具"></a>图床工具</h3>
<p>可以在一篇博客编辑完了把所有的图片全选重命名,这样可以方便自己在云端后台管理</p>
<p>现在使用的是 <a href="https://picgo.github.io/PicGo-Doc/zh/">PicGo</a></p>
<p>vscode 上有对应的插件 因为我这里用的是阿里 OSS 如果要使用这个插件的话需要再 OSS 后台设置 <code>图片处理-&gt;访问设置-&gt;原图保护(关闭)</code> 当然对应的防盗链也是可以直接开启的不影响</p>
<p>vscode 上快捷键为<code>cmd+opt+u</code> 可以直接复制文件之后直接按快捷键复制到 vscode 中,免去了复杂的上传操作</p>
<p>还有需要注意的是 图片的名字不能有空格 不然链接名字会不准确</p>
<p>我的 blog 的编辑流如下<br>
<code>写blog-&gt;截图修改名字(例:hexo-notes-1.jpg)-&gt;图片压缩网压缩-&gt;vs-picgo-&gt;实时markdown预览(shift+opt+m)</code></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>html-notes</title>
    <url>/2017/10/15/cn/html-notes/</url>
    <content><![CDATA[<p>html 笔记</p>
<span id="more"></span>
<h2 id="问题搜索"><a class="header-anchor" href="#问题搜索"></a>问题搜索</h2>
<p>前端有问题 搜索时前面加MDN</p>
<h2 id="常用标签"><a class="header-anchor" href="#常用标签"></a>常用标签</h2>
<h3 id="a"><a class="header-anchor" href="#a"></a>a</h3>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--基本用法--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>跳转目标<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>目标窗口的弹出方式<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文本或图像<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
target
_self
_blank 新窗口打开

<span class="token comment">&lt;!--锚点定位--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#live<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>live<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>live<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>live<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="base"><a class="header-anchor" href="#base"></a>base</h3>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="特殊字符"><a class="header-anchor" href="#特殊字符"></a>特殊字符</h3>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span> 空格
<span class="token entity named-entity" title="&lt;">&amp;lt;</span> &lt;
<span class="token entity named-entity" title="&gt;">&amp;gt;</span> ><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="列表"><a class="header-anchor" href="#列表"></a>列表</h3>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--无序列表--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!--有序列表--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!--自定义列表--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>名词1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>名词1解释1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>名词1解释2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="table"><a class="header-anchor" href="#table"></a>table</h3>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">></span></span>人员表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>性别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小明<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小王<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>行合并: rowspan</p>
<p>列合并: colspan</p>
<h3 id="html5新加"><a class="header-anchor" href="#html5新加"></a>html5新加</h3>
<p>datalist</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>datalist</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>jay<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>liu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>xiaoming<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>xiaoqiang<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datalist</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>fieldset</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">></span></span>登陆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>legend</span><span class="token punctuation">></span></span>
  用户名 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span> 密码 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="emmet-2"><a class="header-anchor" href="#emmet-2"></a>emmet</h2>
<h3 id="文档-2"><a class="header-anchor" href="#文档-2"></a>文档</h3>
<p>官方文档 <a href="https://docs.emmet.io/">https://docs.emmet.io/</a></p>
<p>写法对照表 <a href="https://docs.emmet.io/cheat-sheet/">https://docs.emmet.io/cheat-sheet/</a></p>
<h3 id="Emmet-语法"><a class="header-anchor" href="#Emmet-语法"></a>Emmet 语法</h3>
<h4 id="标签"><a class="header-anchor" href="#标签"></a>标签</h4>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">div ⟹ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

foo ⟹ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foo</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foo</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>同时Emmet 还采用了css 的元素选择器</p>
<h4 id="后代："><a class="header-anchor" href="#后代："></a>后代： &gt;</h4>
<p>div&gt;ul&gt;li ⟹</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="兄弟："><a class="header-anchor" href="#兄弟："></a>兄弟：+</h4>
<p>div+p+bq ⟹</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="上级："><a class="header-anchor" href="#上级："></a>上级：^</h4>
<p>div+div&gt;p&gt;span+em^bq ⟹</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="乘法："><a class="header-anchor" href="#乘法："></a>乘法：*</h4>
<p>ul&gt;li*5 ⟹</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="分组："><a class="header-anchor" href="#分组："></a>分组：()</h4>
<pre class="line-numbers language-none"><code class="language-none">div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p ⟹<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="ID-和-CLASS"><a class="header-anchor" href="#ID-和-CLASS"></a>ID 和 CLASS</h4>
<pre class="line-numbers language-none"><code class="language-none">div#header+div.page+div#footer.class1.class2.class3 ⟹<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>class1 class2 class3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="自定义属性"><a class="header-anchor" href="#自定义属性"></a>自定义属性</h4>
<pre class="line-numbers language-none"><code class="language-none">td[title&#x3D;&quot;Hello world!&quot; colspan&#x3D;3] ⟹<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hello world!<span class="token punctuation">"</span></span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="自增符号："><a class="header-anchor" href="#自增符号："></a>自增符号：$</h4>
<pre class="line-numbers language-none"><code class="language-none">ul&gt;li.item$*5 ⟹<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="改变自增基数和方向："><a class="header-anchor" href="#改变自增基数和方向："></a>改变自增基数和方向：@</h4>
<pre class="line-numbers language-none"><code class="language-none">ul&gt;li.item$@-*5 ⟹<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">ul&gt;li.item$@3*5 ⟹<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="文本："><a class="header-anchor" href="#文本："></a>文本：{}</h4>
<pre class="line-numbers language-none"><code class="language-none">a[#]&#123;Click me&#125; ⟹<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="Lorem-Ipsum-乱数假文-：lorem"><a class="header-anchor" href="#Lorem-Ipsum-乱数假文-：lorem"></a>Lorem Ipsum(乱数假文)：lorem</h4>
<pre class="line-numbers language-none"><code class="language-none">lorem ⟹ Lorem ipsum dolor sit amet, consectetur adipisicing elit. Similique impedit quaeiure quos itaque, deserunt dolore in consequatur veniam cumque, est voluptatibus minima, velit culpa, reprehenderit aspernatur iste facilis. Rerum!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="Emmet的css支持"><a class="header-anchor" href="#Emmet的css支持"></a>Emmet的css支持</h3>
<h4 id="css属性"><a class="header-anchor" href="#css属性"></a>css属性</h4>
<pre class="line-numbers language-none"><code class="language-none">m ⟹ margin:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">fz ⟹ font-size: ......<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>其实这些属性简写都不需要特意去记，你只组要按着你的思路来猜这个属性的简写就好了。</p>
<h4 id="属性值"><a class="header-anchor" href="#属性值"></a>属性值</h4>
<pre class="line-numbers language-none"><code class="language-none">m10 ⟹ margin: 10px; mt10 ⟹ margin-top: 10px; ......<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>多个属性值：对于有多个属性值的CSS属性，在编写时只需在属性值之间添加-：</p>
<pre class="line-numbers language-none"><code class="language-none">m4-6 ⟹ margin: 4px 6px;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Emmet默认单位为px，如果你想使用其他单位就继续看下面吧</p>
<h4 id="单位"><a class="header-anchor" href="#单位"></a>单位</h4>
<p>在Emmet中每一个单位都有其缩写形式(当然了你记不住也没关系，直接按全就好)</p>
<ul>
<li>p → %</li>
<li>e → em</li>
<li>r→ rem</li>
<li>x → ex</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">w100p ⟹ width: 100% m10p30e5x ⟹ margin: 10% 30em 5ex<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>引用于 <a href="https://juejin.im/post/592bdebfac502e006c831d32">https://juejin.im/post/592bdebfac502e006c831d32</a></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>install-ubuntu-with-win10</title>
    <url>/2017/11/15/cn/install-ubuntu-with-win10/</url>
    <content><![CDATA[<p>使用ubuntu和win10双系统</p>
<span id="more"></span>
<h2 id="why-ubuntu"><a class="header-anchor" href="#why-ubuntu"></a>why ubuntu</h2>
<ol>
<li>没钱买mac</li>
<li>win下的命令行还是太弱了</li>
</ol>
<h2 id="let’s-go"><a class="header-anchor" href="#let’s-go"></a>let’s go</h2>
<ol>
<li>
<p><a href="https://www.ubuntu.com/download/desktop">ubuntu</a></p>
</li>
<li>
<p><a href="https://rufus.akeo.ie/">u盘启动制作</a></p>
</li>
<li>
<p>插入u盘 按如下设置<br>
<img src="http://ou7k0sem6.bkt.clouddn.com/install-ubuntu-with-win10/1.png" alt="setting"></p>
</li>
<li>
<p>重启电脑然后选择从u盘启动<br>
我选择的是 install ubuntu alongside windows</p>
</li>
</ol>
<h2 id="一些设置"><a class="header-anchor" href="#一些设置"></a>一些设置</h2>
<p><a href="https://jingyan.baidu.com/article/63acb44ae4062c61fcc17e27.html">开机默认启动windows</a></p>
<p><a href="https://www.cnblogs.com/shareidea/p/5465306.html">双系统时间同步</a></p>
<h2 id="常用软件"><a class="header-anchor" href="#常用软件"></a>常用软件</h2>
<h2 id="ubuntu-中安装软件的方法"><a class="header-anchor" href="#ubuntu-中安装软件的方法"></a>ubuntu 中安装软件的方法</h2>
<ol>
<li>apt</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>. 普通安装：apt-get <span class="token function">install</span> softname1 softname2 …<span class="token punctuation">;</span>
<span class="token number">2</span>. 修复安装：apt-get -f <span class="token function">install</span> softname1 softname2<span class="token punctuation">..</span>. <span class="token punctuation">;</span>
<span class="token punctuation">(</span>-f Atemp to correct broken dependencies<span class="token punctuation">)</span>
<span class="token number">3</span>. 重新安装：apt-get --reinstall <span class="token function">install</span> softname1 softname2<span class="token punctuation">..</span>.<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="https://linux.cn/article-5069-1.html">清理</a></p>
<h2 id="安装-卸载软件"><a class="header-anchor" href="#安装-卸载软件"></a>安装&amp;卸载软件</h2>
<h3 id="deb"><a class="header-anchor" href="#deb"></a>.deb</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dpkg -i XXX.deb <span class="token comment"># XXX为该deb包的文件名</span>
<span class="token comment">#如果出现错误则安装依赖</span>
<span class="token function">apt-get</span> <span class="token function">install</span> -f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>自动清除残留配置文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> autoclean 
<span class="token function">sudo</span> <span class="token function">apt-get</span> autoremove<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>完全卸载</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> remove --purge name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>使用dpkg卸载</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dpkg -r packagename <span class="token comment"># 如果不知道packagename 可以用 sudo dpkg -i xxx.deb 查询</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>解压tar.gz文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> -xzvf file.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>参考 <a href="https://zhuanlan.zhihu.com/p/27187622">https://zhuanlan.zhihu.com/p/27187622</a></p>
<p>解压zip</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> unar
unar your-zip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>更多命令行的内容可以参考我的另一篇博客<a href="#">Post not found: linux-notes</a></p>
<h3 id="安装搜狗输入法"><a class="header-anchor" href="#安装搜狗输入法"></a>安装搜狗输入法</h3>
<p><a href="http://blog.topspeedsnail.com/archives/6955">安装步骤参考</a></p>
<h3 id="装chrome"><a class="header-anchor" href="#装chrome"></a>装chrome</h3>
<p><a href="http://www.linuxidc.com/Linux/2016-05/131096.htm">步骤参考</a></p>
<h3 id="必要组件"><a class="header-anchor" href="#必要组件"></a>必要组件</h3>
<p><a href="https://github.com/shadowsocks/shadowsocks-libev">参考</a><br>
<a href="https://blog.huihut.com/2017/08/25/LinuxInstallConfigShadowsocksClient/">开机启动参考</a><br>
开机设置路径备份 /etc/systemd/system/shadowsocks.service<br>
proxy设置<br>
<code>电源-&gt;system settings-&gt;network</code></p>
<h3 id="视频播放软件-vlc"><a class="header-anchor" href="#视频播放软件-vlc"></a>视频播放软件 <a href="http://www.videolan.org/vlc/download-ubuntu.html">vlc</a></h3>
<h3 id="截图-shutter"><a class="header-anchor" href="#截图-shutter"></a>截图 shutter</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> shutter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="gimp"><a class="header-anchor" href="#gimp"></a><a href="https://www.gimp.org/">gimp</a></h3>
<blockquote>
<p>linux 下的ps</p>
</blockquote>
<h3 id="albert"><a class="header-anchor" href="#albert"></a>albert</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> add-apt-repository ppa:nilarimogard/webupd8
<span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> albert

<span class="token comment"># 设置开机自动启动</span>
<span class="token function">ln</span> -s /usr/share/applications/albert.desktop ~/.config/autostart/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="美化-主题：Unity-Tweak-Tool"><a class="header-anchor" href="#美化-主题：Unity-Tweak-Tool"></a>美化/主题：Unity Tweak Tool</h3>
<h3 id="网易云音乐"><a class="header-anchor" href="#网易云音乐"></a>网易云音乐</h3>
<p>官网下载.deb即可<br>
如果用命令装的时候不行的话记得换源</p>
<h3 id="terminator"><a class="header-anchor" href="#terminator"></a><a href="https://gnometerminator.blogspot.hk/p/introduction.html">terminator</a></h3>
<p>常用快捷键 <a href="http://terminator-gtk3.readthedocs.io/en/latest/gettingstarted.html">官方文档</a></p>
<ul>
<li>上下分屏=&gt;c+s+o,左右分屏=&gt;c+s+e</li>
<li>关闭一个窗口或分屏=&gt;c+s+w,退出终端=&gt;c+s+q</li>
<li>控制窗口大小 快捷式：c+s+ ←↑↓→,切换窗口c+tab 窗口最大化=&gt; F11</li>
<li>Move to the terminal above the current one: Alt + ↑</li>
<li>Move to the terminal below the current one: Alt + ↓</li>
<li>Move to the terminal left of the current one: Alt + ←</li>
<li>Move to the terminal right of the current one: Alt + →</li>
</ul>
<p>自定义打开时的位置和大小</p>
<ol>
<li>打开terminator 调节好大小后输入</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xwininfo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="2">
<li>
<p>选择当前窗口后 复制最后一行 -geometry 891x528+395+319</p>
</li>
<li>
<p>打开<code>system settings-&gt;keyboard-&gt;shortcuts-&gt;custom shortcuts-&gt; +</code><br>
command中加入</p>
</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">terminator --geometry 891x528+395+319<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="4">
<li>点击disable 设置快捷键 ctrl+alt+t</li>
</ol>
<h3 id="有道词典"><a class="header-anchor" href="#有道词典"></a><a href="http://cidian.youdao.com/index-linux.html">有道词典</a></h3>
<h3 id="iSearch"><a class="header-anchor" href="#iSearch"></a><a href="https://github.com/louisun/iSearch">iSearch</a></h3>
<p>单词查询 例: s sun</p>
<h3 id="zeal"><a class="header-anchor" href="#zeal"></a><a href="https://zealdocs.org/">zeal</a></h3>
<h3 id="vscode"><a class="header-anchor" href="#vscode"></a><a href="https://code.visualstudio.com/">vscode</a></h3>
<h3 id="Jetbrains"><a class="header-anchor" href="#Jetbrains"></a><a href="https://www.jetbrains.com/">Jetbrains</a></h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> xxx.tar.gz
<span class="token builtin class-name">cd</span> xxx
<span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token assign-left variable">a</span><span class="token operator">=</span>+rx bin/idea.sh
<span class="token function">sudo</span> bin/idea.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="vscode-2"><a class="header-anchor" href="#vscode-2"></a><a href="https://code.visualstudio.com/">vscode</a></h3>
<pre class="line-numbers language-安装更新" data-language="安装更新"><code class="language-安装更新">sudo apt install ~&#x2F;path&#x2F;to&#x2F;code_1.XXX.deb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="java"><a class="header-anchor" href="#java"></a><a href="http://tipsonubuntu.com/2016/07/31/install-oracle-java-8-9-ubuntu-16-04-linux-mint-18/">java</a></h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> add-apt-repository ppa:webupd8team/java
<span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token punctuation">;</span> <span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> oracle-java8-installer  <span class="token comment"># You may replace oracle-java8-installer with oracle-java9-installer to install Java 9. </span>
java -version <span class="token comment">#check version</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> oracle-java8-set-default <span class="token comment"># For Java 9, install the package oracle-java9-set-default instead</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="换源"><a class="header-anchor" href="#换源"></a>换源</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 备份一下</span>
<span class="token function">sudo</span> <span class="token function">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak
<span class="token comment"># 修改</span>
<span class="token function">sudo</span> <span class="token function">vi</span> /etc/apt/sources.list
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>替换为以下</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># deb cdrom:[Ubuntu 16.04 LTS _Xenial Xerus_ - Release amd64 (20160420.1)]/ xenial main restricted</span>
deb-src http://archive.ubuntu.com/ubuntu xenial main restricted <span class="token comment">#Added by software-properties</span>
deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted
deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe <span class="token comment">#Added by software-properties</span>
deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe <span class="token comment">#Added by software-properties</span>
deb http://mirrors.aliyun.com/ubuntu/ xenial universe
deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe
deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse
deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse
deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse <span class="token comment">#Added by software-properties</span>
deb http://archive.canonical.com/ubuntu xenial partner
deb-src http://archive.canonical.com/ubuntu xenial partner
deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe <span class="token comment">#Added by software-properties</span>
deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe
deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="安装字体"><a class="header-anchor" href="#安装字体"></a>安装字体</h2>
<p>Monaco</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>

<span class="token comment">#script extraido de: http://paulocassiano.wordpress.com/2008/08/29/deixando-o-gedit-com-a-cara-do-textmate/</span>
<span class="token comment">#tip for better "resolution" here: http://blog.siverti.com.br/2008/05/22/fonte-monaco-no-ubuntugedit/</span>

<span class="token builtin class-name">cd</span> /usr/share/fonts/truetype/

<span class="token comment">#TODO: put validation if folder already exists</span>
<span class="token function">sudo</span> <span class="token function">mkdir</span> ttf-monaco

<span class="token builtin class-name">cd</span> ttf-monaco/

<span class="token function">sudo</span> <span class="token function">wget</span> http://www.gringod.com/wp-upload/software/Fonts/Monaco_Linux.ttf

<span class="token comment">#create an index of X font files in a directory</span>
<span class="token function">sudo</span> mkfontdir

<span class="token comment">#go to parent folder /usr/share/fonts/truetype</span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>

fc-cache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用简体中文"><a class="header-anchor" href="#使用简体中文"></a>使用简体中文</h2>
<p>方法一：可以修改系统文字为中文</p>
<p>方法二：既要使用英文作为系统字体 又要显示简体汉字<br>
<a href="https://memo.ink/fix-chinese-font-display-under-en-environment/">参考</a></p>
<p>简单来说就是修改/etc/fonts/conf.avail/64-language-selector-prefer.conf</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0"?></span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">fontconfig</span> <span class="token name">SYSTEM</span> <span class="token string">"fonts.dtd"</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fontconfig</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>sans-serif<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefer</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK JP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK SC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK TC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefer</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alias</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>monospace<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefer</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans Mono CJK JP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans Mono CJK SC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans Mono CJK TC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefer</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alias</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fontconfig</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>改为以下即可</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0"?></span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">fontconfig</span> <span class="token name">SYSTEM</span> <span class="token string">"fonts.dtd"</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fontconfig</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>sans-serif<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefer</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans Mono CJK SC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans Mono CJK TC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans Mono CJK JP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefer</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alias</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>monospace<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefer</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans Mono CJK SC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans Mono CJK TC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans Mono CJK JP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefer</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alias</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fontconfig</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
  </entry>
  <entry>
    <title>intellij-idea-setting</title>
    <url>/2017/10/07/cn/intellij-setting/</url>
    <content><![CDATA[<p>intellijidea 设置备忘</p>
<span id="more"></span>
<h2 id="一些小特性"><a class="header-anchor" href="#一些小特性"></a>一些小特性</h2>
<h3 id="idea-是实时保存的所以没有必要-ctrl-s-了"><a class="header-anchor" href="#idea-是实时保存的所以没有必要-ctrl-s-了"></a>idea 是实时保存的所以没有必要 ctrl+s 了</h3>
<h3 id="关于-project-module"><a class="header-anchor" href="#关于-project-module"></a>关于 project module</h3>
<p>project &lt;==&gt; workspace(eclipse)</p>
<p>module &lt;==&gt; project(eclipse)</p>
<p>module 的删除</p>
<blockquote>
<p>open module settings -&gt; 右键 module delete</p>
</blockquote>
<h2 id="设置-2"><a class="header-anchor" href="#设置-2"></a>设置</h2>
<h3 id="设置背景图片"><a class="header-anchor" href="#设置背景图片"></a>设置背景图片</h3>
<ol>
<li>ctrl+shift+a</li>
<li>set background image</li>
<li>选图片 搞定</li>
</ol>
<h2 id="快捷键-3"><a class="header-anchor" href="#快捷键-3"></a>快捷键</h2>
<p>设置的是 eclipse(macos)</p>
<table>
<thead>
<tr>
<th>操作</th>
<th>快捷键</th>
<th>keymap searching</th>
</tr>
</thead>
<tbody>
<tr>
<td>全局搜索</td>
<td>ctrl+enter</td>
<td>find in path</td>
</tr>
<tr>
<td>根据名称查找类或文件.</td>
<td>cmd+shift+r</td>
<td></td>
</tr>
<tr>
<td>跳转到 tree map</td>
<td>ctrl+e</td>
<td>select project view</td>
</tr>
<tr>
<td>open doc</td>
<td>ctrl+q</td>
<td>doc</td>
</tr>
<tr>
<td>创建内容</td>
<td>cmd+n</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="snippet"><a class="header-anchor" href="#snippet"></a>snippet</h2>
<table>
<thead>
<tr>
<th>操作</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>psvm</td>
<td>generating main</td>
</tr>
<tr>
<td>sout</td>
<td>sysout</td>
</tr>
</tbody>
</table>
<h2 id="组合技"><a class="header-anchor" href="#组合技"></a>组合技</h2>
<h3 id="create-class-without-mouse"><a class="header-anchor" href="#create-class-without-mouse"></a>create class without mouse</h3>
<ol>
<li>alt+f1</li>
<li>1(project)</li>
<li>alt+insert</li>
</ol>
<h2 id="其他"><a class="header-anchor" href="#其他"></a>其他</h2>
<h3 id="目录结构说明"><a class="header-anchor" href="#目录结构说明"></a>目录结构说明</h3>
<p>与 eclipse 不同 project 就相当于 workspace 在 project 中新建 module 就相当于 eclipse 中的 project</p>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/intellij-setting/2.png?x-oss-process=style/blogimage" alt=""></p>
<h3 id="导入-jar"><a class="header-anchor" href="#导入-jar"></a>导入 jar</h3>
<ol>
<li>模块中新建 libs 文件夹</li>
<li>右击项目 open moudle setting</li>
<li>Dependencies</li>
<li>&quot;+&quot;sign choose 1JARs or directories</li>
<li>选择搞定</li>
</ol>
<h3 id="Tips"><a class="header-anchor" href="#Tips"></a>Tips</h3>
<ol>
<li>
<p>配置 tomcat 热部署<br>
Run/Debug configuations -&gt; On frame deactivation: Updateclasses and resources</p>
</li>
<li>
<p>自动补全</p>
</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">collecion<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">var</span> <span class="token operator">-></span> 回车
<span class="token operator">=</span><span class="token operator">></span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> object <span class="token operator">=</span> collecion<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="参考"><a class="header-anchor" href="#参考"></a>参考</h2>
<p>官方文档 <a href="https://www.jetbrains.com/help/idea/meet-intellij-idea.html">https://www.jetbrains.com/help/idea/meet-intellij-idea.html</a></p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>intellijidea</tag>
      </tags>
  </entry>
  <entry>
    <title>japan-estate</title>
    <url>/2021/04/16/cn/japan-estate/</url>
    <content><![CDATA[<p>东京房地产思考</p>
<span id="more"></span>
<h2 id="购房费用"><a class="header-anchor" href="#购房费用"></a>购房费用</h2>
<h2 id="房子的价格"><a class="header-anchor" href="#房子的价格"></a>房子的价格</h2>
<ol>
<li>购房时的首付</li>
<li>每月的贷款</li>
</ol>
<h2 id="买后费用"><a class="header-anchor" href="#买后费用"></a>买后费用</h2>
<h3 id="只支付一次的费用"><a class="header-anchor" href="#只支付一次的费用"></a>只支付一次的费用</h3>
<ol>
<li>搬家费</li>
<li>重新装修的费用</li>
<li>不动产取得税</li>
</ol>
<h3 id="每月支付的费用"><a class="header-anchor" href="#每月支付的费用"></a>每月支付的费用</h3>
<p>物业费,管理费,停车费</p>
<h3 id="每年支付的费用"><a class="header-anchor" href="#每年支付的费用"></a>每年支付的费用</h3>
<h3 id="特定年支付的费用"><a class="header-anchor" href="#特定年支付的费用"></a>特定年支付的费用</h3>
]]></content>
      <categories>
        <category>东京生活</category>
      </categories>
      <tags>
        <tag>房产,投资</tag>
      </tags>
  </entry>
  <entry>
    <title>日本生活要交多少税</title>
    <url>/2021/04/05/cn/japan-tax/</url>
    <content><![CDATA[<p>主要针对正社员和个人事业主在日本生活需要支付的保险,税等费用以及节税方法说明<br>
※个人整理,如果有误,以官方为准</p>
<span id="more"></span>
<h2 id="前言"><a class="header-anchor" href="#前言"></a>前言</h2>
<p>不得不说日本的税务系统是真的复杂,都是只言片语,没有几个人能说明白</p>
<h2 id="税的种类"><a class="header-anchor" href="#税的种类"></a>税的种类</h2>
<p>税一般分为国税和地方税</p>
<p>国税和地方税可以上 <a href="https://www.mof.go.jp/tax_policy/summary/condition/a01.htm">财务省官网</a>查看</p>
<h2 id="几个基础概念"><a class="header-anchor" href="#几个基础概念"></a>几个基础概念</h2>
<h3 id="源泉征收"><a class="header-anchor" href="#源泉征收"></a>源泉征收</h3>
<p>对象:正社员<br>
概念:税务局从工资支付者(公司)哪里征收劳动者的所得税,通过公司给个人缴税<br>
<a href="https://www.nta.go.jp/publication/pamph/gensen/gaikokugo/03.htm">国税局官网说明</a></p>
<p>每年年末的源泉征收票就是纳税明细</p>
<h3 id="年末调整"><a class="header-anchor" href="#年末调整"></a>年末调整</h3>
<p>对象:正社员<br>
年底(一般是 12 月初)劳动者想公司提交各种控除证明书,公司以此计算正确的纳税金额,然后替应纳税人去税务局纳税</p>
<h3 id="正社员的一年的纳税流程"><a class="header-anchor" href="#正社员的一年的纳税流程"></a>正社员的一年的纳税流程</h3>
<p>每月工资会以前年的所得算出源泉征收的所得税=&gt;年底进行年末调整根据实际的所得和控除算出正确的应纳税金额=&gt;向税务局申报(多退少补)</p>
<h3 id="确定申告"><a class="header-anchor" href="#确定申告"></a>确定申告</h3>
<p>对象:任何人都行<br>
概念:向税务局申告应交的所得税<br>
时间:第二年 3 月上旬</p>
<h3 id="年金"><a class="header-anchor" href="#年金"></a>年金</h3>
<p>年金,简单来说就是养老金.有两种一种是公的年金(国民年金と厚生年金),私的年金(個人型確定拠出年金（iDeCo：イデコ）等)</p>
<ol>
<li>公的年金<br>
对于身份不同的人需要缴纳的金额,年限也不同,具体可以参考 <a href="https://www.nenkin.go.jp/service/kounen/hokenryo/index.html">日本年金机构官网</a>也可以看这个<a href="https://www.youtube.com/watch?v=y-2AGWX9MWM&amp;ab_channel=%E4%B8%A1%E5%AD%A6%E9%95%B7%E3%83%AA%E3%83%99%E3%83%A9%E3%83%AB%E3%82%A2%E3%83%BC%E3%83%84%E5%A4%A7%E5%AD%A6">视频 1</a><br>
<a href="https://www.youtube.com/watch?v=qa9gIqE5sJQ">简要说明</a><br>
国民年金:固定每月 16,590 円<a href="https://www.nenkin.go.jp/service/kokunen/hokenryo/20150313-02.html">国民年金保険料｜日本年金機構</a><br>
厚生年金:<a href="https://www.nenkin.go.jp/service/kounen/hokenryo/hoshu/20150515-01.html">厚生年金保険の保険料｜日本年金機構</a>　对象<br>
金额=每年 4-6 月的报酬 × 保険料率(18.3％*仅供参考可能变化)<br>
结论:交厚生年金是不划算的,因为交的多,拿的少.但对于会社员来说是必须要交的. 上面视频 1 里面有具体不交和减免的办法.还有如果想要申请永驻的话也要交不然对审查不利<br>
<a href="https://www.youtube.com/watch?v=a9oQ2y9shoI">年金の未納期間がある人必見！超簡単な解決策あります - YouTube</a></li>
<li>私的年金<br>
这个种类比较多 常见的有 iDeCo<a href="https://www.youtube.com/watch?v=heIIAwHYywk&amp;t=1120s&amp;ab_channel=BANKACADEMY%2F%E3%83%90%E3%83%B3%E3%82%AF%E3%82%A2%E3%82%AB%E3%83%87%E3%83%9F%E3%83%BC">可以参考这个视频</a><br>
iDeCo 的缺点是每年利息低,只能到期取回.优点是可以节税<br>
和 iDeCo 对应的有 積立 NISA,优点是节税和随时取回.缺点是风险高,有亏损的可能.</li>
</ol>
<h2 id="到底哪些税要怎么算"><a class="header-anchor" href="#到底哪些税要怎么算"></a>到底哪些税要怎么算</h2>
<p>正社员和个人事业主的计算方法有所不同,这里分开比较</p>
<h3 id="正社员"><a class="header-anchor" href="#正社员"></a>正社员</h3>
<p>正社员由于天引き制度,年金 保险 税金都是由公司在每月的工资里面按照前一年的工资水平计算出的金额支出,再由每年的年末调整来退还多交的部分.所以即使不知道要交多少也没有关系</p>
<h4 id="社会保险"><a class="header-anchor" href="#社会保险"></a>社会保险</h4>
<table>
<thead>
<tr>
<th>対象の保険</th>
<th>保険料率</th>
<th>備考</th>
</tr>
</thead>
<tbody>
<tr>
<td>厚生年金</td>
<td>18.3%</td>
<td>今後引き上げられる予定はなし</td>
</tr>
<tr>
<td>健康保険</td>
<td>10.0%</td>
<td>平成 24 年度から変更なし</td>
</tr>
<tr>
<td>介護保険</td>
<td>1.80%</td>
<td>令和 3 年度から改定された</td>
</tr>
<tr>
<td>雇用保険</td>
<td>0.90%</td>
<td>内訳は以下・会社負担：0.60% ・個人負担：0.30% → 引き上げの検討も（令和 3 年 10 月時点）</td>
</tr>
<tr>
<td>労災保険</td>
<td>0.30%</td>
<td>3 年に一度変更も、令和 3 年度は見送り</td>
</tr>
</tbody>
</table>
<h5 id="厚生年金"><a class="header-anchor" href="#厚生年金"></a>厚生年金</h5>
<p>正社员属于第二号被保险者,要交缴纳厚生年金</p>
<h5 id="健康保险"><a class="header-anchor" href="#健康保险"></a>健康保险</h5>
<p>正社员健康保险和厚生年金计算方式类似,计算后也是公司和个人各出一半,计算公式具体如下<br>
健康保険料＝標準報酬月額 × 健康保険料率(9.87%*仅供参考))</p>
<h4 id="税金"><a class="header-anchor" href="#税金"></a>税金</h4>
<h5 id="住民税"><a class="header-anchor" href="#住民税"></a>住民税</h5>
<p><a href="https://www.youtube.com/watch?v=dVJkg8XcbtE&amp;t=787s&amp;ab_channel=%E3%82%B5%E3%83%B3%E3%83%87%E3%83%BC%E3%83%9E%E3%83%8D%E3%83%BC%E3%83%81%E3%83%A3%E3%83%B3%E3%83%8D%E3%83%AB">住民税</a></p>
<h5 id="所得税-☆"><a class="header-anchor" href="#所得税-☆"></a>所得税 ☆</h5>
<p>① 给与-给与所得控除=给与所得<br>
② 给与所得-所得控除=课税所得<br>
③ 课税所得*税率=所得税<br>
④ 所得税-税额控除=应交所得税<br>
给与:工资收入<br>
给与所得控除:虽然上班族没有经费这个概念,但是还是会根据收入的多少有个固定的控除额,具体金额可以<a href="https://www.nta.go.jp/taxes/shiraberu/taxanswer/shotoku/1410.htm">参考这里</a><br>
税率<a href="https://www.nta.go.jp/taxes/shiraberu/taxanswer/shotoku/2260.htm">可以参考这里</a><br>
注意 ③ 的计算是分段计算的比如 700w 的情况下<br>
(1,949,000-1000)×0.05+…+(7,000,000-6,950,000)×0.23= 974,000 円<br>
快速计算是下面的样子<br>
7,000,000 円 ×0.23 - 636,000 円= 974,000 円<br>
税额控除:节税里面解释<br>
课税所得才是</p>
<h4 id="节税"><a class="header-anchor" href="#节税"></a>节税</h4>
<h5 id="所得税节税"><a class="header-anchor" href="#所得税节税"></a>所得税节税</h5>
<p>再把所得税计算拿过来看一下<br>
① 给与-给与所得控除=给与所得<br>
② 给与所得-所得控除=课税所得<br>
③ 课税所得*税率=所得税<br>
④ 所得税-税额控除=应交所得税</p>
<ol>
<li>
<p>② 增加加所得控除<br>
所得控除:种类非常多具体可以<a href="https://www.nta.go.jp/taxes/shiraberu/taxanswer/shotoku/shoto320.htm">参考这里</a><br>
下面简单说明下可以利用的一些控除,注意有些控除不能通过年末调整而是要自己通过确定申告来申请.</p>
<table>
<thead>
<tr>
<th>种类</th>
<th>说明</th>
<th>申告方式</th>
</tr>
</thead>
<tbody>
<tr>
<td>基础控除</td>
<td>自动申请每个人都会有</td>
<td>自动申请</td>
</tr>
<tr>
<td>雑損控除</td>
<td>災害又は盗難若しくは横領によって、資産について損害を受けた場合等には、一定の金額の所得控除を受けることができます。これを雑損控除といいます。</td>
<td>确定申告</td>
</tr>
<tr>
<td>医療費控除</td>
<td>对于大于 10w 部分的医疗费可以进行控除</td>
<td>确定申告</td>
</tr>
<tr>
<td>社会保険料控除</td>
<td>交的健康保険、国民年金、厚生年金保険等等保险金额</td>
<td>自动申请</td>
</tr>
<tr>
<td>小規模企業共済等掛金控除</td>
<td>这个比较常见的有 iDeCo</td>
<td>确定申告</td>
</tr>
<tr>
<td>生命保険料控除</td>
<td>生命保険料、介護医療保険料及び個人年金保険料それぞれ４万円が上限です.※不划算,不是很推荐买个人保险</td>
<td>年末调整</td>
</tr>
<tr>
<td>地震保険料控除</td>
<td>上限 5w</td>
<td>确定申告</td>
</tr>
<tr>
<td>障害者控除</td>
<td>納税者自身、同一生計配偶者（注）又は扶養親族が所得税法上の障害者に当てはまる場合には、一定の金額の所得控除を受けることができます。これを障害者控除といいます。</td>
<td>年末调整</td>
</tr>
<tr>
<td>寄附金控除</td>
<td>☆ ふるさと納税这个特别有用下面会特别说明</td>
<td>可以自动申请具体看ふるさと納税说明</td>
</tr>
<tr>
<td>寡婦控除</td>
<td></td>
<td>年末调整</td>
</tr>
<tr>
<td>勤労学生控除</td>
<td></td>
<td>年末调整</td>
</tr>
<tr>
<td>配偶者控除</td>
<td>有配偶并且配偶收入有限制</td>
<td>年末调整</td>
</tr>
<tr>
<td>扶養控除</td>
<td>☆ 特别有用<a href="https://www.nta.go.jp/taxes/shiraberu/taxanswer/shotoku/1180.htm">参考这里</a></td>
<td>年末调整</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</li>
<li>
<p>④ 增加税额控除<br>
税额控除<a href="https://www.nta.go.jp/taxes/shiraberu/taxanswer/shotoku/1200.htm">具体看这里</a>因为这里是对最后的税金部分直接控除,青色申告也是在这一类(个人事业主可以,正社员就没有青色申告了)所以有的话一定不要错过.下面说说可以利用的税额控除</p>
<ol>
<li>住宅借入金等特別控除（住宅ローン控除）这个通过贷款买房,确定申告可以申请,这个是直接减去所得税和住民税非常有用,上限是 40w <a href="https://www.nta.go.jp/taxes/shiraberu/taxanswer/shotoku/1213.htm">具体看这里</a></li>
<li>寄附金控除</li>
</ol>
</li>
<li>
<p>① 调整税前所得<br>
缺点:因为会降低收入,所以在贷款买房时贷款上限会有所降低.<br>
这个对于有副业的朋友适用.比如买房投资的人可以利用減価償却費来使收入变为负数从而降低总体收入.</p>
</li>
</ol>
<h3 id="个人事业主"><a class="header-anchor" href="#个人事业主"></a>个人事业主</h3>
<h4 id="简介"><a class="header-anchor" href="#简介"></a>简介</h4>
<p>※先说个人事业主的最大缺点: 个人事业主因为工作稳定性比较低,贷款比较困难,因为就算你前一年有 1000 万收入,但你并不能保证下一年的收入.所以这种情况下银行贷款很大可能就下不来了.反而是在大型企业上班,月薪 20w 的人比较好贷款.</p>
<p>个人事业主有两种</p>
<ol>
<li>フリーランス<br>
フリーランスは、特定の企業や団体に所属しない働き方</li>
<li>個人事業主<br>
個人事業主とは、法人を設立せず、個人として事業を行っている人のことです。</li>
</ol>
<hr>
<p>二者的区别是 个人事业主是需要向税务局提交開業届,而フリーランス就没有任何的需求(就算是家里蹲,也可以说自己是フリーランス),二者都可以进行确定申告,而提交開業届的个人是业主最大优点就是可以进行青色申告,可以更有效的节税.<a href="https://www.youtube.com/watch?v=6rJOpqpVgkU&amp;t=574s&amp;ab_channel=%E3%82%B5%E3%83%B3%E3%83%87%E3%83%BC%E3%83%9E%E3%83%8D%E3%83%BC%E3%83%81%E3%83%A3%E3%83%B3%E3%83%8D%E3%83%AB">详细的可以参考这个视频</a></p>
<p>个人事业主是相对法人的一个概念,而法人就是成立公司时候设立的,当年收入足够高的时候就可以考虑成立公司了.关于法人这里就不多做展开了.</p>
<hr>
<h4 id="有哪些税金"><a class="header-anchor" href="#有哪些税金"></a>有哪些税金</h4>
<ol>
<li>
<p>年金</p>
</li>
<li>
<p>所得税<br>
① 収入－必要経費＝所得<br>
② 所得－所得控除＝課税所得金額</p>
</li>
<li>
<p>住民税</p>
</li>
<li>
<p>事業税</p>
</li>
<li>
<p>消費税</p>
</li>
<li>
<p>国民健康保険料など</p>
</li>
</ol>
<h4 id="节税-2"><a class="header-anchor" href="#节税-2"></a>节税</h4>
<h2 id="国民健康保险"><a class="header-anchor" href="#国民健康保险"></a>国民健康保险</h2>
<p>国民健康保险是根据居住的都道府县,和前一年工资计算而来的.这里以江东区为例<br>
另外国保会因为结婚生子而调涨保费，但社会保险却不会因为扶养人数增加而改变，在每个月的保费这一点来看，社保比国保来得优惠。</p>
<h2 id="ふるさと納税"><a class="header-anchor" href="#ふるさと納税"></a>ふるさと納税</h2>
<p>查询自己可以购买的上限<br>
<a href="https://furusato-nouzei.event.rakuten.co.jp/mypage/deductions/">楽天ふるさと納税</a><br>
<a href="https://www.soumu.go.jp/main_sosiki/jichi_zeisei/czaisei/czaisei_seido/furusato/mechanism/deduction.html">総務省ふるさと納税</a><br>
收入参考源泉徴収票的支払金額<br>
一般比上限低一些就可以</p>
<h2 id="参考文献"><a class="header-anchor" href="#参考文献"></a>参考文献</h2>
<p><a href="https://www.youtube.com/watch?v=i1qg9qoSmbQ&amp;list=PL0C7b7nvqFcXwp7xNR0c7lxwZ3bGU2qxT&amp;index=3&amp;ab_channel=TianChengTV%E3%83%BB%E5%A4%A9%E6%88%90%E7%9A%84%E9%A2%91%E9%81%93">YouTube TianCheng TV・天成的频道</a></p>
]]></content>
      <categories>
        <category>日本生活</category>
      </categories>
      <tags>
        <tag>tax</tag>
      </tags>
  </entry>
  <entry>
    <title>japanese-input</title>
    <url>/2017/08/13/cn/japanese-input/</url>
    <content><![CDATA[<p>日语输入法快捷键</p>
<span id="more"></span>
<p>alt+shift可以在中，英，日之间切换<br>
ALT+~可以在假名和英文之间切换<br>
ctrl+CAPSLOCK 和 alt+CAPSLOCK可以在平假名和片假名之间切换<br>
打完后按F7，F8就能转成片假名全角和半角</p>
<p>F10可以在不切换输入法的情况下把假名转成字母<br>
而且，多按几下，可以在全大写，全小写，首字母大写之间转换。</p>
]]></content>
      <categories>
        <category>input</category>
      </categories>
  </entry>
  <entry>
    <title>javase-net</title>
    <url>/2020/10/20/cn/javase-net/</url>
    <content><![CDATA[<p>javase 里面关于网络的基础类说明(工作中基本用不到,看着图个乐就行)</p>
<span id="more"></span>
<h2 id="常用类"><a class="header-anchor" href="#常用类"></a>常用类</h2>
<h3 id="InetAddress"><a class="header-anchor" href="#InetAddress"></a>InetAddress</h3>
<p>This class represents an Internet Protocol (IP) address.</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">  <span class="token comment">//获取主机名/IP</span>
  <span class="token class-name">InetAddress</span> localHost <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>localHost<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//获取主机名/IP</span>
  <span class="token class-name">InetAddress</span> inetAdd <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">"www.baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>inetAdd<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//IP</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>inetAdd<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//主机名</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>inetAdd<span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//执行结果</span>
<span class="token comment">// losssdeMac-mini.local/192.168.1.6</span>
<span class="token comment">// www.baidu.com/119.63.197.139</span>
<span class="token comment">// 119.63.197.139</span>
<span class="token comment">// www.baidu.com</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Socket"><a class="header-anchor" href="#Socket"></a>Socket</h3>
<p>This class implements client sockets (also called just “sockets”). A socket is an endpoint for communication between two machines.</p>
<p>通过客户端和服务端的交互例子来说明常用方法</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//client</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//向Server送数据</span>
        <span class="token class-name">Socket</span> socket <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span><span class="token number">2222</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">OutputStream</span> outputStream <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"hello server"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//接收Server返回</span>
        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> buff<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> length<span class="token operator">=</span>inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//server</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Server</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//打开Server接收数据</span>
        <span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">2222</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取服务端的套接字对象</span>
        <span class="token class-name">Socket</span> socket <span class="token operator">=</span> serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buff <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> length<span class="token operator">=</span>inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//向Clinet送数据</span>
        <span class="token class-name">OutputStream</span> outputStream <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"hello Client"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serverSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>javase</tag>
      </tags>
  </entry>
  <entry>
    <title>语言学习汇总(updating)</title>
    <url>/2024/10/15/cn/language-learning/</url>
    <content><![CDATA[<p>语言学习路上的二三事</p>
<span id="more"></span>
<p>因为语言学习需要的东西大同小异 所以我都整理于此</p>
<h2 id="资料"><a class="header-anchor" href="#资料"></a>资料</h2>
<h3 id="日语"><a class="header-anchor" href="#日语"></a>日语</h3>
<h4 id="我使用的资料"><a class="header-anchor" href="#我使用的资料"></a>我使用的资料</h4>
<p><a href="https://www.bilibili.com/video/av3060477/?from=search&amp;seid=15325896545265664426">标日初级</a></p>
<blockquote>
<p>叶子老师的初级课</p>
</blockquote>
<!-- [新编日语(4册全)]() -->
<blockquote>
<p>新编每一课知识点都很清晰 标日中级总感觉学了和没学一样</p>
</blockquote>
<p><a href="https://pan.baidu.com/s/1kVtGvB5">初级上册复习课</a>  密码: ui4f</p>
<p><a href="https://pan.baidu.com/s/1jH9Hegm">初级下册复习课</a>  密码: prns</p>
<h4 id="日语学习流程"><a class="header-anchor" href="#日语学习流程"></a>日语学习流程</h4>
<p>语言学习路途遥远,慢慢来 一开始千万不要相信什么3个月过N2,看动漫学日语什么的,脚踏实地才是王道.</p>
<ol>
<li>
<p>首先跟着叶子老师把初级上下学了,学完了之后,可以看看新编标准日本语,初级阶段主要是把词汇和语法积累一下.初级语法比较重要重在理解而不是死记.</p>
</li>
<li>
<p>N2和N1　这时候日语其实已经有了一个可以的基础 主要的是把能力考的语法和单词背一下,多做题,平时可以看看日语的文章和对着日语的新闻做听写.</p>
</li>
<li>
<p>N1 之后 可以把日常看不懂的词用本子记下来,还是重在积累.</p>
</li>
</ol>
<h3 id="英语-2"><a class="header-anchor" href="#英语-2"></a>英语</h3>
<h2 id="常用工具"><a class="header-anchor" href="#常用工具"></a>常用工具</h2>
<h3 id="pc端"><a class="header-anchor" href="#pc端"></a>pc端</h3>
<h4 id="Aboboo"><a class="header-anchor" href="#Aboboo"></a>Aboboo</h4>
<p><a href="https://zhuanlan.zhihu.com/p/21930503?refer=-anki">工具篇——使用ABOBOO学美剧</a></p>
<h4 id="anki"><a class="header-anchor" href="#anki"></a>anki</h4>
<p><a href="https://apps.ankiweb.net">anki官网</a></p>
<p><a href="https://www.zhihu.com/question/43951518">Anki有哪些值得推荐的词库和插件</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/21328602?refer=-anki">Anki终极汇总——请先看我！</a></p>
<h5 id="日语-2"><a class="header-anchor" href="#日语-2"></a>日语</h5>
<p><a href="https://zhuanlan.zhihu.com/p/21702356?refer=-anki">工具篇——日语划词助手</a></p>
<p>注: 1下那个chrome插件的时候记得去下字典</p>
<h5 id="英语-3"><a class="header-anchor" href="#英语-3"></a>英语</h5>
<p><a href="https://www.zhihu.com/question/20977466/answer/234197535">如何使用anki 高效地背诵 新概念英语</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/22472893?refer=-anki">英语插件？ 有这一个就够了——工具篇【Anki划词制卡助手】</a></p>
<h4 id="EBwin"><a class="header-anchor" href="#EBwin"></a>EBwin</h4>
<p>一个很好用的本地日语字典</p>
<h3 id="app"><a class="header-anchor" href="#app"></a>app</h3>
<h4 id="aTimeLogger2"><a class="header-anchor" href="#aTimeLogger2"></a>aTimeLogger2</h4>
<p>时间管理软件</p>
<h4 id="学习助手"><a class="header-anchor" href="#学习助手"></a>学习助手</h4>
<p>可以利用艾宾浩斯来提示复习的软件</p>
<h4 id="日语-3"><a class="header-anchor" href="#日语-3"></a>日语</h4>
<h5 id="语法酷"><a class="header-anchor" href="#语法酷"></a>语法酷</h5>
<p>可以查日语语法的软件</p>
<h4 id="英语-4"><a class="header-anchor" href="#英语-4"></a>英语</h4>
<h5 id="墨墨单词"><a class="header-anchor" href="#墨墨单词"></a>墨墨单词</h5>
<h2 id="常用网站"><a class="header-anchor" href="#常用网站"></a>常用网站</h2>
<h3 id="日语-4"><a class="header-anchor" href="#日语-4"></a>日语</h3>
<p><a href="http://www3.nhk.or.jp/">nhk新闻</a></p>
<h3 id="时间管理"><a class="header-anchor" href="#时间管理"></a>时间管理</h3>
<p><a href="https://trello.com">trello</a></p>
<p><a href="https://www.tmanager.co">tmanager</a></p>
<p>整合谷歌日历和trello的日历 介绍  <a href="http://www.playpcesor.com/2017/10/tmanager-google-calendar-trello.html">http://www.playpcesor.com/2017/10/tmanager-google-calendar-trello.html</a></p>
<h2 id="考试"><a class="header-anchor" href="#考试"></a>考试</h2>
<h3 id="日语-5"><a class="header-anchor" href="#日语-5"></a>日语</h3>
<h4 id="N2考试"><a class="header-anchor" href="#N2考试"></a>N2考试</h4>
<p>考试时间分配</p>
<table>
<thead>
<tr>
<th style="text-align:center">开始</th>
<th style="text-align:center">结束</th>
<th style="text-align:center">题目序号</th>
<th style="text-align:center">用时(单位:分)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">13:30</td>
<td style="text-align:center">13:50</td>
<td style="text-align:center">6</td>
<td style="text-align:center">20</td>
</tr>
<tr>
<td style="text-align:center">13:50</td>
<td style="text-align:center">14:10</td>
<td style="text-align:center">9</td>
<td style="text-align:center">20</td>
</tr>
<tr>
<td style="text-align:center">13:40</td>
<td style="text-align:center">13:55</td>
<td style="text-align:center">10</td>
<td style="text-align:center">15</td>
</tr>
<tr>
<td style="text-align:center">14:25</td>
<td style="text-align:center">14:49</td>
<td style="text-align:center">11</td>
<td style="text-align:center">24</td>
</tr>
<tr>
<td style="text-align:center">14:49</td>
<td style="text-align:center">14:56</td>
<td style="text-align:center">12</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td style="text-align:center">14:56</td>
<td style="text-align:center">15:08</td>
<td style="text-align:center">13</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td style="text-align:center">15:38</td>
<td style="text-align:center">15:45</td>
<td style="text-align:center">14</td>
<td style="text-align:center">7</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>日本語</category>
        <category>English</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>linux-notes</title>
    <url>/2017/11/05/cn/linux-notes/</url>
    <content><![CDATA[<p>linux 备忘</p>
<span id="more"></span>
<h2 id="常用命令-2"><a class="header-anchor" href="#常用命令-2"></a>常用命令</h2>
<table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>ctrl+shift+ +</td>
<td>放大命令行字体</td>
<td></td>
</tr>
<tr>
<td>ctrl+ -</td>
<td>缩小命令行字体</td>
<td></td>
</tr>
<tr>
<td>history (!200 执行200行的命令)</td>
<td>查看历史命令</td>
<td></td>
</tr>
<tr>
<td>ls 2*</td>
<td>以2开头的文件</td>
<td></td>
</tr>
<tr>
<td>ls 2?</td>
<td>以2开头的文件(占一位)</td>
<td></td>
</tr>
<tr>
<td>ls 1[1-5]3.txt</td>
<td>正则匹配</td>
<td></td>
</tr>
<tr>
<td>ls &gt; xxx.txt</td>
<td>ls结果保存到xxx.txt</td>
<td></td>
</tr>
<tr>
<td>ls &gt;&gt; xxx.txt</td>
<td>ls结果追加到xxx.txt</td>
<td></td>
</tr>
<tr>
<td>more xxx.txt</td>
<td>滚屏查看文件</td>
<td></td>
</tr>
<tr>
<td>ls -alh /bin \</td>
<td>more</td>
<td>管道</td>
</tr>
<tr>
<td>cd …/…</td>
<td>上上层</td>
<td></td>
</tr>
<tr>
<td>cd -</td>
<td>回到上一次目录</td>
<td></td>
</tr>
<tr>
<td>cd ~</td>
<td>回到加速目录</td>
<td></td>
</tr>
<tr>
<td>tree</td>
<td>目录树</td>
<td></td>
</tr>
<tr>
<td>mkdir A/B/C/D -p</td>
<td></td>
<td></td>
</tr>
<tr>
<td>rmdir</td>
<td>删除文件夹</td>
<td></td>
</tr>
<tr>
<td>rm C -r</td>
<td>递归删除</td>
<td></td>
</tr>
<tr>
<td>mv 111.txt A/222.txt</td>
<td>剪切粘贴</td>
<td></td>
</tr>
<tr>
<td>mv 1.txt 2.txt</td>
<td>重命名</td>
<td></td>
</tr>
<tr>
<td>cp 111.txt A/222.txt</td>
<td>复制粘贴</td>
<td></td>
</tr>
<tr>
<td>cp A B -r</td>
<td>复制粘贴文件夹</td>
<td></td>
</tr>
<tr>
<td>ln -s 1.txt 1-softlink.txt</td>
<td>软连接</td>
<td></td>
</tr>
<tr>
<td>ln 1.txt 1.txt 1-hardlink.txt</td>
<td>硬链接</td>
<td></td>
</tr>
<tr>
<td>cat 1.txt 2.txt &gt;&gt; xxx.txt</td>
<td></td>
<td></td>
</tr>
<tr>
<td>grep -n “ntfs” xxx.txt</td>
<td>显示包含ntfs的内容</td>
<td></td>
</tr>
<tr>
<td>grep -v “ntfs” xxx.txt</td>
<td>不包含ntfs的内容</td>
<td></td>
</tr>
<tr>
<td>grep “^ntfs” xxx.txt</td>
<td>以ntfs开头</td>
<td></td>
</tr>
<tr>
<td>grep “ntfs$” xxx.txt</td>
<td>以ntfs结尾</td>
<td></td>
</tr>
<tr>
<td>find / -name “<em>name</em>”</td>
<td>按名字查找</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="zsh"><a class="header-anchor" href="#zsh"></a>zsh</h2>
<h3 id="use-oh-my-vsh-on-ubuntu"><a class="header-anchor" href="#use-oh-my-vsh-on-ubuntu"></a>use oh my vsh on ubuntu</h3>
<p><a href="https://gist.github.com/renshuki/3cf3de6e7f00fa7e744a">参考</a></p>
<ol>
<li>安装zsh</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">zsh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="2">
<li>设置zsh为默认shell</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">chsh -s /bin/zsh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="3">
<li>
<p>重启</p>
</li>
<li>
<p>安装oh-my-zsh <a href="https://github.com/robbyrussell/oh-my-zsh">https://github.com/robbyrussell/oh-my-zsh</a></p>
</li>
<li>
<p>安装主题</p>
</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> ~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/linux-notes/1.png?x-oss-process=style/blogimage" alt="主题设置"><br>
<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes">主题样式查看</a></p>
<p>如果出现中间图片的显示异常<br>
<img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/linux-notes/2.png?x-oss-process=style/blogimage" alt="显示异常"></p>
<ol start="6">
<li>安装powerline <a href="https://github.com/powerline/fonts">https://github.com/powerline/fonts</a></li>
</ol>
<p>如果还是显示异常<br>
<code>terminal&gt;Preference&gt;Profiles&gt;myprofile(默认unamed)&gt;General&gt;custom font</code></p>
<p>选择 ubuntu mono derivative Powerline Regular 当然你也可以在powerline的github页面上 Powerline Font Family 列下选择自己喜欢的字体</p>
<p>当然即使这样设置 也只是字体改变了 主题还没有改变<br>
<a href="https://gist.github.com/renshuki/3cf3de6e7f00fa7e744a">参考这个</a><br>
装一个主题</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone git://github.com/sigurdga/gnome-terminal-colors-solarized.git ~/.solarized<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>建议新建一个自己的profile因为palette改为solarized之后就改不了其他的了(不管是terminal还是terminator 有可能是个bug 当然你可以用命令恢复)<br>
terminal恢复</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dconf reset -f /org/gnome/terminal/legacy/profiles:/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>terminator 就不用改了 自己加一个profile吧</p>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/linux-notes/3.png?x-oss-process=style/blogimage" alt="我使用的配置"></p>
<p>然后修改 ~/.config/terminator/config 中的[layout]参数为你自己设置的profile</p>
<h3 id="zsh小tips"><a class="header-anchor" href="#zsh小tips"></a>zsh小tips</h3>
<ol>
<li>zsh 下 popd 就可以跳转到上次的目录 如果是bash的话上次需要 pushd 当然也可以用 cd - 回到上次的目录 我比较喜欢的是以下的操作方式</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> - //按tab
---------------------
☁  blog <span class="token punctuation">[</span>dev<span class="token punctuation">]</span>  <span class="token builtin class-name">cd</span> -
<span class="token number">1</span> -- /cygdrive/d/vscode-workspace/blog
<span class="token number">2</span> -- /cygdrive/d/vscode-workspace

// 用ctrl+p 和ctrl+n 就可以上下选择<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>多层目录时按 d 就可以显示出当前的tree 然后按数字就可以跳转到想去的目录</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">☁  blog <span class="token punctuation">[</span>dev<span class="token punctuation">]</span> ⚡ d
<span class="token number">0</span>       /cygdrive/d/vscode-workspace/blog/blog
<span class="token number">1</span>       /cygdrive/d/vscode-workspace/blog
<span class="token number">2</span>       /cygdrive/d/vscode-workspace
%
☁  blog <span class="token punctuation">[</span>dev<span class="token punctuation">]</span> ⚡ <span class="token number">1</span>
/cygdrive/d/vscode-workspace/blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>替换上次指令中的错误</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">☁  Blog  <span class="token builtin class-name">cd</span> bllog
cd: no such <span class="token function">file</span> or directory: bllog
%
☁  Blog  r <span class="token assign-left variable">bllog</span><span class="token operator">=</span>blog
<span class="token builtin class-name">cd</span> blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="4">
<li>任意级目</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">☁  blog <span class="token punctuation">[</span>dev<span class="token punctuation">]</span> ⚡ <span class="token function">ls</span> **/*.xml
node_modules/hexo-generator-sitemap/sitemap.xml           node_modules/json-schema/draft-zyp-json-schema-03.xml             node_modules/stylus/node_modules/sax/examples/shopping.xml  public/sitemap.xml
node_modules/htmlparser2/test/Documents/Atom_Example.xml  node_modules/json-schema/draft-zyp-json-schema-04.xml             node_modules/stylus/node_modules/sax/examples/test.xml
node_modules/htmlparser2/test/Documents/RDF_Example.xml   node_modules/stylus/node_modules/sax/examples/big-not-pretty.xml  public/baidusitemap.xml
node_modules/htmlparser2/test/Documents/RSS_Example.xml   node_modules/stylus/node_modules/sax/examples/not-pretty.xml      public/search.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="5">
<li>快速搜索</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ack xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="6">
<li>alias</li>
<li><a href="https://grmlorg/zsh/zsh-lovers.html">zsh lovers</a></li>
</ol>
<h3 id="oh-my-zsh"><a class="header-anchor" href="#oh-my-zsh"></a>oh my zsh</h3>
<p>在<code>~/.oh-my-zsh/plugins/</code>下已有很多预设文件</p>
<h4 id="cheatssheet"><a class="header-anchor" href="#cheatssheet"></a><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Cheatsheet">cheatssheet</a></h4>
<h4 id="git-2"><a class="header-anchor" href="#git-2"></a>git</h4>
<table>
<thead>
<tr>
<th>shortcuts</th>
<th>operation</th>
</tr>
</thead>
<tbody>
<tr>
<td>gaa</td>
<td>git add -all</td>
</tr>
<tr>
<td>gst</td>
<td>git status</td>
</tr>
<tr>
<td>gb</td>
<td>git branch</td>
</tr>
<tr>
<td>gcmsg</td>
<td>git commit -m</td>
</tr>
<tr>
<td>gd</td>
<td>git diff</td>
</tr>
<tr>
<td>gcb</td>
<td>git checkout -b</td>
</tr>
<tr>
<td>gco</td>
<td>git checkout</td>
</tr>
<tr>
<td>grhh</td>
<td>git reset HEAD --hard</td>
</tr>
<tr>
<td>ggp</td>
<td>git push origin $(current_branch)</td>
</tr>
<tr>
<td>ggl</td>
<td>git pull $(current_branch)</td>
</tr>
<tr>
<td>gco</td>
<td>git checkout</td>
</tr>
<tr>
<td>gm</td>
<td>git merge</td>
</tr>
</tbody>
</table>
<h4 id="plugins"><a class="header-anchor" href="#plugins"></a>plugins</h4>
<h5 id="zsh-syntax-highlighting"><a class="header-anchor" href="#zsh-syntax-highlighting"></a><a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting</a></h5>
<p>高亮命令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="token variable">$&#123;ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom&#125;</span>/plugins/zsh-syntax-highlighting<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>修改 <code>~/.zshrc</code></p>
<pre class="line-numbers language-none"><code class="language-none">plugins&#x3D;( [plugins...] zsh-syntax-highlighting) <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>最后</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> ~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>logseq</title>
    <url>/2021/05/04/cn/logseq/</url>
    <content><![CDATA[<p>logseq 笔记整理+一点点的个人整理</p>
<span id="more"></span>
<h2 id="基础知识"><a class="header-anchor" href="#基础知识"></a>基础知识</h2>
<p><a href="https://zhuanlan.zhihu.com/p/343854552">入门教程</a><br>
<a href="https://cn.logseq.com/">中文社区</a></p>
<h2 id="query"><a class="header-anchor" href="#query"></a>query</h2>
<p><a href="http://www.learndatalogtoday.org/">learndatalogtoday</a><br>
<a href="https://docs.datomic.com/on-prem/query/query.html">Datomic query syntax</a><br>
<a href="https://logseq.github.io/#/page/Advanced%20Queries">Advanced Queries</a></p>
<h2 id="一些检索式分享"><a class="header-anchor" href="#一些检索式分享"></a>一些检索式分享</h2>
<p><a href="https://xutuan.vercel.app/#/page/logseq%E6%A3%80%E7%B4%A2%E5%85%AC%E5%BC%8F%E5%88%86%E4%BA%AB">论坛</a></p>
]]></content>
  </entry>
  <entry>
    <title>mac-notes</title>
    <url>/2017/11/03/cn/mac-notes/</url>
    <content><![CDATA[<p>mac 备忘</p>
<span id="more"></span>
<h2 id="常用软件-2"><a class="header-anchor" href="#常用软件-2"></a>常用软件</h2>
<h3 id="系统相关"><a class="header-anchor" href="#系统相关"></a>系统相关</h3>
<ol>
<li>
<p>cleanmymac</p>
</li>
<li>
<p><a href="https://theunarchiver.com">The Unarchiver</a><br>
解压软件</p>
</li>
<li>
<p><a href="https://china.paragon-software.com/home-mac/ntfs-for-mac/">paragon ntfs</a></p>
</li>
<li>
<p><a href="https://www.crystalidea.com/macs-fan-control">mac fan control</a></p>
</li>
</ol>
<h2 id="效率"><a class="header-anchor" href="#效率"></a>效率</h2>
<ol>
<li>
<p><a href="https://manytricks.com/moom/">moom</a><br>
高效的分屏软件</p>
</li>
<li>
<p><a href="https://spacelauncherapp.com">spacelaucherapp</a></p>
</li>
</ol>
<h3 id="学习相关"><a class="header-anchor" href="#学习相关"></a>学习相关</h3>
<ol>
<li>
<p><a href="https://marginnote.com/?lang=zh-hans">marginnote</a></p>
</li>
<li>
<p><a href="https://www.primatelabs.com/">voodoopad</a></p>
</li>
<li>
<p><a href="https://mindnode.com/">mindnode</a></p>
</li>
</ol>
<blockquote>
<p>思维导图 没钱可以用 xmind</p>
</blockquote>
<h3 id="design"><a class="header-anchor" href="#design"></a>design</h3>
<ol>
<li><a href="https://www.sketchapp.com/">sketch</a></li>
</ol>
<blockquote>
<p>sketch+Sketch Measure</p>
</blockquote>
<h2 id="常用设置"><a class="header-anchor" href="#常用设置"></a>常用设置</h2>
<h3 id="打开任何来源"><a class="header-anchor" href="#打开任何来源"></a>打开任何来源</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> spctl --master-disable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="homebrew"><a class="header-anchor" href="#homebrew"></a><a href="https://brew.sh/">homebrew</a></h3>
<h3 id="iterm2-proxy"><a class="header-anchor" href="#iterm2-proxy"></a>iterm2 proxy</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">http_proxy</span><span class="token operator">=</span>http://127.0.0.1:1080
<span class="token builtin class-name">export</span> <span class="token assign-left variable">https_proxy</span><span class="token operator">=</span><span class="token variable">$http_proxy</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>如需自动切换<br>
可以在 ~/.zshrc 或者 ~/.bash_profile 中添加这样的 alias：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">goproxy</span><span class="token operator">=</span><span class="token string">'export http_proxy=http://127.0.0.1:8087 https_proxy=http://127.0.0.1:8087'</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">disproxy</span><span class="token operator">=</span><span class="token string">'unset http_proxy https_proxy'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>测试是否切换成功 看下 ip 的归属地</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> ifconfig.me<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="按键区别"><a class="header-anchor" href="#按键区别"></a>按键区别</h3>
<table>
<thead>
<tr>
<th style="text-align:left">mac</th>
<th style="text-align:left">windows</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">⌘——Command ()</td>
<td style="text-align:left">win</td>
</tr>
<tr>
<td style="text-align:left">⌃ ——Control</td>
<td style="text-align:left">ctrl</td>
</tr>
<tr>
<td style="text-align:left">⌥——Option (alt)</td>
<td style="text-align:left">alt</td>
</tr>
<tr>
<td style="text-align:left">⇧——Shift</td>
<td style="text-align:left">shift</td>
</tr>
<tr>
<td style="text-align:left">⇪——Caps Lock</td>
<td style="text-align:left">Caps Lock</td>
</tr>
</tbody>
</table>
<h3 id="快捷键-4"><a class="header-anchor" href="#快捷键-4"></a>快捷键</h3>
<p>1 cmd+空格 cmd+b 在浏览器中搜索</p>
<p>个人习惯把大写键改为 command 键<br>
keyboard -&gt; modifier keys -&gt; usb keyboard -&gt; Caps Lockey 改为 command</p>
<p>2 程序切换</p>
<ul>
<li>
<p>2.1 程序内部切换 command+~</p>
</li>
<li>
<p>2.2 程序间切换 command+tab</p>
</li>
</ul>
<p>3 显示隐藏文件<br>
command + Shift + .</p>
<p>4 拷贝 finder 路径<br>
command+option+c</p>
<h3 id="常用小技巧"><a class="header-anchor" href="#常用小技巧"></a>常用小技巧</h3>
<p>1 创建快捷方式<br>
option+command 鼠标拖动</p>
<p>2 其实 mac 上还有很多实用的小功能 可以参看以下这个<a href="https://www.bilibili.com/video/av23430954">视频</a></p>
<p>3 无格式粘贴 ☆<br>
Shift + Option + Cmd + V</p>
<p>4 复制文件路径<br>
选择文件右键然后按opt键 选copy xxx as Pathname 就可以了</p>
<h2 id="个人设置"><a class="header-anchor" href="#个人设置"></a>个人设置</h2>
<h3 id="软件快捷键"><a class="header-anchor" href="#软件快捷键"></a>软件快捷键</h3>
<h3 id="alfred"><a class="header-anchor" href="#alfred"></a>alfred</h3>
<table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
<th>原理</th>
</tr>
</thead>
<tbody>
<tr>
<td>sl</td>
<td>睡眠</td>
<td>软件自身快捷键设置</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>marginnote</title>
    <url>/2017/11/03/cn/marginnote/</url>
    <content><![CDATA[<p>marginnote 使用笔记</p>
<span id="more"></span>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown</title>
    <url>/2017/08/07/cn/markdown/</url>
    <content><![CDATA[<p>draft: 关于markdown的一些常用语法</p>
<span id="more"></span>
<h1>blockquotes</h1>
<p>代码</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> blockquotes
<span class="token blockquote punctuation">>></span> next blockquotes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>效果</p>
<blockquote>
<p>blockquotes</p>
<blockquote>
<p>next blockquotes</p>
</blockquote>
</blockquote>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>如果引用内容需要换行，  
<span class="token blockquote punctuation">></span>可以在行尾添加两个空格
<span class="token blockquote punctuation">></span>
<span class="token blockquote punctuation">></span>或者在引用内容中加一个空行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>如果引用内容需要换行，<br>
可以在行尾添加两个空格</p>
<p>或者在引用内容中加一个空行</p>
</blockquote>
<h1>列表</h1>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">*</span> Red
<span class="token list punctuation">*</span> Green
<span class="token list punctuation">*</span> Blue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> Bird
<span class="token list punctuation">2.</span> McHale
<span class="token list punctuation">3.</span> Parish<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 第一层
  <span class="token list punctuation">-</span> 1-1
  <span class="token list punctuation">-</span> 1-2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol>
<li>第一层</li>
</ol>
<ul>
<li>1-1</li>
<li>1-2</li>
</ul>
<ul>
<li>A list item whitch a blockquote
<blockquote>
<p>This is a blockquote<br>
inside a list item</p>
</blockquote>
</li>
</ul>
<h1>转义显示</h1>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">1986\. What a great season.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>1986. What a great season.</p>
<h1>分割线</h1>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token hr punctuation">----</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<hr>
<h1>超链接</h1>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">baidu.com</span>](<span class="token url">http://www.baidu.com</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><a href="http://www.baidu.com">baidu.com</a></p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">icon</span>](<span class="token url">http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png</span> <span class="token string">"GitHub Mark"</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png" alt="icon" title="GitHub Mark"></p>
<h1>加粗</h1>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span><span class="token content">single asterisks</span><span class="token punctuation">*</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><em>single asterisks</em></p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">_</span><span class="token content">single underscores</span><span class="token punctuation">_</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><em>single underscores</em></p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">**</span><span class="token content">double asterisks</span><span class="token punctuation">**</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>double asterisks</strong></p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">__</span><span class="token content">double underscores</span><span class="token punctuation">__</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>double underscores</strong></p>
<p><a href="http://www.baidu.com/">http://www.baidu.com/</a></p>
<h1>Fruits</h1>
<table>
<thead>
<tr>
<th>Name</th>
<th>Color</th>
<th>Mass[g]</th>
</tr>
</thead>
<tbody>
<tr>
<td>apple</td>
<td>red</td>
<td>180</td>
</tr>
<tr>
<td>banana</td>
<td>yellow</td>
<td>120</td>
</tr>
<tr>
<td>grape</td>
<td>green</td>
<td>150</td>
</tr>
</tbody>
</table>
<h1>字体颜色</h1>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>blue</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span style="color:blue">blue</span></p>
<h1>删除线</h1>
<pre class="line-numbers language-none"><code class="language-none">~~删除线~~<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><s>删除线</s></p>
<h1>复选框</h1>
<ul>
<li><input type="checkbox" id="checkbox2" checked="true"><label for="checkbox2">书1</label></li>
<li><input type="checkbox" id="checkbox3" checked="true"><label for="checkbox3">书1</label></li>
<li><input type="checkbox" id="checkbox4" checked="true"><label for="checkbox4">书1</label></li>
</ul>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>n2考前对策-文法(updating)</title>
    <url>/2017/09/16/cn/n2%E8%80%83%E5%89%8D%E5%AF%B9%E7%AD%96-%E6%96%87%E6%B3%95/</url>
    <content><![CDATA[<p>总结整理《新日语能力考试考前对策 N2 文法》书中的内容（又是一个大坑啊XD）<br>
后期也会参考《日语语法新思维》和自己的一些理解不断完善对一些语法的理解<br>
个人整理难免有所纰漏，欢迎指正</p>
<span id="more"></span>
<h2 id="第１週"><a class="header-anchor" href="#第１週"></a>第１週</h2>
<h3 id="一日目"><a class="header-anchor" href="#一日目"></a>一日目</h3>
<h4 id="寂しげ"><a class="header-anchor" href="#寂しげ"></a>寂しげ</h4>
<p>接続</p>
<p>A<s>い</s>げ</p>
<p>na<s>な</s>げ</p>
<p>vた<s>い</s>げ</p>
<p>⚠️ よ<s>い</s>さげ　な<s>い</s>さげ</p>
<p>例</p>
<p>涼しげ　自慢げ　自信有りげ　自信なさげ</p>
<p>あの人は寂しげな目をしている（＝寂しそうな）<br>
彼は何か言いたげだった（＝言いたそう）</p>
<h4 id="病気がち"><a class="header-anchor" href="#病気がち"></a>病気がち</h4>
<p>接続</p>
<p>Nがち</p>
<p>v<s>ます</s>がち</p>
<p>例</p>
<p>ありがち　遅れがち</p>
<p>～しがち　～になりがち</p>
<p>留守がち　遠慮がち</p>
<p>私は子供の頃、病気がちだった　（＝病気になることが多かった）<br>
最近、彼は仕事を休みがちだ　（＝休むことが多い）</p>
<h4 id="忘れっぽい"><a class="header-anchor" href="#忘れっぽい"></a>忘れっぽい</h4>
<p>接続</p>
<p>nっぽい</p>
<p>v<s>ます</s>っぽい　a<s>い</s>っぽい</p>
<p>例</p>
<p>子供っぽい</p>
<p>男っぽい　女っぽい</p>
<p>油っぽい　水っぽい</p>
<p>黒っぽい　白っぽい</p>
<p>怒りっぽい</p>
<p>飽きっぽい</p>
<p>年を取ると、忘れぽくなる。　（＝よく忘れるようになる）</p>
<p>このコート、デザインはいいけれど、生地が安っぽいね。（＝安く見える）</p>
<h4 id="疲れ気味"><a class="header-anchor" href="#疲れ気味"></a>疲れ気味</h4>
<p>接続</p>
<p>v<s>ます</s>気味</p>
<p>n気味</p>
<p>例</p>
<p>太り気味</p>
<p>遅れ気味</p>
<p>寝不足気味</p>
<p>残業続きで疲れ気味だ。（＝ちょっと疲れている）</p>
<p>新入社員は緊張気味の顔をしていた。（＝ちょっと緊張した）</p>
<p>一 接续：体言｜形容詞語幹｜形容動詞語幹｜動詞連用形＋げ ，表示某种神情，样子，情形，感觉。</p>
<p>二 接续：名詞｜動詞連用形＋がち ，容易，常常，一般用于不好或者消极的场合</p>
<p>三 接续：名词｜形容詞語幹｜動詞連用形＋ぽい， “好~~”“容易~~”表示具有某种气质</p>
<p>四 接续：体言｜動詞連用形＋気味（ぎみ） ，有点， 有些 （表示身心的感受感触等）</p>
<hr>
<h3 id="二日目"><a class="header-anchor" href="#二日目"></a>二日目</h3>
<h4 id="帰れるものなら"><a class="header-anchor" href="#帰れるものなら"></a>帰れるものなら</h4>
<p>①接続</p>
<p>vれる(可能形)＋ものなら/もんなら</p>
<p>意味：</p>
<p>表示“前项一般来说是很难实现的，但是倘若真能实现的话，到想试试看”的意思。谓语多数为愿望、劝诱等形式。不过话中暗示着“实际上那是不可能的或是很难做到的”等语气。</p>
<p>例</p>
<p>戻れるものなら</p>
<p>行けるものなら</p>
<p>休めるものなら</p>
<p><u>帰れるものなら</u>、今すぐ、国へ帰りたい。(=帰れないが、もしも帰れるなら)</p>
<p><u>やれるもんなら</u>、やってみろ。(=できないと思うが、もしできるなら)</p>
<p>②接続</p>
<p>動詞 （よ）う形 ＋ものなら</p>
<p>意味：</p>
<p>表示要是做了本不该做的事，或不希望看到的情况万一发生了的话，就会产生严重的后果。这是一种略带夸张的表达方式。</p>
<p>例</p>
<p>1、昔は親に反抗しようものなら、すぐに叩かれたものだ。/在从前，如果向父母反抗的话，马上就会遭到父母的呵斥。</p>
<p>2、もし、夫に浮気がばれようものなら、半殺しの目に遭うだろう。/老公知道了我在外面有外遇的话，估计会整得我半死。</p>
<p>3、ちょっとでもミスを犯そうものなら、上司にひどく怒られる。/要是出现一点点疏忽，就会遭到上司的严厉训斥。</p>
<h4 id="暑いものだから"><a class="header-anchor" href="#暑いものだから"></a>暑いものだから</h4>
<p>接続</p>
<p>名詞[な形]　　　　　　＋ものだから/もんだから</p>
<p>ナ形容詞[な形]　　　　＋ものだから/もんだから</p>
<p>イ形容詞と動詞の辞書形＋ものだから/もんだから</p>
<p>各品詞の[た形]　　　　＋ものだから/もんだから</p>
<p>意味：</p>
<p>表示因为前项的原因，才迫使自己做了后项的事情或发生了后项。对说话人来说，后项的出现多数是意外的或令人惊讶的事情，有时也伴有辩解的语气。会话中常用[～もんだから]。也可以用[～ものだから]作谓语结束句子。“因为。。。。”。</p>
<p>例</p>
<p>いないものだから</p>
<p>かわいかったものだから</p>
<p>好きなものだから</p>
<p>子供なものだから</p>
<p>上着を脱いでもいいですか。<u>暑いものですから</u>。(=暑いので)</p>
<p>遅くなってごめん。道路が<u>混んでいたもんだから</u>。(=混んでいたので)</p>
<h4 id="知らなかったんだもの"><a class="header-anchor" href="#知らなかったんだもの"></a>知らなかったんだもの</h4>
<p>接続</p>
<p>v/a/na/n(普)　　　+もの/もん</p>
<p>v/a/na/n(普)　んだ+もの/もん</p>
<p>⚠️ naなんだ+もの/もん</p>
<p>⚠️ nなんだ +もの/もん</p>
<p>⚠️ 女性や子供がよく使う</p>
<p>例</p>
<p>疲れる(んだ)もん</p>
<p>かわいい(んだ)もん</p>
<p>いや(なん)だもん</p>
<p>パーティーには行かないかったよ。<u>知らなかった(んだ)もの</u>。(=知らなかったから)</p>
<p>しょうがないよ。<u>子供(なん)だもん</u>。(=子供だから)</p>
<h4 id="持っているものの"><a class="header-anchor" href="#持っているものの"></a>持っているものの</h4>
<p>接続</p>
<p>v/a/na/n(普)　+ものの</p>
<p>⚠️ na <s>だ</s>な+ものの</p>
<p>n<s>だ</s>である　+ものの</p>
<p>⭐ a/n は　「～とはいうものの」の形で使うことが多い</p>
<p>意味：</p>
<p>和「～けれども」、「～といっても/と思っても」的意思基本相同。表示后想的结果并不顺应前项的事实发展，并不是现象的那样。“虽然……但是……”。</p>
<p>例</p>
<p>車の免許は<u>持っているものの</u>、ほとんど運転したことがない。(=持っているけれど)</p>
<p><u>申し込みはしたものの</u>、試験を受けるかどうか未定だ。(=申し込んだけれど)</p>
<p><u>春とはいうものの</u>、まだ寒い。(=春だというけれど)</p>
<hr>
<h3 id="三日目"><a class="header-anchor" href="#三日目"></a>三日目</h3>
<h4 id="車はもとより自転車もないんです"><a class="header-anchor" href="#車はもとより自転車もないんです"></a>車はもとより自転車もないんです</h4>
<p>接続</p>
<p>nは　もとより～も</p>
<p>⭐ 「nはもちろん～も」の硬い表現</p>
<p>うちには、<u>車もとより</u>自転車もないんです。(=もちろん車もないし)</p>
<p>レタスは<u>サラダで食べるのはもとより</u>、炒めても美味しい。(=もちろんサラダで食べるのも美味しいし)</p>
<h4 id="見た目はもともかく味は"><a class="header-anchor" href="#見た目はもともかく味は"></a>見た目はもともかく味は</h4>
<p>接続</p>
<p>nはともかく(として)　+　n2は/n2が</p>
<p>例</p>
<p>あなたはともかく　私は</p>
<p>母の料理は<u>見た目はともかく</u>味は美味しい(=見た目はどうか、分からないが)</p>
<p>あの女優は、<u>顔はともかくとして</u>演技が素晴らしい。(=顔はどうか、分からないが)</p>
<h4 id="旅行はまだしも"><a class="header-anchor" href="#旅行はまだしも"></a>旅行はまだしも</h4>
<p>接続</p>
<p>nは　　まだしも<br>
nなら　まだしも</p>
<p>意味</p>
<p>要是…的话还可以,可是…(表示埋怨)</p>
<p>例</p>
<p>私の英語力では、<u>旅行はまだしも</u>、留学なんて無理です。(=旅行なら少しはいいが)</p>
<p><u>10分や20分ならまだしも、１時間も待てません。(=10分や20分なら少しはいいが)</p>
<h4 id="仕事の話は抜きにして"><a class="header-anchor" href="#仕事の話は抜きにして"></a>仕事の話は抜きにして</h4>
<p>接続</p>
<p>nは/n(を) +　抜きにして</p>
<p>nは/n(を) +　抜きで</p>
<p>nは/n(を) +　抜きに</p>
<p>nは/n(を) +　抜きの n</p>
<p>n(を) + 抜きにして(は)　+　vれない</p>
<p>n(を) + ぬきで(は)　+　vれない</p>
<p>n(を) + 抜きに(は)　+　vれない</p>
<p>意味</p>
<p>用法：和「～ないで」「～なしに」的用法基本相同。</p>
<p>相当于汉语的：「不～」「撇开～」「没有～」</p>
<p>例</p>
<p>皆さん、<u>仕事の話は抜きにして</u>楽しく飲むましょう。(=仕事の話はやめて)</p>
<p><u>お世辞抜きに、君の日本語は本道にうまいよ。(=お世辞ではなく)</p>
<p><u>田中さん抜きで(は)</u>パーティーは始められません。(=田中さんがいなくては)</p>
<hr>
<h3 id="四日目"><a class="header-anchor" href="#四日目"></a>四日目</h3>
<h4 id="心配でたまらない"><a class="header-anchor" href="#心配でたまらない"></a>心配でたまらない</h4>
<p>接続</p>
<p>aくて　たまらない</p>
<p>naで　たまらない</p>
<p>⚠️ vたくて　たまらない</p>
<p>意味</p>
<p>⭐ 「我慢できないぐらい～だ」という意味</p>
<p>表示很自然产生的某种心情、感情或感觉很强烈，达到了自己无法抑制的状态。主语必须是第一人称。</p>
<p>……得不得了；……得很 …受不了</p>
<p>例</p>
<p>好きでたまらない</p>
<p>不思議でたまらない</p>
<p>子供のことが<u>心配でたまらない</u>(=とても心配だ)</p>
<p>家族に<u>会いたくてたまらない</u>(=とても会いたい)</p>
<h4 id="暇でしょうがない"><a class="header-anchor" href="#暇でしょうがない"></a>暇でしょうがない</h4>
<p>接続</p>
<p>aくて　仕方がない/しょうがない/しようがない</p>
<p>naで　 仕方がない/しょうがない/しようがない</p>
<p>vて　　仕方がない/しょうがない/しようがない</p>
<p>意味</p>
<p>vは感情・感覚・困った状態を表すもの</p>
<p>表示很自然产生的某种心情、感情或感觉很强烈，达到了自己无法抑制的状态。</p>
<p>……得不得了；……得很</p>
<p>例</p>
<p>寒くてしょうがない</p>
<p>気になってしょうがない</p>
<p>お腹がすいてしょうがない</p>
<p>今日は何もすることがなくて、<u>暇で仕方がない</u>(=とても暇だ)</p>
<p>そんな方法では、<u>時間がかかってしょうがない</u>(=とても時間がかかる)</p>
<h4 id="うるさくてかなわない"><a class="header-anchor" href="#うるさくてかなわない"></a>うるさくてかなわない</h4>
<p>接続</p>
<p>aくて　かなわない</p>
<p>naで　かなわない</p>
<p>意味</p>
<p>「～で困る」という意味。感情には使わない</p>
<p>前项接消极的内容，表示程度太过度，让人反感和为难。</p>
<p>例</p>
<p>となりの工事が<u>うるさくてかなわない</u>(=うるさくて困る)</p>
<p>私の家は、駅から遠くて<u>不便でかなわない</u>(=不便で困る)</p>
<h4 id="残念でならない"><a class="header-anchor" href="#残念でならない"></a>残念でならない</h4>
<p>接続</p>
<p>aくて　ならない</p>
<p>naで　ならない</p>
<p>vて　　ならない</p>
<p>意味</p>
<p>自然になる気持ちの場合に使う</p>
<p>表示很自然产生的某种心情、感情或感觉很强烈，达到了自己无法抑制的状态。后面常接“見える”“思える”等感觉动词的自发形态 。比…てたまらない郑重，前面如果是“思える”“思い出される”等自发动词时不能用…てたまらない替换。可译为 ” 非常… ” 、 ” 总觉得… ” 、 ” …得不得了 ” 、 ” …得受不了 ” 等。</p>
<p>例</p>
<p>気の毒でならない</p>
<p>かわいそうでならない</p>
<p>思えてならない/思われてならない</p>
<p>気がしてならない</p>
<p>親友の結婚式に出席できないのが、<u>残念でならない</u>。(=とても残念だ)</p>
<p>検査の結果が<u>気になってならない</u>(=とても気になる)</p>
<h4 id="主要区别："><a class="header-anchor" href="#主要区别："></a>主要区别：</h4>
<p>～てならない：</p>
<p>也是书面用语，略显古朴的说法。……得不得了，……不由得</p>
<p>～てたまらない：</p>
<p>用于表达第一人称的感情，感觉和欲望所达到的利害程度。主要用于以下场合：</p>
<p>1、表示滑稽或有趣的样态　　　                         おもしろくてたまらない</p>
<p>2、表示非常希望得到某物或实现某事物的样态　　　欲しくてたまたない</p>
<p>3、身体难以支撑或精神不堪重负　                    　寒気がしてたまらない</p>
<p>～てしかたがない：</p>
<p>表示某种心情或感觉等非常强烈，达到了无法抑制或不能抵抗的程度。</p>
<p>～て（は）かなわない：</p>
<p>前项接消极的，表示程度太过度，让人反感和为难。</p>
<hr>
<h3 id="五日目"><a class="header-anchor" href="#五日目"></a>五日目</h3>
<h4 id="食べない小田はない"><a class="header-anchor" href="#食べない小田はない"></a>食べない小田はない</h4>
<p>接続</p>
<p>aくない　　　+ ことはない</p>
<p>naじゃない　+　ことはない</p>
<p>vない　　　+　ことはない</p>
<p>vられない　+　ことはない</p>
<p>意味</p>
<p>表示不是完全不可能，尚有某些可能性.</p>
<p>相当于汉语的：「(也)不是～不～ 」「(也)不是～没有～」</p>
<p>例</p>
<p><u>食べないことはないが</u>、あまり好きじゃない。(=食べるといっていいが)</p>
<p>お酒やタバコをやめるのは難しいが、<u>やめられないことはない</u>(=やめることは可能である)</p>
<h4 id="覚えられないこともない"><a class="header-anchor" href="#覚えられないこともない"></a>覚えられないこともない</h4>
<p>接続</p>
<p>aくない　+　こともない</p>
<p>naじゃない　+　こともない</p>
<p>vない　　　+　こともない</p>
<p>vられない　+　こともない</p>
<p>例</p>
<p>毎日漢字を四つか五つなら、<u>覚えられないこともない</u>。(=覚えられるかもしれない)</p>
<p>この会社を辞める人の気持ち<u>がわからないこともない</u>(=わかるように思う)</p>
<h4 id="言わないではいられない"><a class="header-anchor" href="#言わないではいられない"></a>言わないではいられない</h4>
<p>接続</p>
<p>vないでは　いられない</p>
<p>意味</p>
<p>表示无法克制，自然地变得如此。</p>
<p>相当于汉语的：「不由得～」「不能不～」</p>
<p>例</p>
<p>態度の悪い店員に、一言文句を<u>言わないではいられなかった</u>。(=言うことをやめられなかった)</p>
<p>工事の音がうるさくて、耳を<u>ふさがないではいられない</u>(=ふさぐことをやめられない)</p>
<h4 id="飲まずにはいられない"><a class="header-anchor" href="#飲まずにはいられない"></a>飲まずにはいられない</h4>
<p>接続</p>
<p>v<s>ない</s>ずには　いられない</p>
<p>⚠️ しない -&gt;せず</p>
<p>⭐　「～ないではいられない」の硬い表現</p>
<p>例</p>
<p>職場で嫌なことがあると、酒を<u>飲まずにはいられない</u>。(=飲むことをやめられない)</p>
<p>あの映画を見たら、誰でも<u>感動せずにはいられない</u>だろう。(=感動することをやめられない/感動する)</p>
<h2 id="第２週"><a class="header-anchor" href="#第２週"></a>第２週</h2>
<h3 id="一日目-2"><a class="header-anchor" href="#一日目-2"></a>一日目</h3>
<h4 id="努力のかいがあって"><a class="header-anchor" href="#努力のかいがあって"></a>努力のかいがあって</h4>
<p><u>努力のかいあって</u>、希望の大学に合格した(=努力の効果があって)</p>
]]></content>
      <categories>
        <category>日语</category>
      </categories>
      <tags>
        <tag>日语</tag>
        <tag>jlpt</tag>
      </tags>
  </entry>
  <entry>
    <title>nas-ubuntu</title>
    <url>/2019/09/08/cn/nas-ubuntu/</url>
    <content><![CDATA[<p>在群晖nas上安装ubuntu</p>
<span id="more"></span>
<p>最终效果 使用群晖自带的dnns实现外网ssh访问(tomcat最终没有实现外网访问具体原因还在调查中)</p>
<h2 id="安装ubuntu"><a class="header-anchor" href="#安装ubuntu"></a>安装ubuntu</h2>
<ol>
<li>
<p>下载ubuntu镜像</p>
</li>
<li>
<p>在群晖套件中心下载群晖VMM</p>
</li>
<li>
<p>VMM设置</p>
</li>
</ol>
<ul>
<li>
<p>下载 Guest Tool<br>
<img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/nas-ubuntu-1.png" alt="nas-ubuntu-1.png"></p>
</li>
<li>
<p>新增-&gt;选择自己刚刚下载的ubuntu镜像</p>
</li>
<li>
<p>完成后状态如下图<br>
<img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/nas-ubuntu-2.png" alt="nas-ubuntu-2.png"></p>
</li>
<li>
<p>虚拟机-&gt;新增这里都比较简单 按自己需要设置就行需要注意的是其他设置里面选择启动iso文件是用的ubuntu的镜像文件,下面一个选择刚刚的Guest Tool<br>
如果这里有什么不明白可以参考<a href="https://www.bilibili.com/video/av25745315/">群晖的官方视频教程</a></p>
</li>
</ul>
<ol start="4">
<li>测试ssh</li>
</ol>
<p><code>ssh 用户名@内网地址</code></p>
<h2 id="外网设置"><a class="header-anchor" href="#外网设置"></a>外网设置</h2>
<p>需要自己家网有外网ip 这部分可以参考 <a href="https://www.youtube.com/watch?v=6baVu1yLZ9Q">视频</a></p>
<ol>
<li>
<p>需要在路由器设置端口转发</p>
</li>
<li>
<p>设置群晖的DNNS</p>
</li>
<li>
<p>配置好后可以使用 ssh -p 22 用户名@主机域名 就可以直接连到我们在nas上的ubuntu主机了</p>
</li>
</ol>
<h2 id="部署tomcat"><a class="header-anchor" href="#部署tomcat"></a>部署tomcat</h2>
<p>参考 <a href="https://cloud.tencent.com/developer/article/1162159">这篇文章</a></p>
]]></content>
      <categories>
        <category>nas</category>
      </categories>
      <tags>
        <tag>nas</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>palette-websites</title>
    <url>/2017/09/15/cn/palette-websites/</url>
    <content><![CDATA[<p>一些调色板相关的网站</p>
<span id="more"></span>
<p><a href="https://www.bilibili.com/video/av14480705/">具体视频在这里</a></p>
<p>选了几个比较喜欢的</p>
<h2 id="uigradients"><a class="header-anchor" href="#uigradients"></a><a href="https://uigradients.com/">uigradients</a></h2>
<h2 id="adobe-kuler"><a class="header-anchor" href="#adobe-kuler"></a><a href="https://color.adobe.com">adobe kuler</a></h2>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>palette</tag>
      </tags>
  </entry>
  <entry>
    <title>pc-notes</title>
    <url>/2017/12/07/cn/pc-notes/</url>
    <content><![CDATA[<p>一些pc知识笔记</p>
<span id="more"></span>
<p>路漫漫其修远兮,吾将上下而求索</p>
<h2 id="system"><a class="header-anchor" href="#system"></a>system</h2>
<h3 id="UEFI"><a class="header-anchor" href="#UEFI"></a>UEFI</h3>
<h3 id="GPT"><a class="header-anchor" href="#GPT"></a>GPT</h3>
<h3 id="install-win10"><a class="header-anchor" href="#install-win10"></a>install win10</h3>
<h4 id="download-win10"><a class="header-anchor" href="#download-win10"></a><a href="https://msdn.itellyou.cn/">download win10</a></h4>
<h2 id="hardware"><a class="header-anchor" href="#hardware"></a>hardware</h2>
<p>想要使用 GPT分区 UEFI启动的话如下操作 <a href="https://jingyan.baidu.com/article/425e69e6e1b0a1be15fc16aa.html">可以参考这个</a><br>
就是先在pe或其他系统里面 用diskGenius转成GUID格式 然后再从u盘启动 安装的时候不要再格式化那个硬盘直接选盘符安装即可</p>
<h3 id="4k-对齐"><a class="header-anchor" href="#4k-对齐"></a>4k 对齐</h3>
<h3 id="ACHI"><a class="header-anchor" href="#ACHI"></a>ACHI</h3>
<h2 id="固态"><a class="header-anchor" href="#固态"></a>固态</h2>
<blockquote>
<p>NAND闪存：不同的颗粒，不同的寿命 市面上的SSD的NAND闪存颗粒分为SLC,MLC,TLC三种。简单来说，SLC是速度最大，寿命最长，所以当然也就是最贵的；MLC则是SLC速度的折中，寿命的十分之一，三分之一的价格（大约），是目前最流行的一种，适中的各种属性十分合适普通消费者。TLC在刚刚推出的时候被人诟病为短寿、廉价、低端，不过随着科技的进步，尤其是近几年，在三星力推TLC技术之后，TLC的速度问题和寿命问题已经得到了很大改善，正因为如此，越来越多的厂商加入了TLC颗粒SSD的生产行列中。因此选择TLC也是没有问题的哦~</p>
</blockquote>
<h2 id="硬盘操作"><a class="header-anchor" href="#硬盘操作"></a>硬盘操作</h2>
<p>一般用 DiskGenius<br>
如果硬盘变为raw了 可以用管理员打开cmd 运行 chkdsk D:/f  D就是需要恢复的盘</p>
<h3 id="装机软件"><a class="header-anchor" href="#装机软件"></a>装机软件</h3>
<ol>
<li>常用软件<br>
1.<a href="https://im.qq.com/pcqq/">QQ</a><br>
1.<a href="http://wangwang.taobao.com/">阿里旺旺</a></li>
<li>系统软件<br>
1.<a href="https://www.kaspersky.com.cn/downloads/thank-you/total-security-free-trial">卡巴斯基</a><br>
1.<a href="http://www.kbtool.cn/">卡巴工具箱</a><br>
1.<a href="https://cn.ultraiso.net/xiazai.html">软碟通</a><br>
激活 王涛 7C81-1689-4046-626F</li>
<li>输入法<br>
1.<a href="https://pinyin.sogou.com/">搜狗</a><br>
1.<a href="http://ime.baidu.jp/type/">百度日语输入法</a></li>
<li>学习工具<br>
1.<a href="http://www.ankichina.net/">anki</a><br>
1.<a href="http://www.aboboo.com/download/">aboboo</a><br>
1.<a href="http://note.youdao.com/download.html">有道云笔记</a></li>
<li>Apple<br>
1.<a href="https://www.apple.com/cn/itunes/">itunes</a><br>
1.<a href="https://www.itools.cn/">itools</a></li>
</ol>
]]></content>
      <categories>
        <category>pc</category>
      </categories>
      <tags>
        <tag>pc</tag>
      </tags>
  </entry>
  <entry>
    <title>atom proxy</title>
    <url>/2017/08/05/cn/proxy/</url>
    <content><![CDATA[<p>atom 中配置路由</p>
<span id="more"></span>
<p>今天尝试了一下使用atom 感觉和sublime很像(当然sublime也可以预览markdown) 主要是看上了她的markdown实时的编辑<br>
但是atom下载packages的时候连的外网却连不上 我这边开了本地的1080端口开了代理所以进行如下操作即可</p>
<p>cmd 运行：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">apm config <span class="token builtin class-name">set</span> strict-ssl <span class="token boolean">false</span>
apm config <span class="token builtin class-name">set</span> https-proxy http://127.0.0.1:1080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>参考文章</p>
<p>Atom代理设置 <a href="http://www.jianshu.com/p/24cd35cd4b03">http://www.jianshu.com/p/24cd35cd4b03</a></p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>atom</tag>
      </tags>
  </entry>
  <entry>
    <title>软路由备忘</title>
    <url>/2020/06/06/cn/router/</url>
    <content><![CDATA[<p>备忘</p>
<span id="more"></span>
<h2 id="端口分布"><a class="header-anchor" href="#端口分布"></a>端口分布</h2>
<table>
<thead>
<tr>
<th>端口</th>
<th>程序</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>ikuai</td>
<td>wan</td>
</tr>
<tr>
<td>2~4</td>
<td>二级路由</td>
<td>连其他设备</td>
</tr>
<tr>
<td>5</td>
<td>ikuai 二级路由公用 lan 口</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="Tips-2"><a class="header-anchor" href="#Tips-2"></a>Tips</h2>
<h3 id="问题集-3"><a class="header-anchor" href="#问题集-3"></a>问题集</h3>
<ol>
<li>软路由断电后重连操作</li>
</ol>
<p>因为 pve 设置开机自动启动可能导致一些小问题所以都是手动启动<br>
连接软路由 1 口-&gt;手动修改 ip 为 192.168.1.x 路由写 192.168.1.1 就行-&gt; 登陆 pve 后台 192.168.1.4:8006</p>
]]></content>
      <categories>
        <category>软路由</category>
      </categories>
      <tags>
        <tag>软路由</tag>
      </tags>
  </entry>
  <entry>
    <title>shuangpin</title>
    <url>/2017/11/07/cn/shuangpin/</url>
    <content><![CDATA[<p><a href="http://www.flypy.com/">小鹤双拼</a></p>
<span id="more"></span>
<p>记忆表格<br>
<img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/shuangpin/1.png?x-oss-process=style/blogimage" alt="mark"></p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>sql</title>
    <url>/2019/02/23/cn/sql/</url>
    <content><![CDATA[<p>必要的sql 备注</p>
<span id="more"></span>
<h2 id="oracle"><a class="header-anchor" href="#oracle"></a>oracle</h2>
<h3 id="查询表结构"><a class="header-anchor" href="#查询表结构"></a>查询表结构</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">desc</span> tablename<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="打开编辑窗口-编辑完后-执行"><a class="header-anchor" href="#打开编辑窗口-编辑完后-执行"></a>打开编辑窗口 编辑完后/执行</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">ed<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="连接字符串"><a class="header-anchor" href="#连接字符串"></a>|| 连接字符串</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> last_name<span class="token operator">||</span><span class="token string">'`s job is '</span><span class="token operator">||</span>job_id <span class="token keyword">from</span> employees<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="不等于"><a class="header-anchor" href="#不等于"></a>&lt;&gt; 不等于</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> job_id <span class="token operator">&lt;></span> <span class="token string">'IT_PROG'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="去重-distinct"><a class="header-anchor" href="#去重-distinct"></a>去重 distinct</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">distinct</span> job_id <span class="token keyword">from</span> employees<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="where"><a class="header-anchor" href="#where"></a>where</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">where</span> department_id <span class="token operator">=</span> <span class="token number">90</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="范围"><a class="header-anchor" href="#范围"></a>范围</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> last_name
<span class="token keyword">from</span> employees 
<span class="token keyword">where</span> salary<span class="token operator">>=</span><span class="token number">4000</span> <span class="token operator">and</span> salary<span class="token operator">&lt;=</span><span class="token number">7000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="in"><a class="header-anchor" href="#in"></a>in</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> last_name
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> department_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="between-包含边界"><a class="header-anchor" href="#between-包含边界"></a>between 包含边界</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> last_name
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> salary <span class="token operator">between</span> <span class="token number">3000</span> <span class="token operator">and</span> <span class="token number">5000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="like"><a class="header-anchor" href="#like"></a>like</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> last_name
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> last_name <span class="token operator">like</span> <span class="token string">'%a%'</span> <span class="token comment">-- 名字中含有a</span>

<span class="token keyword">where</span> last_name <span class="token operator">like</span> <span class="token string">'%a'</span> <span class="token comment">-- 以a结尾</span>
<span class="token keyword">where</span> last_name <span class="token operator">like</span> <span class="token string">'_a%'</span> <span class="token comment">-- 第二个字符是a</span>
<span class="token keyword">where</span> last_name <span class="token operator">like</span> <span class="token string">'#_%'</span> <span class="token keyword">escape</span> <span class="token string">'#'</span> <span class="token comment">-- 名字中带有_</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="is-null"><a class="header-anchor" href="#is-null"></a>is null</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> last_name
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> commission_pct <span class="token operator">is</span> <span class="token boolean">null</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="order-by"><a class="header-anchor" href="#order-by"></a>order by</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> last_name
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> department_id <span class="token operator">=</span><span class="token number">80</span>
<span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">desc</span><span class="token punctuation">,</span>last_name <span class="token keyword">asc</span> <span class="token comment">-- 多层排序</span>

<span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">asc</span>

<span class="token comment">--按照别名排序</span>
<span class="token keyword">select</span> last_name<span class="token punctuation">,</span> <span class="token number">12</span><span class="token operator">*</span>salary annual_sal
<span class="token keyword">from</span> employees
<span class="token keyword">order</span> <span class="token keyword">by</span> annual_sal <span class="token keyword">desc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="函数"><a class="header-anchor" href="#函数"></a>函数</h3>
<h4 id="单行函数"><a class="header-anchor" href="#单行函数"></a>单行函数</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> 
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> upper<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'KING'</span>
<span class="token keyword">where</span> lower<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'king'</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="字符控制函数"><a class="header-anchor" href="#字符控制函数"></a>字符控制函数</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> CONCAT<span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span> <span class="token string">'World'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual
<span class="token keyword">select</span> SUBSTR<span class="token punctuation">(</span><span class="token string">'HelloWorld'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual <span class="token comment">-- 第一位下标1 截取5个数</span>
<span class="token keyword">select</span> LENGTH<span class="token punctuation">(</span><span class="token string">'HelloWorld'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual
<span class="token keyword">select</span> INSTR<span class="token punctuation">(</span><span class="token string">'HelloWorld'</span><span class="token punctuation">,</span> <span class="token string">'W'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual
<span class="token keyword">select</span> LPAD<span class="token punctuation">(</span>salary<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual
<span class="token keyword">select</span> RPAD<span class="token punctuation">(</span>salary<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual
<span class="token keyword">select</span> TRIM<span class="token punctuation">(</span><span class="token string">'H'</span> <span class="token keyword">FROM</span> <span class="token string">'HelloWorld'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual
<span class="token keyword">select</span> <span class="token keyword">REPLACE</span><span class="token punctuation">(</span>‘abcd’<span class="token punctuation">,</span>’b’<span class="token punctuation">,</span>’m’<span class="token punctuation">)</span> <span class="token keyword">from</span> dual <span class="token comment">-- 替换所有匹配到的</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="数字函数"><a class="header-anchor" href="#数字函数"></a>数字函数</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">45.926</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual <span class="token comment">-- 四舍五入</span>

<span class="token keyword">select</span> TRUNC<span class="token punctuation">(</span><span class="token number">45.926</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual <span class="token comment">-- 截断</span>

<span class="token keyword">select</span> <span class="token function">MOD</span><span class="token punctuation">(</span><span class="token number">1600</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual <span class="token comment">-- 求余数</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="日期函数"><a class="header-anchor" href="#日期函数"></a>日期函数</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 日期相减 表示相差天数</span>
<span class="token keyword">select</span> last_name<span class="token punctuation">,</span>trunc<span class="token punctuation">(</span>sysdate<span class="token operator">-</span>hire_date<span class="token punctuation">)</span>
<span class="token keyword">from</span> employees

<span class="token comment">-- 两个日期相差的月数</span>
MONTHS_BETWEEN

<span class="token comment">-- 向指定日期中加上若干月数</span>
ADD_MONTHS

<span class="token comment">-- 指定日期的下一个星期 * 对应的日期</span>
NEXT_DAY

<span class="token comment">-- 本月的最后一天</span>
LAST_DAY

<span class="token comment">-- 日期四舍五入</span>
<span class="token function">ROUND</span><span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span><span class="token string">'MONTH'</span><span class="token punctuation">)</span>

<span class="token comment">-- 日期截断</span>
TRUNC<span class="token punctuation">(</span>SYSDATE <span class="token punctuation">,</span><span class="token string">'MONTH'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>符号</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>yyyy</td>
<td>年</td>
</tr>
<tr>
<td>mm</td>
<td>月</td>
</tr>
<tr>
<td>dd</td>
<td>日</td>
</tr>
<tr>
<td>day</td>
<td>星期</td>
</tr>
<tr>
<td>hh</td>
<td>小时</td>
</tr>
<tr>
<td>mi</td>
<td>分钟</td>
</tr>
<tr>
<td>ss</td>
<td>秒</td>
</tr>
</tbody>
</table>
<h3 id="转换函数"><a class="header-anchor" href="#转换函数"></a>转换函数</h3>
<h4 id="to-char"><a class="header-anchor" href="#to-char"></a>to_char</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> employee_id<span class="token punctuation">,</span>hire_date
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> to_char<span class="token punctuation">(</span>hire_date<span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'1994-06-07'</span>

<span class="token keyword">select</span> to_char<span class="token punctuation">(</span><span class="token number">12345678.9</span><span class="token punctuation">,</span> <span class="token string">'999,999,999.99'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token comment">-- 12,345,678.90</span>

<span class="token keyword">select</span> to_char<span class="token punctuation">(</span><span class="token number">12345678.9</span><span class="token punctuation">,</span> <span class="token string">'000,999,999.99'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token comment">--  012,345,678.90</span>

<span class="token keyword">select</span> to_char<span class="token punctuation">(</span><span class="token number">12345678.9</span><span class="token punctuation">,</span> <span class="token string">'$000,999,999.99'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual

<span class="token keyword">select</span> to_char<span class="token punctuation">(</span><span class="token number">12345678.9</span><span class="token punctuation">,</span> <span class="token string">'L000,999,999.99'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual <span class="token comment">-- 当地货币符号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="to-number"><a class="header-anchor" href="#to-number"></a>to_number</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> to_number<span class="token punctuation">(</span><span class="token string">'￥012,345,678.90'</span><span class="token punctuation">,</span><span class="token string">'L000,999,999.99'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="to-date"><a class="header-anchor" href="#to-date"></a>to_date</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees
<span class="token keyword">where</span> hire_date <span class="token operator">=</span> to_date<span class="token punctuation">(</span><span class="token string">'1994-06-07'</span><span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="通用函数"><a class="header-anchor" href="#通用函数"></a>通用函数</h3>
<h4 id="nvl"><a class="header-anchor" href="#nvl"></a>nvl</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 为空则用0代替</span>
<span class="token keyword">select</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>nvl<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> employees<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="nvl2"><a class="header-anchor" href="#nvl2"></a>nvl2</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 不为空+0.015 为空则返回0.01</span>
<span class="token keyword">select</span> last_name<span class="token punctuation">,</span>commission_pct<span class="token punctuation">,</span>nvl2<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span>commission_pct<span class="token operator">+</span><span class="token number">0.015</span><span class="token punctuation">,</span><span class="token number">0.01</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> employees<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="case"><a class="header-anchor" href="#case"></a>case</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_id<span class="token punctuation">,</span><span class="token keyword">case</span> department_id <span class="token keyword">when</span> <span class="token number">10</span> <span class="token keyword">then</span> salary<span class="token operator">*</span><span class="token number">1.1</span>
                                                              <span class="token keyword">when</span> <span class="token number">20</span> <span class="token keyword">then</span> salary<span class="token operator">*</span><span class="token number">1.2</span>
                                                              <span class="token keyword">else</span> salary<span class="token operator">*</span><span class="token number">1.3</span>end new_sal
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> department_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="decode"><a class="header-anchor" href="#decode"></a>decode</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>department_id<span class="token punctuation">,</span>decode<span class="token punctuation">(</span>department_id<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">1.1</span><span class="token punctuation">,</span>
                                                                <span class="token number">20</span><span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">1.2</span><span class="token punctuation">,</span>
                                                                salary<span class="token punctuation">)</span> new_sal
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> department_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="多表查询"><a class="header-anchor" href="#多表查询"></a>多表查询</h3>
<h4 id="内连接"><a class="header-anchor" href="#内连接"></a>内连接</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 等值连接</span>
<span class="token keyword">select</span> e<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span>e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>d<span class="token punctuation">.</span>department_name
<span class="token keyword">from</span> employees e<span class="token punctuation">,</span>departments d
<span class="token keyword">where</span> e<span class="token punctuation">.</span>department_id<span class="token operator">=</span>d<span class="token punctuation">.</span>department_id

<span class="token comment">-- 非等值连接</span>
<span class="token keyword">select</span> e<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span>e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>j<span class="token punctuation">.</span>grade_level
<span class="token keyword">from</span> employees e<span class="token punctuation">,</span>job_grades j
<span class="token keyword">where</span> e<span class="token punctuation">.</span>salary <span class="token operator">between</span> j<span class="token punctuation">.</span>lowest_sal <span class="token operator">and</span> j<span class="token punctuation">.</span>highest_sal<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="外连接"><a class="header-anchor" href="#外连接"></a>外连接</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 左外连接</span>
<span class="token comment">-- 有些员工没有部门</span>
<span class="token keyword">select</span> e<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span>e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>d<span class="token punctuation">.</span>department_name
<span class="token keyword">from</span> employees e<span class="token punctuation">,</span>departments d
<span class="token keyword">where</span> e<span class="token punctuation">.</span>department_id<span class="token operator">=</span>d<span class="token punctuation">.</span>department_id<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span>

<span class="token keyword">select</span> last_name<span class="token punctuation">,</span>e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>department_name
<span class="token keyword">from</span> employees e
<span class="token keyword">join</span> departments d
<span class="token keyword">on</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id

<span class="token comment">-- left join</span>
<span class="token keyword">select</span> last_name<span class="token punctuation">,</span>e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>department_name
<span class="token keyword">from</span> employees e
<span class="token keyword">left</span> <span class="token keyword">join</span> departments d
<span class="token keyword">on</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id

<span class="token comment">-- right join</span>
<span class="token keyword">select</span> last_name<span class="token punctuation">,</span>e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>department_name
<span class="token keyword">from</span> employees e
<span class="token keyword">right</span> <span class="token keyword">join</span> departments d
<span class="token keyword">on</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
hello
<span class="token comment">-- full join</span>
<span class="token keyword">select</span> last_name<span class="token punctuation">,</span>e<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>department_name
<span class="token keyword">from</span> employees e
<span class="token keyword">full</span> <span class="token keyword">join</span> departments d
<span class="token keyword">on</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id

<span class="token comment">-- 自连接</span>
<span class="token keyword">select</span> emp<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>emp<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>d<span class="token punctuation">.</span>department_name<span class="token punctuation">,</span>manager<span class="token punctuation">.</span>last_name
<span class="token keyword">from</span> employees emp
<span class="token keyword">join</span> employees manager
<span class="token keyword">on</span> emp<span class="token punctuation">.</span>manager_id <span class="token operator">=</span> manager<span class="token punctuation">.</span>employee_id
<span class="token keyword">join</span> departments d
<span class="token keyword">on</span> emp<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="分组函数"><a class="header-anchor" href="#分组函数"></a>分组函数</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- avg 会忽略空值 如果不想忽略则改为  avg(nvl(commission_pct,0))</span>
<span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">max</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">sum</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>
<span class="token keyword">from</span>   employees
<span class="token keyword">where</span>  job_id <span class="token operator">like</span> <span class="token string">'%REP%'</span>

<span class="token comment">-- count 会忽略空值 不想忽略则count(nvl(department_id))</span>
<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span>department_id<span class="token punctuation">)</span>
<span class="token keyword">from</span> employees

<span class="token comment">-- 非空且不重复的记录总数</span>
<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">distinct</span> department_id<span class="token punctuation">)</span>
<span class="token keyword">from</span>   employees

<span class="token comment">--gourp by</span>
<span class="token keyword">select</span> department_id<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>
<span class="token keyword">from</span> employees
<span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token punctuation">,</span>job_id

<span class="token comment">-- having where 里面不能出现分组函数 此时替换为having即可</span>
<span class="token keyword">select</span> department_id<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>
<span class="token keyword">from</span> employees
<span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token punctuation">,</span>job_id
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="子查询"><a class="header-anchor" href="#子查询"></a>子查询</h3>
<h4 id="单行子查询"><a class="header-anchor" href="#单行子查询"></a>单行子查询</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> last_name
<span class="token keyword">from</span>   employees
<span class="token keyword">where</span>  salary <span class="token operator">></span>
               <span class="token punctuation">(</span><span class="token keyword">select</span> salary
                <span class="token keyword">from</span>   employees
                <span class="token keyword">where</span>  last_name <span class="token operator">=</span> <span class="token string">'abel'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="多行子查询"><a class="header-anchor" href="#多行子查询"></a>多行子查询</h4>
<table>
<thead>
<tr>
<th>操作符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>IN</td>
<td>等于列表中的任意一个</td>
</tr>
<tr>
<td>ANY</td>
<td>和子查询返回的某一个值比较</td>
</tr>
<tr>
<td>ALL</td>
<td>和子查询返回的所有值比较</td>
</tr>
</tbody>
</table>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- any</span>
<span class="token keyword">select</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary
<span class="token keyword">from</span>   employees
<span class="token keyword">where</span>  salary <span class="token operator">&lt;</span> <span class="token keyword">any</span> <span class="token punctuation">(</span><span class="token keyword">select</span> salary
                     <span class="token keyword">from</span>   employees
                     <span class="token keyword">where</span>  job_id <span class="token operator">=</span> <span class="token string">'IT_PROG'</span><span class="token punctuation">)</span>
<span class="token operator">and</span>    job_id <span class="token operator">&lt;></span> <span class="token string">'IT_PROG'</span><span class="token punctuation">;</span>

<span class="token comment">-- all</span>
<span class="token keyword">select</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary
<span class="token keyword">from</span>   employees
<span class="token keyword">where</span>  salary <span class="token operator">&lt;</span> <span class="token keyword">all</span> <span class="token punctuation">(</span><span class="token keyword">select</span> salary
                     <span class="token keyword">from</span>   employees
                     <span class="token keyword">where</span>  job_id <span class="token operator">=</span> <span class="token string">'IT_PROG'</span><span class="token punctuation">)</span>
<span class="token operator">and</span>    job_id <span class="token operator">&lt;></span> <span class="token string">'IT_PROG'</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="创建管理表"><a class="header-anchor" href="#创建管理表"></a>创建管理表</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 查看用户定义的表</span>
<span class="token keyword">select</span> table_name <span class="token keyword">from</span> user_tables
<span class="token comment">-- 查看用户定义的各种数据库对象</span>
<span class="token keyword">select</span> <span class="token keyword">distinct</span> object_type <span class="token keyword">from</span> user_objects
<span class="token comment">-- 查看用户定义的表, 视图, 同义词和序列</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  user_catalog

<span class="token comment">-- 创建表的第一种方式</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> dept <span class="token punctuation">(</span>deptno number<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">-- 1位小数位</span>
                   dname varchar2<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                   loc varchar2<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 创建表的第二种方式</span>
<span class="token comment">-- 会导入数据</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> emp2
<span class="token keyword">as</span>
<span class="token keyword">select</span> employee_id id<span class="token punctuation">,</span>last_name name<span class="token punctuation">,</span>hire_date<span class="token punctuation">,</span>salary
<span class="token keyword">from</span> employees

<span class="token comment">-- 不导入数据</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> emp2
<span class="token keyword">as</span>
<span class="token keyword">select</span> employee_id id<span class="token punctuation">,</span>last_name name<span class="token punctuation">,</span>hire_date<span class="token punctuation">,</span>salary
<span class="token keyword">from</span> employees
<span class="token keyword">where</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">2</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> emp1
<span class="token keyword">add</span> <span class="token punctuation">(</span>email varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> emp1
<span class="token keyword">modify</span> <span class="token punctuation">(</span>email varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> emp1
<span class="token keyword">modify</span> <span class="token punctuation">(</span>salary number<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">2000</span><span class="token punctuation">)</span>

<span class="token keyword">alter</span> <span class="token keyword">table</span> emp1
<span class="token keyword">drop</span> <span class="token keyword">column</span> email

<span class="token keyword">alter</span> <span class="token keyword">table</span> emp1
<span class="token keyword">rename</span> salary <span class="token keyword">to</span> sal

<span class="token keyword">drop</span> <span class="token keyword">table</span> emp1

<span class="token keyword">truncate</span> <span class="token keyword">table</span> emp1
<span class="token comment">-- 清空表 不可回滚</span>

<span class="token keyword">rename</span> emp2 <span class="token keyword">to</span> employees2

<span class="token comment">-- 将列设置为不可用</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> emp1
<span class="token keyword">set</span> unused <span class="token keyword">column</span> test_column

<span class="token comment">-- 移除不使用的列</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> emp1
<span class="token keyword">drop</span> unused <span class="token keyword">columns</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="数据处理"><a class="header-anchor" href="#数据处理"></a>数据处理</h3>
<h4 id="insert"><a class="header-anchor" href="#insert"></a>insert</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> emp1<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span>employee_id<span class="token punctuation">)</span>
<span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'EE'</span><span class="token punctuation">,</span><span class="token number">1005</span><span class="token punctuation">)</span>

<span class="token comment">-- 数据从其他表导入</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> emp<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span>hire_date<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>salary<span class="token punctuation">)</span>
<span class="token keyword">select</span> employee_id<span class="token punctuation">,</span>hire_date<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>salary
<span class="token keyword">from</span> employees
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="update"><a class="header-anchor" href="#update"></a>update</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> emp1
<span class="token keyword">set</span> salary<span class="token operator">=</span><span class="token number">12000</span>
<span class="token keyword">where</span> employee_id <span class="token operator">=</span> <span class="token number">179</span>

<span class="token keyword">commit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="delete"><a class="header-anchor" href="#delete"></a>delete</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> department
<span class="token keyword">where</span> department_id <span class="token operator">=</span><span class="token number">270</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="事务"><a class="header-anchor" href="#事务"></a>事务</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">commit</span>

<span class="token keyword">savepoint</span> A

<span class="token keyword">rollback</span> <span class="token keyword">to</span> <span class="token keyword">savepoint</span> A

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> scott<span class="token punctuation">.</span>employees <span class="token keyword">for</span> <span class="token keyword">update</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="约束"><a class="header-anchor" href="#约束"></a>约束</h3>
<p>五种约束 NOT NULL,UNIQUE,PRIMARY KEY,FOREIGN KEY,CHECK</p>
<h4 id="NOT-NULL"><a class="header-anchor" href="#NOT-NULL"></a>NOT NULL</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> emp2<span class="token punctuation">(</span>
  id number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  name varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">constraint</span> emp3_name_nn <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
  email varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  salary number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="UNIQUE-都为空不违反唯一约束"><a class="header-anchor" href="#UNIQUE-都为空不违反唯一约束"></a>UNIQUE (都为空不违反唯一约束)</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> emp3<span class="token punctuation">(</span>
  id number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">constraint</span> emp3_id_uk <span class="token keyword">unique</span><span class="token punctuation">,</span>
  name varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">constraint</span> emp3_name_nn <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
  email varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  salary number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">--表级约束</span>
  <span class="token keyword">constraint</span> emp3_email_uk <span class="token keyword">unique</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="PRIMARY-KEY"><a class="header-anchor" href="#PRIMARY-KEY"></a>PRIMARY KEY</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> emp4<span class="token punctuation">(</span>
  id number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">constraint</span> emp4_id_pk <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
  name varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">constraint</span> emp4_name_nn <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
  email varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  salary number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">--表级约束</span>
  <span class="token keyword">constraint</span> emp4_email_uk <span class="token keyword">unique</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> emp4<span class="token punctuation">(</span>
  id number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
  name varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">constraint</span> emp4_name_nn <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
  email varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  salary number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">--表级约束</span>
  <span class="token keyword">constraint</span> emp4_id_pk <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
  <span class="token keyword">constraint</span> emp4_email_uk <span class="token keyword">unique</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="FOREIGN-KEY"><a class="header-anchor" href="#FOREIGN-KEY"></a>FOREIGN KEY</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> emp4<span class="token punctuation">(</span>
  id number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
  name varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">constraint</span> emp4_name_nn <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
  email varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  salary number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  department_id number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">--表级约束</span>
  <span class="token keyword">constraint</span> emp4_id_pk <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
  <span class="token keyword">constraint</span> emp4_email_uk <span class="token keyword">unique</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>
  <span class="token keyword">constraint</span> emp4_dept_id_fk <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>department_id<span class="token punctuation">)</span> <span class="token keyword">references</span> departments<span class="token punctuation">(</span>department_id<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> emp4<span class="token punctuation">(</span>
  id number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
  name varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">constraint</span> emp4_name_nn <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
  email varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  salary number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  department_id number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">--表级约束</span>
  <span class="token keyword">constraint</span> emp4_id_pk <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
  <span class="token keyword">constraint</span> emp4_email_uk <span class="token keyword">unique</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>
  <span class="token keyword">constraint</span> emp4_dept_id_fk <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>department_id<span class="token punctuation">)</span> <span class="token keyword">references</span> departments<span class="token punctuation">(</span>department_id<span class="token punctuation">)</span> <span class="token keyword">on</span> <span class="token keyword">delete</span> <span class="token keyword">cascade</span>
  <span class="token comment">-- ON DELETE CASCADE(级联删除): 当父表中的列被删除时，子表中相对应的列也被删除</span>
  <span class="token keyword">references</span> departments<span class="token punctuation">(</span>department_id<span class="token punctuation">)</span> <span class="token keyword">on</span> <span class="token keyword">delete</span> <span class="token keyword">set</span> <span class="token boolean">null</span>
  <span class="token comment">-- ON DELETE SET NULL(级联置空): 子表中相应的列置空</span>

<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="CHECK"><a class="header-anchor" href="#CHECK"></a>CHECK</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> emp4<span class="token punctuation">(</span>
  id number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
  name varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">constraint</span> emp4_name_nn <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
  email varchar2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  salary number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">check</span><span class="token punctuation">(</span>salary <span class="token operator">></span> <span class="token number">1500</span> <span class="token operator">and</span> salary <span class="token operator">&lt;</span> <span class="token number">30000</span><span class="token punctuation">)</span>
  department_id number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">--表级约束</span>
  <span class="token keyword">constraint</span> emp4_id_pk <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
  <span class="token keyword">constraint</span> emp4_email_uk <span class="token keyword">unique</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>
  <span class="token keyword">constraint</span> emp4_dept_id_fk <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>department_id<span class="token punctuation">)</span> <span class="token keyword">references</span> departments<span class="token punctuation">(</span>department_id<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="-2"><a class="header-anchor" href="#-2"></a></h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="-3"><a class="header-anchor" href="#-3"></a></h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="-4"><a class="header-anchor" href="#-4"></a></h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="-5"><a class="header-anchor" href="#-5"></a></h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="-6"><a class="header-anchor" href="#-6"></a></h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="-7"><a class="header-anchor" href="#-7"></a></h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="-8"><a class="header-anchor" href="#-8"></a></h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="-9"><a class="header-anchor" href="#-9"></a></h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="mysql-知识复习"><a class="header-anchor" href="#mysql-知识复习"></a>mysql 知识复习</h2>
<h3 id="数据类型"><a class="header-anchor" href="#数据类型"></a>数据类型</h3>
<table>
<thead>
<tr>
<th>类型</th>
<th>长度</th>
<th>格式</th>
<th>其他</th>
</tr>
</thead>
<tbody>
<tr>
<td>double</td>
<td>8</td>
<td>双精度浮点数</td>
<td></td>
</tr>
<tr>
<td>enum</td>
<td>–</td>
<td></td>
<td>单选,比如性别	enum(‘a’,‘b’,‘c’)</td>
</tr>
<tr>
<td>set</td>
<td>–</td>
<td>多选	set(‘1’,‘2’,‘3’)</td>
<td></td>
</tr>
<tr>
<td>date</td>
<td>3</td>
<td>日期	yyyy-mm-dd</td>
<td></td>
</tr>
<tr>
<td>time</td>
<td>3</td>
<td>时间点或持续时间	hh:mm:ss</td>
<td></td>
</tr>
<tr>
<td>year</td>
<td>1</td>
<td>年份值	yyyy</td>
<td></td>
</tr>
<tr>
<td>char</td>
<td>0~255</td>
<td>定长字符串</td>
<td></td>
</tr>
<tr>
<td>varchar</td>
<td>0~255</td>
<td>变长字符串</td>
<td></td>
</tr>
<tr>
<td>text</td>
<td>0~65535</td>
<td>长文本数据</td>
<td></td>
</tr>
</tbody>
</table>
<p>注:</p>
<ol>
<li>
<p>整数除了 int 外，还有 tinyint、smallint、mediumint、bigint。</p>
</li>
<li>
<p>char 和 varchar 的区别: char 的长度是固定的，而 varchar 的长度是可以变化的，比如，存储字符串 “abc&quot;，对于 char(10)，表示存储的字符将占 10 个字节(包括 7 个空字符)，而同样的 varchar(12) 则只占用4个字节的长度，增加一个额外字节来存储字符串本身的长度，12 只是最大值，当你存储的字符小于 12 时，按实际长度存储。</p>
</li>
</ol>
<p>enum和set的区别: enum 类型的数据的值，必须是定义时枚举的值的其中之一，即单选，而 set 类型的值则可以多选。</p>
<h2 id="sql-server"><a class="header-anchor" href="#sql-server"></a>sql server</h2>
<h3 id="数据类型-2"><a class="header-anchor" href="#数据类型-2"></a>数据类型</h3>
<h4 id="char-nchar-varchar-nvarchar"><a class="header-anchor" href="#char-nchar-varchar-nvarchar"></a>char/nchar varchar/nvarchar</h4>
<p>如果是带n则表示使用unicode编码 如果该字段中会插入中文则需要带n</p>
<h4 id="decimal-1-2"><a class="header-anchor" href="#decimal-1-2"></a>decimal(1,2)</h4>
<p>小数</p>
<h4 id="bit"><a class="header-anchor" href="#bit"></a>bit</h4>
<p>1位相当于boolean</p>
]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>terminal</title>
    <url>/2018/08/11/cn/terminal/</url>
    <content><![CDATA[<p>主要是iterm2下的bash和zsh的一些常用技巧和插件总结</p>
<span id="more"></span>
<h2 id="iterm2-设置"><a class="header-anchor" href="#iterm2-设置"></a>iterm2 设置</h2>
<p>这里只列举一些重要设置其他的可以 <a href="https://blog.biezhi.me/2018/11/build-a-beautiful-mac-terminal-environment.html">参考这里</a></p>
<ol>
<li>
<p>字体安装<br>
配合主题powerlevel9k 需要安装字体</p>
</li>
<li>
<p>安装主题</p>
</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="3">
<li>修改zsh主题</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">ZSH_THEME</span><span class="token operator">=</span><span class="token string">"powerlevel9k/powerlevel9k"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="4">
<li>安装字体</li>
</ol>
<p><code>https://github.com/ryanoasis/nerd-fonts</code></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew tap homebrew/cask-fonts
brew <span class="token function">install</span> font-hack-nerd-font<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="5">
<li>修改配置.zshrc 中添加</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">POWERLEVEL9K_MODE</span><span class="token operator">=</span><span class="token string">"nerdfont-complete"</span>
<span class="token comment"># Customise the Powerlevel9k prompts</span>
<span class="token assign-left variable">POWERLEVEL9K_LEFT_PROMPT_ELEMENTS</span><span class="token operator">=</span><span class="token punctuation">(</span>ssh <span class="token function">dir</span> vcs newline status<span class="token punctuation">)</span>
<span class="token assign-left variable">POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token assign-left variable">POWERLEVEL9K_PROMPT_ADD_NEWLINE</span><span class="token operator">=</span>true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="6">
<li>使修改生效</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> ~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="命令行tips"><a class="header-anchor" href="#命令行tips"></a>命令行tips</h2>
<p>参看这个<a href="https://www.bilibili.com/video/av4337389/">视频</a></p>
<table>
<thead>
<tr>
<th style="text-align:left">按键</th>
<th style="text-align:left">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ctrl+b</td>
<td style="text-align:left">命令行向前</td>
</tr>
<tr>
<td style="text-align:left">ctrl+f</td>
<td style="text-align:left">向后</td>
</tr>
<tr>
<td style="text-align:left">alt+b</td>
<td style="text-align:left">以单词为单位向前</td>
</tr>
<tr>
<td style="text-align:left">alt+f</td>
<td style="text-align:left">以单词为单位向后</td>
</tr>
<tr>
<td style="text-align:left">ctrl+a</td>
<td style="text-align:left">行首</td>
</tr>
<tr>
<td style="text-align:left">ctrl+e</td>
<td style="text-align:left">行尾</td>
</tr>
<tr>
<td style="text-align:left">ctrl+u</td>
<td style="text-align:left">删除当前命令</td>
</tr>
<tr>
<td style="text-align:left">ctrl+h</td>
<td style="text-align:left">从后向前删除</td>
</tr>
<tr>
<td style="text-align:left">ctrl+d</td>
<td style="text-align:left">从前向后删除</td>
</tr>
<tr>
<td style="text-align:left">alt+d</td>
<td style="text-align:left">删除一个单词</td>
</tr>
<tr>
<td style="text-align:left">ctrl+k</td>
<td style="text-align:left">删除到行尾</td>
</tr>
<tr>
<td style="text-align:left">ctrl+p</td>
<td style="text-align:left">上一条命令</td>
</tr>
<tr>
<td style="text-align:left">ctrl+n</td>
<td style="text-align:left">下一条命令</td>
</tr>
<tr>
<td style="text-align:left">ctrl+r</td>
<td style="text-align:left">搜索历史命令</td>
</tr>
<tr>
<td style="text-align:left">ctrl+l</td>
<td style="text-align:left">清屏</td>
</tr>
</tbody>
</table>
<p><strong>iterm2下opt+b无效解决方法</strong></p>
<pre class="line-numbers language-none"><code class="language-none">iTerm2 &gt; Preferences &gt; Profiles &gt; Keys
keyboard shortcut ⌥+b
action send escape sequence
esc+ b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>iterm2 的常用快捷键</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">新建标签：command + t

关闭标签：command + w

切换标签：command + 数字 <span class="token builtin class-name">command</span> + 左右方向键

切换全屏：command + enter

查找：command + f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1>常用插件</h1>
<ol>
<li><a href="https://github.com/wting/autojump">autojump</a></li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> autojump<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在<code>.zshrc</code>里面 配置plugins=(autojump)<br>
快捷键 <code>j foo</code><br>
注: autojump 只能jump到已经打开过一次后的目录</p>
<ol>
<li>
<p><a href="https://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/">tmux</a></p>
<ol>
<li>修改配置 <code>~/.tmux.conf</code> 之后 使用<code>tmux source-file ~/.tmux.conf</code>使其生效 我设置了一个快捷键  <code>tmrl</code></li>
<li>值得参考的文章 <a href="http://louiszhai.github.io/2017/09/30/tmux/">http://louiszhai.github.io/2017/09/30/tmux/</a></li>
<li>tmux 里使用复制粘贴 配置里面加一行<code>set -g mouse on</code> 在iterm2 <code>Preference-&gt;General-&gt;copy to pasteboard to selection</code> 然后在按住option后选择区域 最后粘贴即可</li>
<li>sessions should be nested with care, unset $TMUX to force 输入 <code>unset TMUX</code></li>
<li>以下是个人备份不是默认快捷键</li>
</ol>
</li>
<li>
<p><a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a></p>
<ol>
<li>安装</li>
</ol>
 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/zsh-users/zsh-autosuggestions <span class="token variable">$&#123;ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom&#125;</span>/plugins/zsh-autosuggestions<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="2">
<li>设置</li>
</ol>
 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span> <span class="token punctuation">[</span>plugins<span class="token punctuation">..</span>.<span class="token punctuation">]</span> zsh-autosuggestions<span class="token punctuation">)</span>
<span class="token comment">#绑定自定义快捷键</span>
bindkey <span class="token string">','</span> autosuggest-accept<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li>
<p><a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting</a></p>
<ol>
<li>安装</li>
</ol>
 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="token variable">$&#123;ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom&#125;</span>/plugins/zsh-syntax-highlighting<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="2">
<li>设置</li>
</ol>
 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span> <span class="token punctuation">[</span>plugins<span class="token punctuation">..</span>.<span class="token punctuation">]</span> zsh-syntax-highlighting<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:left">按键</th>
<th style="text-align:left">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">-</td>
<td style="text-align:left">垂直分</td>
</tr>
<tr>
<td style="text-align:left">\</td>
<td style="text-align:left">水平分</td>
</tr>
<tr>
<td style="text-align:left">x</td>
<td style="text-align:left">关闭当前窗口</td>
</tr>
<tr>
<td style="text-align:left">z</td>
<td style="text-align:left">最大化窗口</td>
</tr>
<tr>
<td style="text-align:left">ctrl+d</td>
<td style="text-align:left">关闭窗口</td>
</tr>
</tbody>
</table>
<p>常用指令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tmux new -s demo <span class="token comment"># 新建一个名称为demo的会话</span>
tmux a -t demo <span class="token comment"># 进入到名称为demo的会话</span>
tmux kill-session -t demo <span class="token comment"># 关闭demo会话</span>
tmux kill-server <span class="token comment"># 关闭服务器，所有的会话都将关闭</span>
tmux <span class="token function">ls</span> <span class="token comment"># 查看所有会话，提倡使用简写形式</span>

Sessions
:new<span class="token operator">&lt;</span>CR<span class="token operator">></span>  new session
s  list sessions
$  name session

Windows
c  create window
w  list windows
n  next window
p  previous window
f  <span class="token function">find</span> window
,  name window
<span class="token operator">&amp;</span>  <span class="token function">kill</span> window<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>一般工作模式 是1个session里面开多个window 然后一个window开nvim 其他的可以跑命令 可以用 prefix+n prefx+p 切换window</p>
</blockquote>
<p>Copy Mode<br>
需要在配置文件里面加入<br>
<code>setw -g mode-keys vi</code>和<code>bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel &quot;pbcopy&quot;</code></p>
<ol>
<li>PREFIX [</li>
<li>空格开始选择</li>
<li>y复制并退出/回车直接退出</li>
</ol>
<p>去掉小圆点</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tmux a -d <span class="token comment">#命令</span>

`: a -d <span class="token comment">#快捷键</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>在 Preferences &gt; Appearance 里有个「 show tab bar even when there is only one tab 」的 toggle</p>
<h1>参考</h1>
<ol>
<li>
<p><a href="http://louiszhai.github.io/2017/09/30/tmux/#%E5%AF%BC%E8%AF%BB">http://louiszhai.github.io/2017/09/30/tmux/#导读</a></p>
</li>
<li>
<p><a href="https://gist.github.com/MohamedAlaa/2961058">https://gist.github.com/MohamedAlaa/2961058</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>terminal</category>
      </categories>
      <tags>
        <tag>zsh</tag>
      </tags>
  </entry>
  <entry>
    <title>typescript</title>
    <url>/2020/05/10/cn/typescript/</url>
    <content><![CDATA[<p>TypeScript 笔记</p>
<span id="more"></span>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>TypeScript,前端</tag>
      </tags>
  </entry>
  <entry>
    <title>use-vim-as-a-edittool</title>
    <url>/2018/09/17/cn/use-vim-as-a-edittool/</url>
    <content><![CDATA[<p>使用大量插件和快捷键绑定使得终端下的vim达到生产需求</p>
<span id="more"></span>
<h2 id="平台"><a class="header-anchor" href="#平台"></a>平台</h2>
<p>mac iterm2</p>
<h2 id="配置-2"><a class="header-anchor" href="#配置-2"></a>配置</h2>
<ol>
<li>
<p>vim 配置<br>
本次使用的是<a href="https://neovim.io/">neovim</a><br>
关于neovim 可以参考我的另一篇博客<a href="#">Post not found: vim-notes</a><br>
配置好后可以在terminal里使用原生的vim</p>
</li>
<li>
<p>iterm2 配置<br>
参考 <a href="#">Post not found: terminal</a></p>
</li>
<li>
<p>备份配置</p>
</li>
</ol>
<p>所有的home目录下的.开头的文件被称为dotfiles 你可以在github上上传自己的dotfiles 备份自己的工作区域<br>
我所用的工具是 <a href="https://github.com/andsens/homeshick">homeshick</a></p>
]]></content>
      <categories>
        <category>vim</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>vim-notes</title>
    <url>/2017/08/13/cn/vim-notes/</url>
    <content><![CDATA[<p>vim安装及配置</p>
<span id="more"></span>
<h2 id="从零开始"><a class="header-anchor" href="#从零开始"></a>从零开始</h2>
<p>如果想要从零开始学习vim的话推荐看看这个<a href="https://www.imooc.com/learn/1129">视频</a></p>
<h2 id="安装"><a class="header-anchor" href="#安装"></a>安装</h2>
<p>这里使用<a href="https://github.com/neovim/neovim">neovim</a></p>
<ol>
<li>install</li>
</ol>
  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> neovim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="2">
<li>upgrade</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew update
brew upgrade neovim<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="3">
<li>use</li>
</ol>
  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="配置-3"><a class="header-anchor" href="#配置-3"></a>配置</h2>
<ol>
<li>neovim 配置文件路径是 <code>~/.config/nvim/init.vim</code>(没有的话自己新建)这个的内容和vim的.vimrc内容是一样的</li>
<li>换个主题 这里我用的是<a href="https://github.com/mhinz/vim-janah">janah</a>这种主题很多自己找喜欢的就行
<ol>
<li>先把对应的主题下载下来然后把主题的.vim文件放在<code>~/.config/nvim/colors</code>下(或者<code>~/.vim/colors</code>下)</li>
<li>在init.vim 里面加入</li>
</ol>
   <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token builtin">syntax</span> <span class="token keyword">on</span>
<span class="token builtin">autocmd</span> ColorScheme janah <span class="token builtin">highlight</span> Normal ctermbg<span class="token operator">=</span><span class="token number">235</span>
<span class="token keyword">colorscheme</span> janah<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
如果用zsh的同学需要注意你的zsh主题最好要和neovim主题一样不然显示可能会有点问题</li>
<li>可以在github上看一些高手的init.vim设置</li>
</ol>
<p><a href="https://github.com/TimothyYe/mydotfiles/blob/master/neovim/.config/nvim/init.vim">https://github.com/TimothyYe/mydotfiles/blob/master/neovim/.config/nvim/init.vim</a></p>
<h2 id="插件"><a class="header-anchor" href="#插件"></a>插件</h2>
<p>以下所讲的都是针对原生vim或者neovim的</p>
<ol>
<li>安装<br>
先装 <a href="https://github.com/junegunn/vim-plug">vim-plug</a><br>
装好后在<code>~/.config/nvim/init.vim</code> 里面写需要的插件下面是neovim的demo具体的查看官方文档 这里如果begin里面不写地址的话默认的是<code>~/.config/nvim/</code>这个路径</li>
</ol>
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token keyword">call</span> plug#<span class="token function">begin</span><span class="token punctuation">(</span><span class="token string">'~/.local/share/nvim/plugged'</span><span class="token punctuation">)</span>
<span class="token comment">" My Bundles:</span>
Plug <span class="token string">'kien/ctrlp.vim'</span>
<span class="token keyword">call</span> plug#<span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>vim-plug 常用命令<br>
以下命令在vim中使用 例如 <code>:PlugUpdate</code></li>
</ol>
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim">PlugUpdate #下载更新插件
PlugClean #清除不用的目录
PlugUpgrade #更新<span class="token keyword">vim</span><span class="token operator">-</span>plug自身<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="推荐的插件"><a class="header-anchor" href="#推荐的插件"></a>推荐的插件</h3>
<p>好的vim插件可以上 <a href="https://vimawesome.com/">awesome vim</a></p>
<ol>
<li><a href="https://github.com/junegunn/vim-plug">vim-plug</a> Vim的插件管理器，支持并发安装和更新</li>
<li>EasyMotion 在当前文件中快速移动光标到指定查找位置的插件，十分方便和高效</li>
</ol>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>&lt;leader&gt;&lt;leader&gt; w</td>
<td>Start of word forwards</td>
</tr>
<tr>
<td>&lt;leader&gt;&lt;leader&gt; b</td>
<td>Start of word backwards</td>
</tr>
<tr>
<td>&lt;leader&gt;&lt;leader&gt; j</td>
<td>Start of line forwards</td>
</tr>
<tr>
<td>&lt;leader&gt;&lt;leader&gt; k</td>
<td>Start of line backwards</td>
</tr>
<tr>
<td>/</td>
<td>search by words next n preview N</td>
</tr>
</tbody>
</table>
<p>最后一个需要配置 在 <code>.vimrc</code>里加入</p>
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim">map  <span class="token operator">/</span> <span class="token operator">&lt;</span>Plug<span class="token operator">></span><span class="token punctuation">(</span>easymotion<span class="token operator">-</span><span class="token keyword">sn</span><span class="token punctuation">)</span>
omap <span class="token operator">/</span> <span class="token operator">&lt;</span>Plug<span class="token operator">></span><span class="token punctuation">(</span>easymotion<span class="token operator">-</span><span class="token keyword">tn</span><span class="token punctuation">)</span>

<span class="token comment">" These `n` &amp; `N` mappings are options. You do not have to map `n` &amp; `N` to EasyMotion.</span>
<span class="token comment">" Without these mappings, `n` &amp; `N` works fine. (These mappings just provide</span>
<span class="token comment">" different highlight method and have some other features )</span>
map  <span class="token keyword">n</span> <span class="token operator">&lt;</span>Plug<span class="token operator">></span><span class="token punctuation">(</span>easymotion<span class="token operator">-</span><span class="token keyword">next</span><span class="token punctuation">)</span>
map  <span class="token keyword">N</span> <span class="token operator">&lt;</span>Plug<span class="token operator">></span><span class="token punctuation">(</span>easymotion<span class="token operator">-</span><span class="token keyword">prev</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>
<p><a href="https://github.com/mhinz/vim-startify">Vim-Startify</a> Vim启动首屏自定义插件，让你的Vim启动后显示别具一格的首屏样式<br>
注: 有些主题会使 vim-startify显示不正常</p>
</li>
<li>
<p><a href="https://github.com/scrooloose/nerdtree">NERDTree</a> Vim中的文件管理器，方便编辑文件，创建目录，删除和修改文件等等……<br>
快捷键需要设置</p>
</li>
</ol>
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim">map <span class="token operator">&lt;</span>F2<span class="token operator">></span> <span class="token punctuation">:</span>NERDTreeToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span>
nmap <span class="token operator">&lt;</span>leader<span class="token operator">></span><span class="token keyword">f</span> <span class="token punctuation">:</span>NERDTreeFind<span class="token operator">&lt;</span>CR<span class="token operator">></span>
nmap <span class="token operator">&lt;</span>leader<span class="token operator">></span>g <span class="token punctuation">:</span>NERDTreeToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>F2</td>
<td>shownerdtree</td>
</tr>
<tr>
<td>;g</td>
<td>show nerdtree</td>
</tr>
<tr>
<td>;f</td>
<td>find file in the sidebar</td>
</tr>
</tbody>
</table>
<ol start="5">
<li><a href="https://github.com/kien/ctrlp.vim">CtrlP</a> 不可缺少的快速跳转插件，它可以快速的帮助我们找到项目中的文件。在vim normal模式下，按下ctrl+p，然后输入你要寻找的文件就行了。</li>
</ol>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>&lt;c-d&gt;</td>
<td>以文件名搜索</td>
</tr>
<tr>
<td>&lt;c-j&gt; &lt;c-k&gt;</td>
<td>在查询中搜索</td>
</tr>
<tr>
<td>&lt;c-z&gt; &lt;c-o&gt;</td>
<td>Use &lt;c-z&gt; to mark/unmark multiple files and &lt;c-o&gt; to open them.</td>
</tr>
</tbody>
</table>
<ol start="6">
<li><a href="https://github.com/scrooloose/nerdcommenter">NERDTreeCommenter</a> 方便的用来注释代码的插件</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token operator">&lt;</span>leader<span class="token operator">></span>ci <span class="token operator">|</span>NERDComInvertComment<span class="token operator">|</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="7">
<li>[Ack] 全文搜索插件，可以在当前打开的项目中进行源码的全文搜索，并可以在搜索结果中方便的切换和打开源码文件，十分方便。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">:Ack xxx * ,在项目里搜索xxx单词.
:ack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="8">
<li><a href="https://github.com/majutsushi/tagbar">TagBar</a> 查看当前代码文件中的变量和函数列表的插件，可以切换和跳转到代码中对应的变量和函数的位置k</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token string">"tagbar
"</span> toggle TagBar with F8
nnoremap <span class="token operator">&lt;</span>silent<span class="token operator">></span> <span class="token operator">&lt;</span>F<span class="token operator"><span class="token file-descriptor important">8</span>></span> :TagbarToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span>
" <span class="token builtin class-name">set</span> focus to TagBar when opening it
<span class="token builtin class-name">let</span> g:tagbar_autofocus <span class="token operator">=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="9">
<li>AutoPairs 自动补全括号的插件，包括小括号，中括号，以及花括号，可以提升编码效率</li>
<li>Surround 快速给词加环绕符号,例如单引号/双引号/括号/成对标签等的插件</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ds  - delete a surrounding
cs  - change a surrounding
ys  - <span class="token function">add</span> a surrounding<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="11">
<li>Vim-Airline Vim状态栏插件，包括显示行号，列号，文件类型，文件名，以及Git状态</li>
<li>deoplete 自动补全插件，写代码必备，有了这个插件，就有了IDE的感觉</li>
<li>Vim-Indent-Guides 显示代码对齐的引导条</li>
<li>Accelerated-Smooth-Scroll 顾名思义，让Ctrl+F,Ctrl+B的滚屏来得更顺滑一些……</li>
<li>vim-autoformat</li>
<li>ale 代码静态检查</li>
</ol>
<h3 id="管理dotfiles"><a class="header-anchor" href="#管理dotfiles"></a>管理dotfiles</h3>
<p>使用<a href="https://github.com/andsens/homeshick">homeshick</a><br>
常用命令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">homeshick generate dotfiles <span class="token comment">#创建</span>
homeshick <span class="token builtin class-name">cd</span> dotfiles
homeshick track dotfiles .bashrc <span class="token comment">#添加</span>
homeshick clone git@github.com:lossss/dotfiles.git <span class="token comment">#新机拷贝</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="vim-中常用的快捷键"><a class="header-anchor" href="#vim-中常用的快捷键"></a>vim 中常用的快捷键</h2>
<h3 id="insert-mode"><a class="header-anchor" href="#insert-mode"></a>insert mode</h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>ctrl+w</td>
<td>删除当前单词</td>
</tr>
<tr>
<td>ctrl+u</td>
<td>删除当前行</td>
</tr>
</tbody>
</table>
<h3 id="移动"><a class="header-anchor" href="#移动"></a>移动</h3>
<p>超常用的hjkl就不必多说了</p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>（数字 0）移动光标至本行开头</td>
</tr>
<tr>
<td>^</td>
<td>移动光标至本行第一个非空字符处</td>
</tr>
<tr>
<td>$</td>
<td>移动到行尾</td>
</tr>
<tr>
<td>gg</td>
<td>最上面一行</td>
</tr>
<tr>
<td>G</td>
<td>最下面一行</td>
</tr>
<tr>
<td>gi</td>
<td>移动到最后一次编辑的地方</td>
</tr>
<tr>
<td>NG</td>
<td>跳到第N行(绝对行数)</td>
</tr>
<tr>
<td>zz</td>
<td>将当前行移动到显示屏中间</td>
</tr>
<tr>
<td>:15</td>
<td>跳转到15行</td>
</tr>
<tr>
<td>w</td>
<td>向前移动一个词 （上一个字母和数字组成的词之后）</td>
</tr>
<tr>
<td>W</td>
<td>向前移动一个词 (以空格为单位)</td>
</tr>
<tr>
<td>e</td>
<td>跳到这个单词的末尾</td>
</tr>
<tr>
<td>b</td>
<td>向后移动一个词 （下一个字母和数字组成的词之前）</td>
</tr>
<tr>
<td>f</td>
<td>搜索例如fw就会移动到这一行中出现的第一个w 使用;查找下一个,查找上一个</td>
</tr>
<tr>
<td>t</td>
<td>搜索例如fw就会移动到这一行中出现的第一个w前一个字母 使用;查找下一个,查找上一个</td>
</tr>
<tr>
<td>%</td>
<td>跳到对应的(, (, [ 处</td>
</tr>
<tr>
<td>*</td>
<td>跳到当前光标的下一个(上一个) 相同单词的地方</td>
</tr>
<tr>
<td>ctrl+f</td>
<td>full page forward</td>
</tr>
<tr>
<td>ctrl+b</td>
<td>full page back</td>
</tr>
<tr>
<td>ctrl+o</td>
<td>回到上一个跳跃点 :jumps可以查看跳跃记录</td>
</tr>
<tr>
<td>ctrl+u</td>
<td>(up)half page forward</td>
</tr>
<tr>
<td>ctrl+d</td>
<td>(down)half page back</td>
</tr>
<tr>
<td>ctrl+v</td>
<td>visual block mode</td>
</tr>
<tr>
<td>shift + ]</td>
<td>移动到下一个空行</td>
</tr>
<tr>
<td>shift + [</td>
<td>移动到上一个空行</td>
</tr>
<tr>
<td>vii</td>
<td>全选</td>
</tr>
</tbody>
</table>
<p>w w e e 的区别<br>
<img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/vim-notes/1.jpg?x-oss-process=style/blogimage" alt=""></p>
<h3 id="查询"><a class="header-anchor" href="#查询"></a>查询</h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>//</td>
<td>查询  n移动到下一个匹配 N移动到上一个匹配</td>
</tr>
<tr>
<td>#</td>
<td>移动到下一个匹配单词</td>
</tr>
<tr>
<td>*</td>
<td>移动到上一个匹配单词</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="删除"><a class="header-anchor" href="#删除"></a>删除</h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>d</td>
<td>删除 dta 删除至a字符</td>
</tr>
<tr>
<td>x</td>
<td>删除当前的字符</td>
</tr>
<tr>
<td>X</td>
<td>向前删除</td>
</tr>
</tbody>
</table>
<h3 id="修改"><a class="header-anchor" href="#修改"></a>修改</h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>i</td>
<td>词前插入</td>
</tr>
<tr>
<td>shift+i</td>
<td>行首插入</td>
</tr>
<tr>
<td>a</td>
<td>词后插入</td>
</tr>
<tr>
<td>shift+a</td>
<td>行尾插入</td>
</tr>
<tr>
<td>.</td>
<td>.可以重复执行上个指令 比如fw之后.就会继续移动到下一个w的位置</td>
</tr>
<tr>
<td>s</td>
<td>替换 按下之后会删除当前的字符并进入insert模式</td>
</tr>
<tr>
<td>S</td>
<td>删除一整行</td>
</tr>
<tr>
<td>3dd</td>
<td>剪切3行</td>
</tr>
<tr>
<td>p</td>
<td>黏贴</td>
</tr>
<tr>
<td>ctrl+shift+v / 鼠标中键</td>
<td>从clipboard粘贴</td>
</tr>
<tr>
<td>u</td>
<td>撤销相当于ctrl+z</td>
</tr>
<tr>
<td>ctrl+r</td>
<td>相当于ctrl+y</td>
</tr>
<tr>
<td>ZZ</td>
<td>保存并退出</td>
</tr>
<tr>
<td>dt&quot;</td>
<td>删除直到&quot;</td>
</tr>
<tr>
<td>J</td>
<td>删除换行符，合并两行</td>
</tr>
<tr>
<td>&lt; &gt;</td>
<td>调整代码缩进</td>
</tr>
<tr>
<td>=</td>
<td>自动格式化代码缩进</td>
</tr>
<tr>
<td>zc</td>
<td>折叠代码</td>
</tr>
<tr>
<td>zo</td>
<td>展开带代码</td>
</tr>
<tr>
<td>shift+v</td>
<td>选择当前行</td>
</tr>
<tr>
<td>shift+d</td>
<td>删除至行尾</td>
</tr>
<tr>
<td>g,</td>
<td>回到上一次insert的位置</td>
</tr>
<tr>
<td>gd</td>
<td>跳转到函数定义</td>
</tr>
</tbody>
</table>
<h2 id="text-object"><a class="header-anchor" href="#text-object"></a>text-object</h2>
<h3 id="a和i的区别"><a class="header-anchor" href="#a和i的区别"></a>a和i的区别</h3>
<p>an object：包含尾部间隔空格<br>
inner object：只是内容本身，不包含尾部单词间隔空格</p>
<h3 id="word-sentence-paragraph"><a class="header-anchor" href="#word-sentence-paragraph"></a>word / sentence / paragraph</h3>
<table>
<thead>
<tr>
<th>textobject</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>w</td>
<td>word</td>
</tr>
<tr>
<td>s</td>
<td>sentence</td>
</tr>
<tr>
<td>p</td>
<td>paragraph</td>
</tr>
</tbody>
</table>
<h3 id="block-Block"><a class="header-anchor" href="#block-Block"></a>block / Block</h3>
<table>
<thead>
<tr>
<th>textobject</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>]/[</td>
<td>[] block</td>
</tr>
<tr>
<td>)/(、b</td>
<td>block</td>
</tr>
<tr>
<td>&gt;/&lt;、&gt;/&lt;</td>
<td>&lt;&gt; block</td>
</tr>
<tr>
<td>}/{、B</td>
<td>Block</td>
</tr>
<tr>
<td>t</td>
<td>tag block：&lt;&gt; &lt;/&gt;</td>
</tr>
</tbody>
</table>
<h3 id="visual-mode"><a class="header-anchor" href="#visual-mode"></a>visual mode</h3>
<p>在可视选择模式下，可以以 v 做前缀，a 或 i 限定边界，后续指定操作对象，来实现针对文本对象的选择：</p>
<table>
<thead>
<tr>
<th>指令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>viw</td>
<td>选中单词</td>
</tr>
<tr>
<td>vis</td>
<td>选中句子</td>
</tr>
<tr>
<td>vit</td>
<td>选中html标签内的内容</td>
</tr>
<tr>
<td>vip</td>
<td>选中段落</td>
</tr>
<tr>
<td>vi(</td>
<td>选中圆括号中的内容</td>
</tr>
<tr>
<td>vi[</td>
<td>选中中括号之间的内容</td>
</tr>
<tr>
<td>v2i{</td>
<td>选中两层大括号之间的所有内容 数字限定选择的嵌套层数</td>
</tr>
<tr>
<td>v3aw</td>
<td>选择三个单词（包含中间的2个间隔空格）</td>
</tr>
<tr>
<td>v3iw</td>
<td>选择三个单词（2个单词+间隔空格）</td>
</tr>
<tr>
<td>另外，可将 v 选择操作指令替换为 c、x、d、y 等操作符(operator)，来针对文本对象操作</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="小tips"><a class="header-anchor" href="#小tips"></a>小tips</h2>
<ol>
<li>多行同时编辑:</li>
</ol>
<p>按 ctrl+v ，进入 Visual Block mode</p>
<p>然后按hjkl 选择对应的行 当然你也可以用 5k等等选择</p>
<p>然后 shift+i(单词之前) 或者 shift+a(单词之后)</p>
<p>如果要在多行行首插入的话要先shift+v 然后 选择多行 再按shift+i 行尾就是shift+a</p>
<ol start="2">
<li>
<p>全选复制<br>
esc后 ggyG</p>
</li>
<li>
<p>全选删除<br>
esc后 dG</p>
</li>
<li>
<p>选中当前的单词<br>
viw    //inner word<br>
diw //删除当前单词</p>
</li>
<li>
<p>在vim中<br>
esc = ctrl+[ 当然 ctrl+v 也可以用来切换模式</p>
</li>
<li>
<p>shift+/ 搜索<br>
*向前搜索 #向后搜索</p>
</li>
<li>
<p>修改 gem ‘hello’ '‘中的内容<br>
ci’<br>
关于这个可以参考 <a href="http://www.jianshu.com/p/a361ce8c97bc">一起来说vim语</a></p>
</li>
<li>
<p>注释代码 行注释gc2j 块注释gC2j</p>
</li>
<li>
<p>清空一行 而不删除这行<br>
normal mode 0D // 0 至行首 shift+d 清空</p>
</li>
<li>
<p>插入新的一行而不进入insert mode<br>
yy一个空行再p</p>
</li>
<li>
<p>多文件操作</p>
</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">window 常用操作
:sp 横分屏
:vs 竖分屏
:sp filepath 分屏打开文件

buffer 常用操作
:buf <span class="token number">2</span> 第二个 buffer
:bn 下一个 buffer <span class="token comment"># 自定义 &lt;c-n></span>
:bp 上一个 buffer <span class="token comment"># 自定义 &lt;c-N></span>
:bd 关闭当前 buffer

<span class="token number">11</span>. 大小写转换
guu 整行小写
gUU 整行大写
如果只想对个别单词大写小写则先选中即可
如果光标在当前单词 guiw gUiw


<span class="token number">12</span>. 选中单词
如果想要选中类似 <span class="token variable"><span class="token variable">$(</span>"#selector"<span class="token variable">)</span></span>.show<span class="token punctuation">(</span><span class="token punctuation">)</span> 时  按键操作 F space <span class="token function">v</span> E<span class="token punctuation">(</span>f space<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1>常用command</h1>
<p>使用: 可以使用不同的指令进行复杂的操作</p>
<table>
<thead>
<tr>
<th>command</th>
<th>meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td>%s/word1/word2/gc</td>
<td>全文查找word1 替换为 word2 每次替换会要求check</td>
</tr>
</tbody>
</table>
<h3 id="vimrc"><a class="header-anchor" href="#vimrc"></a>.vimrc</h3>
<p>在~/.vimrc(没有可以自己新建)加入以下内容<br>
这个就是vim的配置文件</p>
<pre class="line-numbers language-none"><code class="language-none">set number
set relativenumber
set hlsearch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>这样启动vim时就会加载这些设置 当然一些大佬也会共享自己的配置到github上<br>
这里列出的几个只是冰山一角</p>
<h3 id="Search-and-Replace"><a class="header-anchor" href="#Search-and-Replace"></a>Search and Replace</h3>
<p>hlsearch</p>
<blockquote>
<p>You can search by using the / command in Normal mode. By typing /This, you will see all of the This words</p>
</blockquote>
<blockquote>
<p>By typing n, your cursor goes to the next occurrence of the search pattern. By using N, you can go back to a previous occurrence.</p>
</blockquote>
<blockquote>
<p>The format is /&lt;search pattern&gt;/&lt;replace pattern&gt;/gi where the &lt;search pattern&gt; and the &lt;replace pattern&gt; are standard regular expressions.The i after the g makes the search case insensitive. An I would make the search case sensitive. The g makes the substitution global in the line. Without the g, it performs the substitution once per line</p>
</blockquote>
<h2 id="vscode-vim-plugin"><a class="header-anchor" href="#vscode-vim-plugin"></a><a href="https://github.com/VSCodeVim/Vim">vscode vim plugin</a></h2>
<h3 id="vim-surround"><a class="header-anchor" href="#vim-surround"></a><a href="https://github.com/VSCodeVim/Vim#vim-surround">vim-surround</a></h3>
<table>
<thead>
<tr>
<th>Surround Command</th>
<th>Description</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>d s &lt;existing char&gt;</td>
<td>Delete existing surround</td>
<td></td>
</tr>
<tr>
<td>c s &lt;existing char&gt; &lt;desired char&gt;</td>
<td>Change surround</td>
<td>existing to desired</td>
</tr>
<tr>
<td>y s &lt;motion&gt; &lt;desired char&gt;</td>
<td>Surround something with</td>
<td>something using motion (as in “you surround”)</td>
</tr>
<tr>
<td>S &lt;desired char&gt;</td>
<td>Surround when in visual modes</td>
<td>(surrounds full selection)</td>
</tr>
</tbody>
</table>
<p>hint: ysaw)</p>
<h2 id="参考-2"><a class="header-anchor" href="#参考-2"></a>参考</h2>
<p><a href="https://linux.cn/article-8144-1.html">https://linux.cn/article-8144-1.html</a></p>
<p><a href="http://www.oschina.net/translate/learn-vim-progressively">http://www.oschina.net/translate/learn-vim-progressively</a></p>
<p><a href="https://computers.tutsplus.com/tutorials/vim-for-beginners--cms-21118">https://computers.tutsplus.com/tutorials/vim-for-beginners--cms-21118</a></p>
<p><a href="http://col.dog/2015/12/13/vim-tutorials-006-text_objects/">http://col.dog/2015/12/13/vim-tutorials-006-text_objects/</a></p>
<p><a href="https://xiaozhou.net/learn-the-command-line-vim-2018-08-08.html">https://xiaozhou.net/learn-the-command-line-vim-2018-08-08.html</a></p>
]]></content>
      <categories>
        <category>vim</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode-setting</title>
    <url>/2017/09/28/cn/vscode-setting/</url>
    <content><![CDATA[<p>vscode 设置</p>
<span id="more"></span>
<h2 id="我的设置"><a class="header-anchor" href="#我的设置"></a>我的设置</h2>
<p>我的vscode 设置已经上传到<a href="https://gist.github.com/lossss/a1c4db18a2482d9bfb10c43e3a6831b7">Github Gist</a></p>
<p>windows下配置 Gist ID : a1c4db18a2482d9bfb10c43e3a6831b7</p>
<p>插件是 <s>setting sync</s> 改用 Syncing</p>
<h2 id="常用设置-2"><a class="header-anchor" href="#常用设置-2"></a>常用设置</h2>
<ol>
<li>隐藏菜单栏</li>
</ol>
<p>ctrl+shift+p</p>
<p>view：toggle menu bar</p>
<p>想使用的时候按alt</p>
<ol start="2">
<li>修改字体</li>
</ol>
<p>在文件 首选项 设置 用户设置中加入<code>&quot;editor.fontSize&quot;:17</code>即可</p>
<ol start="3">
<li>terminal 设置</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span> 安装字体
<span class="token variable">$git</span> clone https://github.com/powerline/fonts.git --depth<span class="token operator">=</span><span class="token number">1</span>
<span class="token variable">$cd</span> fonts
$./install.sh
<span class="token variable">$cd</span> <span class="token punctuation">..</span>
<span class="token variable">$rm</span> -rf fonts

<span class="token number">2</span> 安装主题
<span class="token variable">$git</span> clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
<span class="token variable">$echo</span> <span class="token string">'ZSH_THEME="powerlevel9k/powerlevel9k"'</span> <span class="token operator">>></span> ~/.zshrc
<span class="token variable">$source</span> ~/.zshrc

<span class="token number">3</span> vscode 中添加设置
 <span class="token string">"terminal.integrated.fontFamily"</span><span class="token builtin class-name">:</span> <span class="token string">"Source Code Pro for Powerline"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="常用快捷键-3"><a class="header-anchor" href="#常用快捷键-3"></a>常用快捷键</h2>
<table>
<thead>
<tr>
<th style="text-align:left">快捷键(mac)</th>
<th style="text-align:left">快捷键(win)</th>
<th style="text-align:left">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">ctrl+shift+n</td>
<td style="text-align:left">因为不能同时打开多个项目所以只能新建窗口来打开新的项目</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">shift+alt+f</td>
<td style="text-align:left">格式化文件</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">ctrl+1 ctrl+2 ctrl+3</td>
<td style="text-align:left">左中右3个编辑器的快捷键</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">ctrl+tab</td>
<td style="text-align:left">历史打开文件之间切换</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">ctrl+k然后按left或right</td>
<td style="text-align:left">编辑器换位置</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">alt+上/下</td>
<td style="text-align:left">上移或下移代码</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">ctrl+0 或者ctrl+shift+e</td>
<td style="text-align:left">focus on sidebar</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">ctrl+\</td>
<td style="text-align:left">复制分屏</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">alt+b</td>
<td style="text-align:left">navigateBack</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">alt+f</td>
<td style="text-align:left">navigateforward</td>
</tr>
<tr>
<td style="text-align:left">cmd+w</td>
<td style="text-align:left"></td>
<td style="text-align:left">直接关闭当前窗口</td>
</tr>
<tr>
<td style="text-align:left">ctrl+123</td>
<td style="text-align:left"></td>
<td style="text-align:left">在已经打开的tab里面切换</td>
</tr>
<tr>
<td style="text-align:left">ctrl+`</td>
<td style="text-align:left"></td>
<td style="text-align:left">terminal</td>
</tr>
<tr>
<td style="text-align:left">ctrl+shift+i</td>
<td style="text-align:left"></td>
<td style="text-align:left">reveal active file in side bar</td>
</tr>
<tr>
<td style="text-align:left">shift+cmd+m</td>
<td style="text-align:left"></td>
<td style="text-align:left">problems</td>
</tr>
<tr>
<td style="text-align:left">shift+cmd+u</td>
<td style="text-align:left"></td>
<td style="text-align:left">output</td>
</tr>
<tr>
<td style="text-align:left">shift+cmd+y</td>
<td style="text-align:left"></td>
<td style="text-align:left">debug console</td>
</tr>
</tbody>
</table>
<h3 id="小tips-2"><a class="header-anchor" href="#小tips-2"></a>小tips</h3>
<p>1.如果在编辑markdown时需要格式化表格当使用vim时可以如下操作</p>
<ul>
<li>ctrl+[ 切换到normal mode</li>
<li>shift-v</li>
<li>5k //k就是移动的下 反之向上选择就是j</li>
<li>=</li>
</ul>
<h2 id="修改的快捷键"><a class="header-anchor" href="#修改的快捷键"></a>修改的快捷键</h2>
<p>对应修改keybindings.json 因为修改频繁 最新的修改可以参考本文置顶的github gist 在文中搜索 keybindings 就可以看到了</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token comment">// 将键绑定放入此文件中以覆盖默认值</span>
<span class="token punctuation">[</span><span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+c"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"editor.action.clipboardCopyAction"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+x"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"editor.action.clipboardCutAction"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+v"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"editor.action.clipboardPasteAction"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+f"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"-workbench.action.terminal.focusFindWidget"</span><span class="token punctuation">,</span>
        <span class="token property">"when"</span><span class="token operator">:</span> <span class="token string">"terminalFocus"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+n"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"workbench.action.files.newFile"</span><span class="token punctuation">,</span>
        <span class="token property">"when"</span><span class="token operator">:</span> <span class="token string">"sidebarFocus"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+b"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"workbench.action.toggleSidebarVisibility"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+b"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"-workbench.action.toggleSidebarVisibility"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+shift+enter"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"editor.action.triggerSuggest"</span><span class="token punctuation">,</span>
        <span class="token property">"when"</span><span class="token operator">:</span> <span class="token string">"editorHasCompletionItemProvider &amp;&amp; editorTextFocus &amp;&amp; !editorReadonly"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+space"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"-editor.action.triggerSuggest"</span><span class="token punctuation">,</span>
        <span class="token property">"when"</span><span class="token operator">:</span> <span class="token string">"editorHasCompletionItemProvider &amp;&amp; editorTextFocus &amp;&amp; !editorReadonly"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+shift+enter"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"toggleSuggestionDetails"</span><span class="token punctuation">,</span>
        <span class="token property">"when"</span><span class="token operator">:</span> <span class="token string">"editorTextFocus &amp;&amp; suggestWidgetVisible"</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+space"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"-toggleSuggestionDetails"</span><span class="token punctuation">,</span>
        <span class="token property">"when"</span><span class="token operator">:</span> <span class="token string">"editorTextFocus &amp;&amp; suggestWidgetVisible"</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="常用插件-3"><a class="header-anchor" href="#常用插件-3"></a>常用插件</h2>
<blockquote>
<p>按下ctrl+shift+p 后输入 ext回车 或者点击左侧第五个图标 就可以搜索自己需要的插件了</p>
</blockquote>
<h3 id="通用"><a class="header-anchor" href="#通用"></a>通用</h3>
<ol>
<li>vscode-icons</li>
</ol>
<blockquote>
<p>给sidebar换上一套图标 ctrl+shift+p -&gt;icon theme</p>
</blockquote>
<ol start="2">
<li>
<p>output colorizer</p>
</li>
<li>
<p>guides</p>
</li>
</ol>
<blockquote>
<p>代码对齐辅助线</p>
</blockquote>
<ol start="4">
<li><s>没有找到 文件显示git status状态的插件(类似atom的tree-view-git-status)</s> 最新版本已经自带此功能</li>
</ol>
<p>5.<s>Settings Sync</s>(这个有点问题已经换用Syncing)</p>
<blockquote>
<p>同步设置<br>
这个插件如果同步报错的话</p>
</blockquote>
<pre class="line-numbers language-none"><code class="language-none">ctrl+shift+p
sync:reset extension settings
在user settings 里面修改下gistid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="6">
<li>Search Docsets</li>
</ol>
<blockquote>
<p>查看文档  需要提前安装 velocity 或者 zeal 快捷键 shift+F1 mac中对应的插件为dash</p>
</blockquote>
<ol start="7">
<li>text table<br>
方便生成 markdown table 默认快捷键ctrl+q</li>
</ol>
<h3 id="vim-2"><a class="header-anchor" href="#vim-2"></a>vim</h3>
<ol>
<li>
<p>vim<br>
这个插件可以实现vim中的大多数操作介绍几个比较有用的(安装vim插件后自带的,无需其他插件)</p>
<ol>
<li><a href="https://github.com/VSCodeVim/Vim#%EF%B8%8F-multi-cursor-mode">multi-cursor-mode</a><br>
先用v选择需要修改的单词在用 cmd+d 向下选中同样单词 然后修改</li>
<li><a href="https://github.com/VSCodeVim/Vim#vim-surround">vim-surround</a></li>
</ol>
</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:left">Surround Command</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">S &lt;desired char&gt;</td>
<td style="text-align:left">Surround when in visual modes</td>
</tr>
<tr>
<td style="text-align:left">c s &lt;existing char&gt; &lt;desired char&gt;</td>
<td style="text-align:left">Change surround</td>
</tr>
<tr>
<td style="text-align:left">d s &lt;existing char&gt;</td>
<td style="text-align:left">Delete existing surround</td>
</tr>
<tr>
<td style="text-align:left">y s &lt;motion&gt; &lt;desired char&gt;</td>
<td style="text-align:left">Surround something with</td>
</tr>
</tbody>
</table>
<p>hint: ysaw)<br>
1.<a href="https://github.com/VSCodeVim/Vim#vim-easymotion">vim-easymotion</a><br>
这是一个快速移动插件,默认的&lt;leader&gt;是 \</p>
<table>
<thead>
<tr>
<th style="text-align:left">command</th>
<th style="text-align:left">description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">&lt;leader&gt;&lt;leader&gt; s</td>
<td style="text-align:left">Search character</td>
</tr>
<tr>
<td style="text-align:left">&lt;leader&gt;&lt;leader&gt; 2s</td>
<td style="text-align:left">Search 2 characters</td>
</tr>
<tr>
<td style="text-align:left">&lt;leader&gt;&lt;leader&gt; w</td>
<td style="text-align:left">Start of word forwards</td>
</tr>
<tr>
<td style="text-align:left">&lt;leader&gt;&lt;leader&gt; b</td>
<td style="text-align:left">Start of word backwards</td>
</tr>
<tr>
<td style="text-align:left">&lt;leader&gt;&lt;leader&gt; j</td>
<td style="text-align:left">Start of line forwards</td>
</tr>
<tr>
<td style="text-align:left">&lt;leader&gt;&lt;leader&gt; k</td>
<td style="text-align:left">Start of line backwards</td>
</tr>
</tbody>
</table>
<ol start="2">
<li>
<p>relative-line-numbers</p>
</li>
<li>
<p>在mac下vim的长按问题</p>
</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#修改</span>
defaults <span class="token function">write</span> com.microsoft.VSCode ApplePressAndHoldEnabled -bool <span class="token boolean">false</span>
<span class="token comment">#复原</span>
defaults <span class="token function">write</span> com.microsoft.VSCode ApplePressAndHoldEnabled -bool <span class="token boolean">true</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="tips"><a class="header-anchor" href="#tips"></a>tips</h4>
<p>zc 折叠代码后jk移动时会自动打开 要避免的话 setting 里面加<code>&quot;vim.foldfix&quot;: true</code></p>
<h3 id="python"><a class="header-anchor" href="#python"></a>python</h3>
<ol>
<li>python<br>
如果需要提示时输出括号 在setting中加上<code>&quot;python.autoComplete.addBrackets&quot;: true</code></li>
<li>magicpython</li>
</ol>
<blockquote>
<p>python文件着色器</p>
</blockquote>
<h3 id="markdown-2"><a class="header-anchor" href="#markdown-2"></a>markdown</h3>
<ol>
<li>
<p>vscode markdown preview enhanced<br>
安装好后 ctrl+shift+m 预览 或者也可以用vs自带的ctrl+k v 打开预览</p>
</li>
<li>
<p>table formatter<br>
格式化table 其实我更喜欢 atom里面的 markdown table formatter</p>
</li>
</ol>
<p>安装后 ctrl+shift+p -&gt; table:format all</p>
<ol start="3">
<li>snippet for json</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:left">Snippets</th>
<th style="text-align:left">Content</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">obj</td>
<td style="text-align:left">Create a JSON object</td>
</tr>
<tr>
<td style="text-align:left">objc</td>
<td style="text-align:left">Create a JSON object ending with comma</td>
</tr>
<tr>
<td style="text-align:left">arr</td>
<td style="text-align:left">Create a JSON array</td>
</tr>
<tr>
<td style="text-align:left">arrc</td>
<td style="text-align:left">Create a JSON array ending with comma</td>
</tr>
<tr>
<td style="text-align:left">pair</td>
<td style="text-align:left">Create JSON key/value pair</td>
</tr>
<tr>
<td style="text-align:left">pairc</td>
<td style="text-align:left">Create JSON key/value pair ending with comma</td>
</tr>
<tr>
<td style="text-align:left">paircln</td>
<td style="text-align:left">Create JSON key/value pair ending with comma and jumping to next line. Not recommended for complex “value”</td>
</tr>
</tbody>
</table>
<h2 id="debug"><a class="header-anchor" href="#debug"></a>debug</h2>
<h3 id="python-2"><a class="header-anchor" href="#python-2"></a>python</h3>
<p>安装python插件之后 按f5 就可以进行调试<br>
当需要使用input 或者需要输出图片的时候 在左上选择integrated terminal/console 在运行即可</p>
<h2 id="ubuntu-下更新vscode"><a class="header-anchor" href="#ubuntu-下更新vscode"></a>ubuntu 下更新vscode</h2>
<ol>
<li>到下载页面下载最新版本.deb</li>
<li>执行以下命令</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dpkg -r code
<span class="token function">sudo</span> dpkg -i code_downloaded_package.deb <span class="token comment">#用下载的最新的deb的名字</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="tips-2"><a class="header-anchor" href="#tips-2"></a>tips</h2>
<h3 id="Launching-from-the-Command-Line"><a class="header-anchor" href="#Launching-from-the-Command-Line"></a><a href="https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line">Launching from the Command Line</a></h3>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>wake-on-lan</title>
    <url>/2019/07/14/cn/wake-on-lan/</url>
    <content><![CDATA[<p>尝试使用网络唤醒 PC</p>
<span id="more"></span>
<h2 id="必要设置"><a class="header-anchor" href="#必要设置"></a>必要设置</h2>
<ol>
<li>
<p>进入 bios 中设置，让主板支持通过（由 PCI-E/PCI 设备唤醒）【不同主板选项的名称不一样，要注意相关字眼】的方式唤醒电源。</p>
</li>
<li>
<p>进入系统中，找到设备管理器，电源管理中，找到网卡设备，双击，电源管理，最好是不允许计算机关闭此设备已节约电源【当前成功的情况就是这样的设置】，如果勾选了允许关闭的话，务必要勾选【允许此设备唤醒计算机，为了更安全的话再勾选【只允许幻数据包唤醒此计算机】】<br>
在另一个【高级】的选项卡中， 1. 【关机 网络唤醒】 ON 2. 【环保节能】 OFF 3. 【魔术封包唤醒】ON<br>
注意:不同网卡的设置不尽相同，注意相关字眼的选项。</p>
</li>
<li>
<p>在路由器中设置计算机的静态 IP 地址</p>
</li>
<li>
<p>通过其他机器的 WAKE ON LAN 软件可以进行唤醒操作。<br>
注意：通过 android 手机下载 WAKE ON LAN 也是可以的。配置好目标主机的 IP，端口号是随便写的，因为此唤醒包是唤醒计算机的，并不是只限定某一个端口。</p>
</li>
<li>
<p>要通过外网唤醒计算机的话，必须配置路由器的 DDNS，并且在路由器中配置虚拟服务器，将外网的一个端口绑定到目标主机的一个端口上面。<br>
比如，配置虚拟服务器，将外网中来自 8100 的端口转发给目标主机（192.168.0.100）的 3389 端口，这样配置也是可以的。</p>
</li>
</ol>
<h2 id="参考-3"><a class="header-anchor" href="#参考-3"></a>参考</h2>
<p><a href="https://blog.csdn.net/xinluke/article/details/51169393">https://blog.csdn.net/xinluke/article/details/51169393</a></p>
]]></content>
  </entry>
  <entry>
    <title>win-notes</title>
    <url>/2017/08/16/cn/win-notes/</url>
    <content><![CDATA[<h2 id="常用的win10小工具"><a class="header-anchor" href="#常用的win10小工具"></a>常用的win10小工具</h2>
<span id="more"></span>
<h3 id="CCleaner"><a class="header-anchor" href="#CCleaner"></a><a href="https://www.piriform.com/ccleaner">CCleaner</a></h3>
<p>一个系统清理工具可以用来清理C盘的垃圾文件<br>
不过别用它删chrome缓存不然很多网站又要重新登录了<br>
<img src="https://s1.pir.fm/cc/page2/cc5-screen1.png" alt=""></p>
<h3 id="Dism"><a class="header-anchor" href="#Dism"></a><a href="https://www.chuyu.me/zh-Hans/">Dism++</a></h3>
<p>同样是一个清理软件</p>
<h3 id="LICEcap"><a class="header-anchor" href="#LICEcap"></a><a href="https://www.cockos.com/licecap/">LICEcap</a></h3>
<p>一个可以录制动态图片的软件<br>
<img src="https://www.cockos.com/licecap/licecap_rules.gif" alt=""></p>
<h3 id="Listary"><a class="header-anchor" href="#Listary"></a><a href="http://www.listary.com/">Listary</a></h3>
<p>一个快速启动软件和搜索文件的工具 类似mac中的spotlight</p>
<h3 id="everything"><a class="header-anchor" href="#everything"></a><a href="http://www.voidtools.com/">everything</a></h3>
<p><img src="http://www.voidtools.com/support/everything/Everything.Search.Window.png" alt=""><br>
可以方便的搜索到系统中的任意文件</p>
<h3 id="卡硬工具箱"><a class="header-anchor" href="#卡硬工具箱"></a><a href="http://www.kbtool.cn/down.php">卡硬工具箱</a></h3>
<p>系统工具集合总有一个适合你</p>
<h3 id="ditto"><a class="header-anchor" href="#ditto"></a><a href="http://ditto-cp.sourceforge.net/">ditto</a></h3>
<p>粘贴板软件</p>
<h2 id="关闭系统休眠cmd指令"><a class="header-anchor" href="#关闭系统休眠cmd指令"></a>关闭系统休眠cmd指令</h2>
<p>关闭系统休眠听说会减少磁盘占用</p>
<pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">powercfg -h off<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="ConEmu"><a class="header-anchor" href="#ConEmu"></a><a href="http://conemu.github.io/">ConEmu</a></h2>
<p>可高度定制化的 cmd或者powershell的外壳 一张图说明效果<br>
<img src="http://ou7k0sem6.bkt.clouddn.com/ConEmu.png" alt=""></p>
<h2 id="Sao-Utils"><a class="header-anchor" href="#Sao-Utils"></a><a href="http://www.gpbeta.com/post/develop/sao-utils/">Sao Utils</a></h2>
<p>灵感来自于刀剑神域 非常酷的插件 如果你没有用过一定要试试<br>
!()[<a href="http://www.gpbeta.com/wp-content/gallery/sao-utils/sao-utils-beta1-vr-3-2.jpg">http://www.gpbeta.com/wp-content/gallery/sao-utils/sao-utils-beta1-vr-3-2.jpg</a>]</p>
<h2 id="coding-相关"><a class="header-anchor" href="#coding-相关"></a>coding 相关</h2>
<h3 id="MPic"><a class="header-anchor" href="#MPic"></a><a href="http://mpic.lzhaofu.cn/">MPic</a></h3>
<p>用于向七牛上传图片的图床工具</p>
<h3 id="Velocity"><a class="header-anchor" href="#Velocity"></a><s><a href="https://velocity.silverlakesoftware.com/">Velocity</a></s></h3>
<p>API文档管理 没付费可有时会有提示但无大碍  当然也可以使用 <a href="http://devdocs.io/">http://devdocs.io/</a></p>
<h3 id="zeal-2"><a class="header-anchor" href="#zeal-2"></a><a href="https://zealdocs.org/">zeal</a></h3>
<blockquote>
<p>velocity 的替代品 当然也可以使用 <a href="http://devdocs.io/">http://devdocs.io/</a></p>
</blockquote>
<h3 id="autohotkey"><a class="header-anchor" href="#autohotkey"></a><a href="https://autohotkey.com/">autohotkey</a></h3>
<p>安装好后 新建一个.ahk文件 然后就可以输入autohotkey的代码然后右键run就可以了</p>
<p>把脚本放在<code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>里面就可以开机自动启动了</p>
<p>当然还有很多功能就不一一赘述了</p>
<h2 id="win10-快捷键"><a class="header-anchor" href="#win10-快捷键"></a>win10 快捷键</h2>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>操作</th>
</tr>
</thead>
<tbody>
<tr>
<td>alt+prtscr</td>
<td>截取程序</td>
</tr>
<tr>
<td>Win+Shift+S</td>
<td>框选快捷键</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>win10</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>wsl</title>
    <url>/2019/03/30/cn/wsl/</url>
    <content><![CDATA[<p>Windows Subsystem for Linux<br>
通过win10 自带的 linux 提供的terminal 可以很方便地弥补cmd的不足</p>
<span id="more"></span>
<h1>安装wsl</h1>
<p><a href="https://www.bilibili.com/read/cv1429071/">参考这个</a><br>
需要注意的是 需要win10专业版才可以 别的版本好像不行</p>
<h1>.hyper.js 和 .zshrc备份</h1>
<p><a href="https://gist.github.com/lossss/26d22641cf2464ec548527ec560101ad">备份</a></p>
<h1>问题集</h1>
<p>如果使用卡巴斯基的话需要关闭443端口的检测 不然wsl系统可能连不上网</p>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/wsl/1.png?x-oss-process=style/blogimage" alt="详细设置看这里"></p>
<h1>参考资料</h1>
<p><a href="https://spencerwoo.com/dowww/2-Toolchain/2-1-TerminalEnv.html#hyper-%E7%BB%88%E7%AB%AF">Dev on Windows with WSL</a></p>
]]></content>
      <tags>
        <tag>wsl,terminal</tag>
      </tags>
  </entry>
  <entry>
    <title>留学二三事</title>
    <url>/2018/03/06/cn/%E7%95%99%E5%AD%A6%E4%BA%8C%E4%B8%89%E4%BA%8B/</url>
    <content><![CDATA[<p>日本留学的一些准备</p>
<span id="more"></span>
<h2 id="语言学校"><a class="header-anchor" href="#语言学校"></a>语言学校</h2>
<p>一般自己找中介 联系学校老师 如果有名额就可以申请 有钱就可以读 所以要趁早不然好的学校就没有名额了最好提早一年</p>
<ol>
<li>
<p>在留申请<br>
这个需要的资料每年会有些不同 具体听中介的</p>
<ol>
<li>存款20万证明(也许会需要银行的流水 如果需要则需要提前准备)</li>
<li>语言学时证明</li>
<li>毕业证书</li>
<li>亲子关系公证<br>
…</li>
</ol>
</li>
<li>
<p>签证办理<br>
一般去代理机构办理 <a href="http://www.cn.emb-japan.go.jp/aboutus.htm">查看这里</a> 价格比去领事馆贵一些 每个地区需要的资料有所不同 具体的需要自己打电话咨询</p>
</li>
<li>
<p>一些小tips(想到什么写什么可能比较乱哈)</p>
<ol>
<li>
<p>照片需要 3cm<em>4cm 8张(在留申请) 白底 4.5</em>4.5 1张(签证用) 2寸 20张 (去日本时候用)</p>
</li>
<li>
<p>机票早点买 一般在留通过学校通知过了就可以买了 不然等签证过了再买就太高了<br>
比如收到通知是4.4 4.5 那么就买4.4的就好了如果要便宜的话就买从香港转机的 其他的转机要看清需不需要过境签需要的话就不要买了 因为多办一个签证很麻烦而且还费钱 还有第一次去别买廉航(行李另外算费用很贵的)</p>
</li>
<li>
<p>如果不住宿的话 要找中介 在在留下来前 一两个星期找好 在留一通过就可以直接订房了 晚了就没什么便宜的了</p>
</li>
<li>
<p>国内日语学学好</p>
</li>
<li>
<p>好学校托福是必须的</p>
</li>
<li>
<p>早点换些日元 住宿舍的话50万 住外面的话30万 好像最多只能带100万入境</p>
</li>
<li>
<p>办一张南京银行的储蓄卡(或者境外取现不要手续费的)这卡境外取现一年最多等值10万人民币一天最多1万(国家外汇管理局规定的)所以存10万就好了 有条件的可以办张全币种的visa卡会方便很多</p>
</li>
<li>
<p>交学费的时候可以用中国银行的app 不然要提交资料就比较麻烦 用app是抽查的 抽不到就不需要提供资料了 当然手续费就不是最便宜的了 我当时转了429000日币扣了180人民币手续费</p>
</li>
<li>
<p>如果是本科生 一定一定要打成绩单 最好打5份</p>
</li>
<li>
<p>第一次去的话行李箱可以买24或26寸的 买太大的没有用因为每个箱子限制23kg 双层防爆拉链 pc材质 或者布的也行 铝框的有点重 注意看机票上的托运公斤数超重是要吃大亏的</p>
</li>
</ol>
</li>
<li>
<p>行李</p>
<ol>
<li>随身行李
<ol>
<li>50万日元</li>
<li>中国银行银联卡(跨境取款无需手续费但是atm机器还是回收手续费的 atm机一次限额10万日元 我上次取10万收了75日元手续费 每个机器不一样看清楚再取)</li>
<li>招商银行visa信用卡</li>
<li>身份证&amp;护照&amp;资格外活动许可申请书</li>
<li>笔记本电脑</li>
<li>零钱包(日本用钱会有很多硬币这个必须备一个)</li>
<li>流量卡5天(很有用!!!)</li>
<li>照片</li>
<li>卡西欧电子词典 这个日本买的都是日本学生用的 建议国内买 买哪代都可以 可以的话收个二手 主要上课用 平时手机查也可以 不强求看个人需要</li>
<li>插头转换器</li>
<li>拖线板</li>
<li>印章 13.5mm 紫檀 繁体 全名(很有用!!!) 这个最好办两个一样的因为印章丢了很麻烦<br>
印章有全名和单独的姓的 可以两个都做一个也可以只做单独姓的一个因为全名的一般都是银行卡办理或者其他比较正式的场合用的,而且有些银行用单独的姓也是可以的</li>
</ol>
</li>
<li>行李箱行李
<ol>
<li>行李箱(26寸 拉链 PC)</li>
<li>衣服
<ol>
<li>换洗衣服</li>
<li>西服领带皮鞋</li>
</ol>
</li>
<li>书<br>
1.日语书<br>
1. N1N2试卷<br>
1. N1语法书<br>
1.专业书</li>
<li>泡面(一开始到日本可能吃的不习惯可以备点)</li>
</ol>
</li>
</ol>
</li>
<li>
<p>下飞机后需要做的一些事</p>
<ol>
<li>下飞机过海关
<ol>
<li>下飞机之后 留学生需要拿两个票 在飞机上空姐都会给的可以问她们要 没有的话在海关前面一排放有各种语言的 选中文的就可以</li>
<li>第二张卡是 你拿了行李需要出飞机场的时候需要的</li>
</ol>
</li>
</ol>
</li>
<li>
<p>开学需要做的事</p>
<ol>
<li>在留地址登录和国民健康保险<br>
这个学校会有人带去办理 带上在留卡 护照 黑笔 和 印章</li>
<li>办理邮局银行卡
<ol>
<li>带上在留卡 印章 到附近的邮局办理</li>
</ol>
</li>
<li>办手机(需要地址登录和银行卡都办好了才行 当然也可以先不绑定银行卡先办手机 但是最终还是要去绑的)
<ol>
<li>如果需要买手机<br>
softbank 这个就比较贵了一个月都是7000多的 具体看当时的活动</li>
<li>不买手机<br>
办y-mobile 的卡 需要信用卡(自己或者家人有都可以 需要visa jcb mastercard里面一个) 一个月 1980 2G 10分钟通话免费 第二年可以转 softbank</li>
<li>总结<br>
y-mobile也可以办手机 就是买不了高端机只能买便宜的安卓机器 你可以不要他的手机 买了y-mobile的卡自己再买个手机 这样是最划算的</li>
</ol>
</li>
<li>拿学生证<br>
需要带 在留卡 入学证明 护照 到学校找老师拿</li>
<li>联系私塾<br>
私塾有很多自己多问多试听 多了解情况 毕竟也不便宜 我了解到的私塾有 名校 启程 唯新 沐刃 有间学堂 价格60万日元起步(大学院学部基本都是这个价)</li>
</ol>
</li>
<li>
<p>关于语言学校</p>
<ol>
<li>我在早稻田文化馆 其他的学校情况我不太清楚</li>
<li>关于教学
<ol>
<li>老师都是全日语教学 不管你是什么班</li>
<li>老师有日本人也有中国人 我们班一周4个老师2个日本人 2个中国人 不过都挺好的</li>
<li>进度不算快一天大家日语一节课(我上的是初级班)</li>
<li>所以还是来之前学好点吧 英语和日语至少有一个要能和教授交流的才行</li>
</ol>
</li>
</ol>
</li>
<li>
<p>关于生活</p>
<ol>
<li>
<p>能做饭</p>
<ol>
<li>找附近的业务超市或者大超市 办个积分卡 然后买必要的食材 一下罗列一些便宜的菜当然也和季节有关看着买吧</li>
<li>蔬菜<br>
1.豆芽菜<br>
1.キャベツ<br>
1.黄瓜</li>
<li>水果<br>
1.香蕉</li>
<li>肉(超市的肉制品在保质期前一天晚上8 9点就会打折)<br>
1.速冻鸡肉<br>
1.米国猪肉 88/100g</li>
</ol>
</li>
<li>
<p>不做饭<br>
1.吉野家<br>
1.半价便当(这个要看当地的超市 一般都是大超市晚上到8点或者更晚)</p>
</li>
</ol>
</li>
</ol>
<h1>写在最后</h1>
<p>我在2019年4月结束了在语言学校的学习.因为种种原因没有进入大学院学习,而是直接进入了日本的职场,因为之前从事的也是软件开发的工作所以想从事同样的工作,不管怎样希望来到日本的朋友珍惜时间,好好学习,加油!</p>
]]></content>
      <categories>
        <category>日本留学</category>
      </categories>
      <tags>
        <tag>日本留学</tag>
      </tags>
  </entry>
  <entry>
    <title>javase-thread</title>
    <url>/2020/10/18/cn/javase-thread/</url>
    <content><![CDATA[<p>java 多线程基础</p>
<span id="more"></span>
<h2 id="基础知识-2"><a class="header-anchor" href="#基础知识-2"></a>基础知识</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**
 * 实现多线程的时候：
 *      1、需要继承Thread类
 *      2、必须要重写run方法，指的是核心执行的逻辑
 *      3、线程在启动的时候，不要直接调用run方法，而是要通过start()来进行调用
 *      4、每次运行相同的代码，出来的结果可能不一样，原因在于多线程谁先抢占资源无法进行人为控制
 *  第二种实现方式：使用了代理设计模式
 *      1、实现Runnable接口
 *      2、重写run方法
 *      3、创建Thread对象，将刚刚创建好的runnable的子类实现作为thread的构造参数
 *      4、通过thread.start()进行启动
 *    两种实现方式哪种用的比较多
 *    推荐使用第二种方式，
 *      1、java是单继承，将继承关系留给最需要的类
 *      2、使用runnable接口之后不需要给共享变量添加static关键字，每次创建一个对象，作为共享对象即可
 *   线程的生命周期：
 *      1、新生状态：
 *          当创建好当前线程对象之后，没有启动之前（调用start方法之前）
 *          ThreadDemo thread = new ThreadDemo()
 *          RunnableDemo run = new RunnableDemo()
 *      2、就绪状态：准备开始执行，并没有执行，表示调用start方法之后
 *          当对应的线程创建完成，且调用start方法之后，所有的线程会添加到一个就绪队列中，所有的线程同时去抢占cpu的资源
 *      3、运行状态：当当前进程获取到cpu资源之后，就绪队列中的所有线程会去抢占cpu的资源，谁先抢占到谁先执行，在执行的过程中就叫做运行状态
 *          抢占到cpu资源，执行代码逻辑开始
 *      4、死亡状态：当运行中的线程正常执行完所有的代码逻辑或者因为异常情况导致程序结束叫做死亡状态
 *              进入的方式：
 *                  1、正常运行完成且结束
 *                  2、人为中断执行，比如使用stop方法
 *                  3、程序抛出未捕获的异常
 *      5、阻塞状态：在程序运行过程中，发生某些异常情况，导致当前线程无法再顺利执行下去，此时会进入阻塞状态，进入阻塞状态的原因消除之后，
 *                  所有的阻塞队列会再次进入到就绪状态中，随机抢占cpu的资源，等待执行
 *          进入的方式：
 *              sleep方法
 *              等待io资源
 *              join方法（代码中执行的逻辑）
 *
 *      注意：
 *          在多线程的时候，可以实现唤醒和等待的过程，但是唤醒和等待操作的对应不是thread类
 *             而是我们设置的共享对象或者共享变量
 *      多线程并发访问的时候回出现数据安全问题：
 *          解决方式：
 *              1、同步代码块
 *                  synchronized(共享资源、共享对象，需要是object的子类)&#123;具体执行的代码块&#125;
 *              2、同步方法
 *                  将核心的代码逻辑定义成一个方法，使用synchronized关键字进行修饰，此时不需要指定共享对象
 *
 */</span>
    <span class="token comment">//获取当前线程对象</span>
        <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取当前线程的名称</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>thread<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取线程的id</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>thread<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取线程的优先级,在一般系统中范围是0-10的值，如果没有经过设置的话，就是默认值5，有些系统是0-100</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>thread<span class="token punctuation">.</span><span class="token function">getPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置线程池的优先级</span>
        <span class="token comment">/*
        * 优先级越高一定越先执行吗？
        *       不一定，只是优先执行的概率比较大而已
        * */</span>
        thread<span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>thread<span class="token punctuation">.</span><span class="token function">getPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//判断线程是否在活动</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>thread<span class="token punctuation">.</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Waits for this thread to die.该线程强制执行</span>
        thread<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//睡一秒</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//暂停一次</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="JUC-TODO"><a class="header-anchor" href="#JUC-TODO"></a>JUC(TODO)</h2>
<h3 id="阻塞队列"><a class="header-anchor" href="#阻塞队列"></a>阻塞队列</h3>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/javase-thread-01.png" alt="常用的阻塞队列"><br>
BlockingQueue（阻塞队列）<br>
阻塞队列提供了可阻塞的入队和出对操作，如果队列满了，入队操作将阻塞直到有空间可用，如果队列空了，出队操作将阻塞直到有元素可用；</p>
<h4 id="BlockingQueue"><a class="header-anchor" href="#BlockingQueue"></a>BlockingQueue</h4>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//生产者</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">private</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> blockingQueue<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> element <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Producer</span><span class="token punctuation">(</span><span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> blockingQueue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>blockingQueue <span class="token operator">=</span> blockingQueue<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>


    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>element <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"将要放进去的元素是："</span> <span class="token operator">+</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
                blockingQueue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>element<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"生产者在等待空闲空间的时候被打断了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"生产者已经终止了生产过程！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//消费者</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Consumer</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">private</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> blockingQueue<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Consumer</span><span class="token punctuation">(</span><span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> blockingQueue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>blockingQueue <span class="token operator">=</span> blockingQueue<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>


    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"取出来的元素是："</span> <span class="token operator">+</span> blockingQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"消费者在等待新产品的时候被打断了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//测试类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainClass</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> blockingQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Producer</span> producerPut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Producer</span><span class="token punctuation">(</span>blockingQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Consumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token punctuation">(</span>blockingQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>producerPut<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>consumer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="PriorityBlockingQueue"><a class="header-anchor" href="#PriorityBlockingQueue"></a>PriorityBlockingQueue</h4>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Task</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">Task</span> task<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">></span> task<span class="token punctuation">.</span>id <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">&lt;</span> task<span class="token punctuation">.</span>id <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsePriorityBlockingQueue</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">PriorityBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">></span></span> q <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Task</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t1<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"id为3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Task</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t2<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t2<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"id为4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Task</span> t3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t3<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t3<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"id为1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        q<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3</span>
        q<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//4</span>
        q<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>t3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//1</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"容器："</span> <span class="token operator">+</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"容器："</span> <span class="token operator">+</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Synchronousqueue"><a class="header-anchor" href="#Synchronousqueue"></a>Synchronousqueue</h4>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SynchronousQueueExample</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SynchronousQueueProducer</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>

        <span class="token keyword">protected</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> blockingQueue<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">SynchronousQueueProducer</span><span class="token punctuation">(</span><span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> queue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>blockingQueue <span class="token operator">=</span> queue<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
                    <span class="token class-name">String</span> data <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Put: "</span> <span class="token operator">+</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    blockingQueue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>

    <span class="token punctuation">&#125;</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SynchronousQueueConsumer</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>

        <span class="token keyword">protected</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> blockingQueue<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">SynchronousQueueConsumer</span><span class="token punctuation">(</span><span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> queue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>blockingQueue <span class="token operator">=</span> queue<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
                    <span class="token class-name">String</span> data <span class="token operator">=</span> blockingQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token operator">+</span> <span class="token string">" take(): "</span> <span class="token operator">+</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>

    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">final</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> synchronousQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">SynchronousQueueProducer</span> queueProducer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SynchronousQueueProducer</span><span class="token punctuation">(</span>
                synchronousQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>queueProducer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">SynchronousQueueConsumer</span> queueConsumer1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SynchronousQueueConsumer</span><span class="token punctuation">(</span>
                synchronousQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>queueConsumer1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">SynchronousQueueConsumer</span> queueConsumer2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SynchronousQueueConsumer</span><span class="token punctuation">(</span>
                synchronousQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>queueConsumer2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="DelayQueue"><a class="header-anchor" href="#DelayQueue"></a>DelayQueue</h4>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DelayQueueTest</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DelayTask</span><span class="token punctuation">></span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DelayTask</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">1000L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DelayTask</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token number">2000L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DelayTask</span><span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token number">3000L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"queue put done"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">DelayTask</span> task <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">class</span> <span class="token class-name">DelayTask</span> <span class="token keyword">implements</span> <span class="token class-name">Delayed</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Long</span> delayTime<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">TimeUnit</span> delayTimeUnit<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Long</span> executeTime<span class="token punctuation">;</span><span class="token comment">//ms</span>

    <span class="token class-name">DelayTask</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">long</span> delayTime<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> delayTimeUnit<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>delayTime <span class="token operator">=</span> delayTime<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>delayTimeUnit <span class="token operator">=</span> delayTimeUnit<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>executeTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> delayTimeUnit<span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span>delayTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">Delayed</span> o<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span> <span class="token operator">></span> o<span class="token punctuation">.</span><span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span> <span class="token operator">&lt;</span> o<span class="token punctuation">.</span><span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> unit<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>executeTime <span class="token operator">-</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="线程池"><a class="header-anchor" href="#线程池"></a>线程池</h3>
<h4 id="生命周期"><a class="header-anchor" href="#生命周期"></a>生命周期</h4>
<ol>
<li>RUNNING 能接受提交的任务,并且能处理阻塞队列中的任务</li>
<li>SHUTDOWN 关闭状态,不再接受新的提交任务,但可以处理阻塞队列中以保存的任务</li>
<li>STOP 不能接受新的任务,也不处理队列中的任务,会中断正在处理任务的线程</li>
<li>TIDYING 如果所有的任务都终止了,wokerCount(有效线程数)为 0,线程池进入该状态后会调用 terminated()方法进入 TERMINATED 状态</li>
<li>TERMINATED 在 terminated()方法执行完后进入该状态,默认 terminated()方法中什么也没有做</li>
</ol>
<h4 id="常用方法"><a class="header-anchor" href="#常用方法"></a>常用方法</h4>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/javase-thread-02.png" alt="线程池"></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//需要一个用来多线程执行的类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Task</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" running"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//CacheThreadPoolDemo</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CacheThreadPoolDemo</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//FixedThreadPool</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FixedThreadPoolDemo</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//ScheduledThreadPool</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScheduledThreadPoolDemo</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">ScheduledExecutorService</span> scheduledExecutorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        scheduledExecutorService<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"延迟三秒执行"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        scheduledExecutorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//ScheduledThreadPool 周期执行</span>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">ScheduledExecutorService</span> scheduledExecutorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        scheduledExecutorService<span class="token punctuation">.</span><span class="token function">scheduleAtFixedRate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1------延迟一秒执行，每三秒执行一次"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//SingleThreadPool</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingleThreadPoolDemo</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>ForkJoinPool 利用的是分而治之这个思想</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//ForkJoinPool 随机数相加</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForJoinPollTask</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> total <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//初始化100个数组元素</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> temp <span class="token operator">=</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//对数组元素赋值，并将数组元素的值添加到sum总和中</span>
            total <span class="token operator">+=</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"初始化数组总和："</span><span class="token operator">+</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SumTask</span> task <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        创建一个通用池，这个是jdk1.8提供的功能</span>
        <span class="token class-name">ForkJoinPool</span> pool <span class="token operator">=</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span><span class="token function">commonPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> future <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//提交分解的SumTask 任务</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"多线程执行结果："</span><span class="token operator">+</span>future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//关闭线程池</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">class</span> <span class="token class-name">SumTask</span> <span class="token keyword">extends</span> <span class="token class-name">RecursiveTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> THRESHOLD <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">//每个小任务 最多只累加20个数</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> arry<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> start<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> end<span class="token punctuation">;</span>



    <span class="token comment">/**
     * Creates a new instance of SumTask.
     * 累加从start到end的arry数组
     * @param arry
     * @param start
     * @param end
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arry<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>arry <span class="token operator">=</span> arry<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> start<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> end<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>



    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Integer</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//当end与start之间的差小于threshold时，开始进行实际的累加</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start <span class="token operator">&lt;</span>THRESHOLD<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span> start<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>end<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"的i值："</span><span class="token operator">+</span>arry<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                sum <span class="token operator">+=</span> arry<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token comment">//当end与start之间的差大于threshold，即要累加的数超过20个时候，将大任务分解成小任务</span>
            <span class="token keyword">int</span> middle <span class="token operator">=</span> <span class="token punctuation">(</span>start<span class="token operator">+</span> end<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token class-name">SumTask</span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span>arry<span class="token punctuation">,</span> start<span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SumTask</span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SumTask</span><span class="token punctuation">(</span>arry<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//并行执行两个 小任务</span>
            left<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            right<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//把两个小任务累加的结果合并起来</span>
            <span class="token keyword">return</span> left<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>right<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

    <span class="token punctuation">&#125;</span>

<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="构造方法的详细说明-TODO"><a class="header-anchor" href="#构造方法的详细说明-TODO"></a>构造方法的详细说明(TODO)</h4>
<h4 id="拒绝策略"><a class="header-anchor" href="#拒绝策略"></a>拒绝策略</h4>
<h5 id="ThreadPoolExecutor-AbortPolicy"><a class="header-anchor" href="#ThreadPoolExecutor-AbortPolicy"></a>ThreadPoolExecutor.AbortPolicy</h5>
<p>丢弃任务并跑出 RejectedExecutionException 异常</p>
<h5 id="ThreadPoolExecutor-DiscardPolicy"><a class="header-anchor" href="#ThreadPoolExecutor-DiscardPolicy"></a>ThreadPoolExecutor.DiscardPolicy</h5>
<p>丢弃任务,但不跑出异常</p>
<h5 id="ThreadPoolExecutor-DiscardOldestPolicy"><a class="header-anchor" href="#ThreadPoolExecutor-DiscardOldestPolicy"></a>ThreadPoolExecutor.DiscardOldestPolicy</h5>
<p>丢弃队列最前面的任务,然后重新尝试执行任务(重复此过程)</p>
<h5 id="ThreadPoolExecutor-CallerRunsPolicy"><a class="header-anchor" href="#ThreadPoolExecutor-CallerRunsPolicy"></a>ThreadPoolExecutor.CallerRunsPolicy</h5>
<p>由调用线程处理该任务</p>
]]></content>
      <categories>
        <category>javase</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java</title>
    <url>/2019/02/25/cn/javase/</url>
    <content><![CDATA[<p>个人 javase 知识点杂谈,全写一起有点长,内容太多的我会单开文章说明</p>
<span id="more"></span>
<h2 id="DOS-知识"><a class="header-anchor" href="#DOS-知识"></a>DOS 知识</h2>
<table>
<thead>
<tr>
<th>操作</th>
<th>操作</th>
</tr>
</thead>
<tbody>
<tr>
<td>cd</td>
<td>打开目录</td>
</tr>
<tr>
<td>dir</td>
<td>ls</td>
</tr>
<tr>
<td>cls</td>
<td>清屏</td>
</tr>
<tr>
<td>tab</td>
<td>自动补齐</td>
</tr>
</tbody>
</table>
<h2 id="数据类型-3"><a class="header-anchor" href="#数据类型-3"></a>数据类型</h2>
<h3 id="整型"><a class="header-anchor" href="#整型"></a>整型</h3>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">015</span><span class="token punctuation">;</span><span class="token comment">//八进制</span>
<span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">0x15</span><span class="token punctuation">;</span><span class="token comment">//16进制</span>
<span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token number">0b1101</span><span class="token punctuation">;</span><span class="token comment">// 二进制</span>
<span class="token keyword">byte</span> e <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span> <span class="token comment">//一个字节存储 -128~127</span>
<span class="token keyword">short</span> <span class="token comment">//两个字节存储 -32768~32767</span>
<span class="token keyword">int</span> <span class="token comment">//四个字节存储</span>
<span class="token keyword">long</span> <span class="token comment">//八个字节存储</span>
<span class="token keyword">long</span> globalPopulation <span class="token operator">=</span> <span class="token number">74000000000L</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="浮点型"><a class="header-anchor" href="#浮点型"></a>浮点型</h3>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token number">3.14F</span><span class="token punctuation">;</span><span class="token comment">//四个字节 精度小数点后7位</span>
<span class="token keyword">double</span> b <span class="token operator">=</span> <span class="token number">6.26</span><span class="token punctuation">;</span><span class="token comment">//八个字节 精度是float两倍</span>

<span class="token comment">//浮点类型默认double</span>
<span class="token comment">// 浮点型比较不精确 如果需要比较需要使用 BigDecimal类</span>
<span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token number">0.1F</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> b <span class="token operator">=</span> <span class="token number">1.0</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// output false</span>
<span class="token class-name">BigDecimal</span> a1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">BigDecimal</span> b1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>b1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Tips-3"><a class="header-anchor" href="#Tips-3"></a>Tips</h3>
<h4 id="基本数据类型转换"><a class="header-anchor" href="#基本数据类型转换"></a>基本数据类型转换</h4>
<ol>
<li></li>
</ol>
<h4 id="原码补码反码"><a class="header-anchor" href="#原码补码反码"></a>原码补码反码</h4>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">原码 <span class="token number">00000001</span> <span class="token operator">=</span><span class="token operator">></span><span class="token number">1</span>
    <span class="token number">10000001</span> <span class="token operator">=</span><span class="token operator">></span><span class="token operator">-</span><span class="token number">1</span>
补码 反码<span class="token operator">+</span><span class="token number">1</span>
反码 负数保留符号位其他位取反
<span class="token number">0000</span> <span class="token number">0110</span> <span class="token operator">=</span><span class="token operator">></span><span class="token number">6</span>
<span class="token number">1111</span> <span class="token number">1001</span> <span class="token operator">=</span><span class="token operator">></span><span class="token operator">-</span><span class="token number">6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="字符型"><a class="header-anchor" href="#字符型"></a>字符型</h3>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">char</span> a <span class="token operator">=</span><span class="token char">'A'</span><span class="token punctuation">;</span> <span class="token comment">//两个字节 运算时可以当做整型处理</span>
<span class="token keyword">char</span> b <span class="token operator">=</span><span class="token char">'\t'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="数组"><a class="header-anchor" href="#数组"></a>数组</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//拷贝方法</span>
<span class="token comment">/**
 * @param      src      the source array.
 * @param      srcPos   starting position in the source array.
 * @param      dest     the destination array.
 * @param      destPos  starting position in the destination data.
 * @param      length   the number of array elements to be copied.
*/</span>
<span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> srcPos<span class="token punctuation">,</span> dest<span class="token punctuation">,</span> destPos<span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="代码块"><a class="header-anchor" href="#代码块"></a>代码块</h2>
<ol>
<li>普通代码块:定义在方法中，使用{}括起来的代码叫做普通代码块</li>
<li>构造代码块：定义在类中的使用{}括起来的代码叫做构造代码块<br>
注意：每次代码运行的时候回将构造代码块中的代码添加到构造方法的前面<br>
构造代码块中的代码会添加到每一个构造方法中，当使用 this(参数)的时候不会添加</li>
<li>静态代码块：使用 static{}括起来的代码叫做静态代码块，在程序载入的时候优先执行<br>
数据库连接等其他提前需要准备好的代码会放在 static 代码块</li>
<li>同步代码块：<br>
在多线程的时候回使用，用来给共享空间进行加锁操作（后面讲）</li>
<li>执行顺序：静态代码块–》构造代码块（创建对象的时候才会用到）–》普通代码块</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CodeBlockDemo</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">int</span> a <span class="token punctuation">;</span>
    <span class="token keyword">int</span> b<span class="token punctuation">;</span>

    <span class="token keyword">static</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"静态代码块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">CodeBlockDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"无参"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">CodeBlockDemo</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">CodeBlockDemo</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//public CodeBlockDemo(int a)</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">=</span> b<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"构造代码块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我应该是什么分类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">CodeBlockDemo</span> codeBlockDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodeBlockDemo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        codeBlockDemo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="接口"><a class="header-anchor" href="#接口"></a>接口</h2>
<p>接口 has A<br>
抽象类 is A</p>
<h3 id="抽象类和接口区别"><a class="header-anchor" href="#抽象类和接口区别"></a>抽象类和接口区别</h3>
<p>1、抽象类中的方法可以有抽象方法，也可以有普通方法，但是接口中只能包含抽象方法<br>
2、抽象类需要使用 abstract 关键字来修饰，而接受使用 interface 关键字来修饰<br>
3、子类使用 extends 关键字来继承抽象类，使用 implements 来实现接口<br>
4、子类继承抽象类的时候必须要实现所有的抽象方法，普通方法可以不重写，而接口中的所有方法必须实现<br>
5、抽象类中可以定义成员变量，而接口中只能定义静态常量<br>
6、抽象类在子类实现的时候是单继承，而接口时多继承<br>
7、抽象类和接口都不能实例化，但是抽象类中可以有构造方法，而接口中不能有构造方法<br>
8、抽象类中可以实现接口，并且不实现接口中方法，而接口只能继承接口，不能实现接口</p>
<h2 id="内部类"><a class="header-anchor" href="#内部类"></a>内部类</h2>
<p>内部类（当作类中的一个普通成员变量，只不过此成员变量是 class 的类型）：<br>
一个 java 文件中可以包含多个 class，但是只能有一个 public class<br>
如果一个类定义在另一个类的内部，此时可以称之为内部类</p>
<ol>
<li>
<p>使用：<br>
创建内部类的时候，跟之前的方法不一样，需要在内部类的前面添加外部类来进行修饰<br>
InnerClassDemo.InnerClass inner = new InnerClassDemo().new InnerClass();</p>
</li>
<li>
<p>特点：<br>
1、内部类可以方便的访问外部类的私有属性<br>
2、外部类不能访问内部类的私有属性,但是如果创建了内部类的对象，此时可以在外部类中访问私有属性<br>
3、内部类中不能定义静态属性<br>
4、当内部类和外部类具有相同的私有属性的时候，在内部类中访问的时候，可以直接访问内部类的属性，<br>
5、如果需要访问外部类的属性，那么需要添加 外部类类名.this.属性。</p>
</li>
<li>
<p>分类：<br>
匿名内部类：当定义了一个类，实现了某个接口的时候，在使用过程中只需要使用一次，没有其他用途<br>
其实考虑到代码编写的简洁，可以考虑不创建具体的类，而采用 new interface(){添加未实现的方法}<br>
就叫做匿名内部类<br>
静态内部类：在内部类中可以定义静态内部类，使用 static 关键字进行修饰，使用规则<br>
外部类.内部类 类的引用名称 = new 外部类.内部类（）；<br>
方法内部类：在外部类的方法中也可以定义类，此时叫做方法内部类（了解即可）<br>
使用的时候需要注意，只能在方法中创建对象，因为此 class 的作用域就是当前方法</p>
</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Outer</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Face</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Face</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Face<span class="token punctuation">.</span>Nose</span> n <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">Nose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        n<span class="token punctuation">.</span><span class="token function">breath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Face<span class="token punctuation">.</span>Ear</span> e <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Face<span class="token punctuation">.</span>Ear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        e<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">class</span> <span class="token class-name">Face</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">int</span> type<span class="token punctuation">;</span>
    <span class="token class-name">String</span> shape <span class="token operator">=</span> <span class="token string">"瓜子脸"</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">String</span> color <span class="token operator">=</span> <span class="token string">"红润"</span><span class="token punctuation">;</span>

    <span class="token keyword">class</span> <span class="token class-name">Nose</span> <span class="token punctuation">&#123;</span>

        <span class="token keyword">void</span> <span class="token function">breath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>shape<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Face</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"呼吸！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Ear</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">void</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我在听！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//匿名内部类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NoNameInnerClassDemo</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"有一万行代码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"有一万行代码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//静态内部类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StaticClass</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InnerClass</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"show"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">InnerClass</span> innerClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StaticClass<span class="token punctuation">.</span>InnerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        InnerClass innerClass = new StaticClass().new InnerClass();</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>


<span class="token comment">//方法内部类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodInnerClass</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"show"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">class</span> <span class="token class-name">InnerClass</span><span class="token punctuation">&#123;</span>
            <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token keyword">new</span> <span class="token class-name">InnerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">MethodInnerClass</span>  methodInnerClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MethodInnerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        methodInnerClass<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token number">1234</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="异常"><a class="header-anchor" href="#异常"></a>异常</h2>
<p>父类 Throwable<br>
子类 Error Exception</p>
<h2 id="包装类"><a class="header-anchor" href="#包装类"></a>包装类</h2>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Integer</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// -128~127有缓存</span>

<span class="token comment">//String</span>
<span class="token comment">//常量池在1.7之后放置在了堆空间里面</span>
<span class="token comment">//比较</span>
str1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span>
string str1 <span class="token operator">=</span><span class="token string">"abc"</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> str2 <span class="token operator">=</span><span class="token string">"abc"</span><span class="token punctuation">;</span>
str2<span class="token operator">=</span>str2<span class="token punctuation">.</span><span class="token function">intern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//如果常量池有对应的对象 则会返回对应地址</span>
str1<span class="token operator">==</span>str2<span class="token comment">//true</span>

<span class="token class-name">String</span> a <span class="token operator">=</span><span class="token string">"a"</span><span class="token operator">+</span><span class="token string">"b"</span><span class="token punctuation">;</span><span class="token comment">//一个对象</span>
<span class="token class-name">String</span> b <span class="token operator">=</span>str1<span class="token operator">+</span>str2<span class="token punctuation">;</span><span class="token comment">//三个对象</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="常用类-2"><a class="header-anchor" href="#常用类-2"></a>常用类</h2>
<h3 id="字符串相关"><a class="header-anchor" href="#字符串相关"></a>字符串相关</h3>
<p>StringBuffer 线程安全 效率低<br>
StringBuilder 线程不安全 效率高</p>
<h3 id="日期处理相关"><a class="header-anchor" href="#日期处理相关"></a>日期处理相关</h3>
<p>Date<br>
DateFormat<br>
SimpleDateFormat</p>
<ol>
<li>parse</li>
<li>format</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DateDemo</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">DateFormat</span> dateFormat <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span>dateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Calendar</span> calendar <span class="token operator">=</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//指定时间</span>
        calendar<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span>YEAR<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Math"><a class="header-anchor" href="#Math"></a>Math</h3>
<h3 id="枚举类"><a class="header-anchor" href="#枚举类"></a>枚举类</h3>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">EventEnum</span> <span class="token punctuation">&#123;</span>
    <span class="token function">LAUNCH</span><span class="token punctuation">(</span><span class="token string">"launch"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">PAGEVIEW</span><span class="token punctuation">(</span><span class="token string">"pageview"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">EVENT</span><span class="token punctuation">(</span><span class="token string">"event"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">EventEnum</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">EventEnum</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ee <span class="token operator">=</span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ee<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ee<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestEnum</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">EventEnum</span> ee <span class="token operator">=</span><span class="token class-name">EventEnum</span><span class="token punctuation">.</span>LAUNCH<span class="token punctuation">;</span>
        ee<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token class-name">EventEnum</span><span class="token punctuation">.</span>PAGEVIEW<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="集合"><a class="header-anchor" href="#集合"></a>集合</h2>
<p><img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/javase-01.png" alt="javase-01"></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*
* java集合框架：
*   Collection：存放的是单一值
*       特点：
*           1、可以存放不同类型的数据，而数组只能存放固定类型的数据
*           2、当使用arraylist子类实现的时候，初始化的长度是10，当长度不够的时候会自动进行扩容操作
*       api方法：
*           增加数据的方法
*           add：要求必须传入的参数是Object对象，因此当写入基本数据类型的时候，包含了自动拆箱和自动装箱的过程
*           addAll:添加另一个集合的元素到此集合中
*
*           删除数据的方法
*           clear:只是清空集合中的元素，但是此集合对象并没有被回收
*           remove:删除指定元素
*           removeAll：删除集合元素
*
*           查询数据的方法
*           contains:判断集合中是否包含指定的元素值
*           containsAll:判断此集合中是否包含另一个集合
*           isEmpty:判断集合是否等于空
*           retainAll:若集合中拥有另一个集合的所有元素，返回true，否则返回false
*           size:返回当前集合的大小
*
*           //集合转数组的操作
*           toArray:将集合转换成数组
* */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="List"><a class="header-anchor" href="#List"></a>List</h3>
<p>ArraryList<br>
优点:方便查询<br>
缺点:增删效率低<br>
LinkedList<br>
优点:增删快<br>
缺点:遍历和随机查找效率低</p>
<p>Vector<br>
1、Vector 也是 List 接口的一个子类实现<br>
2、Vector 跟 ArrayList 一样，底层都是使用数组进行实现的<br>
3、面试经常问区别：<br>
（1）ArrayList 是线程不安全的，效率高，Vector 是线程安全的效率低<br>
（2）ArrayList 在进行扩容的时候，是扩容 1.5 倍，Vector 扩容的时候扩容原来的 2 倍(具体可以看源码的 grow 方法)</p>
<h3 id="Iterator"><a class="header-anchor" href="#Iterator"></a>Iterator</h3>
<p>在 java 代码中包含三种循环的方式<br>
do…while<br>
while<br>
for<br>
还有一种增强 for 循环的方式，可以简化循环的编写</p>
<p>所有的集合类都默认实现了 Iterable 的接口，实现此接口意味着具备了增强 for 循环的能力，也就是 for-each<br>
增强 for 循环本质上使用的也是 iterator 的功能<br>
方法：<br>
iterator()<br>
foreach()<br>
在 iterator 的方法中，要求返回一个 Iterator 的接口子类实例对象<br>
此接口中包含了<br>
hasNext()<br>
next()</p>
<p>在使用 iterator 进行迭代的过程中如果删除其中的某个元素会报错，并发操作异常，因此<br>
如果遍历的同时需要修改元素，建议使用 listIterator（），<br>
ListIterator 迭代器提供了向前和向后两种遍历的方式<br>
始终是通过 cursor 和 lastret 的指针来获取元素值及向下的遍历索引<br>
当使用向前遍历的时候必须要保证指针在迭代器的结果，否则无法获取结果值</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//ArrayList 内部关于Iterator的具体实现</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> cursor <span class="token operator">!=</span> size<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unchecked"</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> cursor<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">>=</span> size<span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData <span class="token operator">=</span> <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>elementData<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">>=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cursor <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> elementData<span class="token punctuation">[</span>lastRet <span class="token operator">=</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Set"><a class="header-anchor" href="#Set"></a>Set</h3>
<p>唯一无序</p>
<ol>
<li>TreeSet<br>
底层是红黑树<br>
默认有排序操作,如果是基本数据类型,自动比较如果是引用类型,需要自定义比较器
<ul>
<li>比较器分类:<br>
内部比较器:定义在元素的类种,继承 Comparable 接口<br>
外部比较器:定义在外部类中,通过实现 Comparator 接口实现,但是要将该比较器传递到集合中(TreeSet treeSet = new TreeSet(new Compare()))</li>
<li>区别:<br>
外部比较器可以定义成工具类用于复用,而内部比较器只能用于当前类(因为是使用外部构造器的构造方法生成的)<br>
如果两者同时存在,则使用外部比较器</li>
<li>当使用比较器的时候不会调用 equals 方法</li>
</ul>
</li>
<li>HashSet<br>
需要重写 hashCode 和 equals 方法</li>
</ol>
<h3 id="泛型"><a class="header-anchor" href="#泛型"></a>泛型</h3>
<p>保证集合内数据类型统一<br>
优点:</p>
<ol>
<li>数据安全</li>
<li>获取数据时效率比较高</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>泛型的高阶应用:</p>
<h4 id="泛型类"><a class="header-anchor" href="#泛型类"></a>泛型类</h4>
<p>常见的 ArrayList&lt;E&gt; 就是泛型类 当然也可以自己定义</p>
<h4 id="泛型接口"><a class="header-anchor" href="#泛型接口"></a>泛型接口</h4>
<ul>
<li></li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//泛型接口</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FanXingInterface</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">B</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>

   <span class="token keyword">public</span> <span class="token class-name">B</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token class-name">B</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//子类1</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FanXingInterfaceSub</span> <span class="token keyword">implements</span> <span class="token class-name">FanXingInterface</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token class-name">String</span> string<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//测试方法 类型由子类决定 随意改变会报错</span>
 <span class="token class-name">FanXingInterfaceSub</span> fxi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FanXingInterfaceSub</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

<span class="token comment">//子类2</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FanXingInterfaceSub</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">></span></span> <span class="token keyword">implements</span> <span class="token class-name">FanXingInterface</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//测试方法 类型由测试方法决定</span>
 <span class="token class-name">FanXingInterfaceSub</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> fxi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FanXingInterfaceSub</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="泛型方法"><a class="header-anchor" href="#泛型方法"></a>泛型方法</h4>
<p>在定义方法的时候，指定方法的返回值和参数是自定义的占位符，可以是类名中的 T,也可以是自定义的 Q，只不过在使用 Q 的时候需要使用&lt;Q&gt;定义在返回值的前面</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Q</span><span class="token punctuation">></span></span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Q</span> q<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="泛型的上限"><a class="header-anchor" href="#泛型的上限"></a>泛型的上限</h4>
<p>如果父类确定了，所有的子类都可以直接使用</p>
<h4 id="泛型的下限"><a class="header-anchor" href="#泛型的下限"></a>泛型的下限</h4>
<p>如果子类确定了，子类的所有父类都可以直接传递参数使用</p>
<h3 id="Map"><a class="header-anchor" href="#Map"></a>Map</h3>
<h4 id="HashMap"><a class="header-anchor" href="#HashMap"></a>HashMap</h4>
<ul>
<li>key 无序唯一</li>
<li>value 无序不唯一</li>
</ul>
<h4 id="LinkedHashMap"><a class="header-anchor" href="#LinkedHashMap"></a>LinkedHashMap</h4>
<ul>
<li>有序的 HashMap 速度快</li>
</ul>
<h4 id="TreeMap"><a class="header-anchor" href="#TreeMap"></a>TreeMap</h4>
<ul>
<li>有序 速度没有 hash 快</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**
 * map存储的是k-v键值对映射的数据
 *      实现子类：
 *          HashMap：数据+链表（1.7） 数组+链表+红黑树（1.8）
 *          LinkedHashMap：链表
 *          TreeMap:红黑树
 *
 *      基本api操作：
 *          增加：
 *              put（k,v）    添加元素
 *          查找：
 *              isEmpty      判断是否为空
 *              size        返回map的大小
 *              containsKey
 *              containsValue
 *              get
 *          删除：
 *              clear 清空集合中的所有元素
 *              remove:删除指定元素
 *     Map.entry:表示的是K-V组合的一组映射关系，key和value成组出现
 *
 *     hashmap跟hashtable的区别：
 *      1、hashmap线程不安全，效率比较高，hashtable线程安全，效率低
 *      2、hashmap中key和value都可以为空,hashtable不允许为空
 *
 *
 *      hashmap初始值为2的N次幂，
 *          1、方便进行&amp;操作，提高效率，&amp;要比取模运算效率要高
 *              hash &amp; (initCapacity-1)
 *          2、在扩容之后涉及到元素的迁移过程，迁移的时候只需要判断二进制的前一位是0或者是1即可
 *              如果是0，表示新数组和就数组的下标位置不变，如果是1，只需要将索引位置加上旧的数组的长度值即为新数组的下标
 *      1.7源码知识点：  数组+链表
 *          1、默认初始容量
 *          2、加载因子
 *          3、put操作
 *              1、设置值，计算hash
 *              2、扩容操作
 *              3、数据迁移的过程
 *      1.8源码知识点:   数组+链表+红黑树
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MapDemo</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"d"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        map.clear();</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsValue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//遍历操作</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> keys <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token operator">:</span>keys<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>key<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token comment">//只能获取对应的value值，不能根据value来获取key</span>
        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> values <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span> i<span class="token operator">:</span>values<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token comment">//迭代器</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> keys2 <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> iterator <span class="token operator">=</span> keys2<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">String</span> key <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>key<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//Map.entry</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span><span class="token punctuation">></span></span> entries <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span><span class="token punctuation">></span></span> iterator1 <span class="token operator">=</span> entries<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator1<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> next <span class="token operator">=</span> iterator1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"--"</span><span class="token operator">+</span>next<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Collections"><a class="header-anchor" href="#Collections"></a>Collections</h3>
<p>Collection 不同 Collections 是工具类</p>
<p>addAll<br>
sort<br>
binarySearch//二分查找的时候需要先进行排序操作，如果没有排序的话，是找不到指定元素的<br>
fill//替换<br>
shuffle<br>
reverse</p>
<h3 id="Arrays"><a class="header-anchor" href="#Arrays"></a>Arrays</h3>
<p>Collections 相同</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//asList demo</span>
<span class="token comment">//  int[] array = new int[]&#123;1,2,3,4,5&#125;;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> ints <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//list转换成数组</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> objects <span class="token operator">=</span> ints<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//直接用用数组转换</span>
<span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> arrayList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        arrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>arrayList<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrayList<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="容器的一些面试题"><a class="header-anchor" href="#容器的一些面试题"></a>容器的一些面试题</h3>
<p>1.Collection 和 Collections 的联系和区别<br>
Collection 集接口,Collections 是工具类静态方法来对集合进操作</p>
<p>2.ArrayList 和 LinkedList 的联系和区别<br>
ArrayList 连续遍历元素和随机访问元素较高<br>
LinkedList 才用列表 插入删除元素较高</p>
<p>3.Vector 和 ArrayList 的联系和区别<br>
Vector 线程安全 ArrayList 线程不安全<br>
增加长度时 Vector 默认增长一倍,ArrayList 增长 0.5 倍</p>
<p>4.HashMap 和 HashTable 的联系和区别<br>
HashMap 线程不安全 HashTable 线程安全<br>
HashMap 允许 null HashTable 不允许 null</p>
<h2 id="IO"><a class="header-anchor" href="#IO"></a>IO</h2>
<h3 id="File-类的常用方法"><a class="header-anchor" href="#File-类的常用方法"></a>File 类的常用方法</h3>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"src/abc.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//创建文件</span>
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
            file<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token comment">//判断文件的属性，都会返回boolean类型的值</span>
        file<span class="token punctuation">.</span><span class="token function">canExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        file<span class="token punctuation">.</span><span class="token function">canRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        file<span class="token punctuation">.</span><span class="token function">canWrite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//判断当前文件是否存在</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//获取文件的名称</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取文件的绝对路径</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取文件的父路径名称，如果文件的路径中只包含文件名称，则显示空</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//返回文件绝对路径的规范格式</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getCanonicalPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//返回操作系统的文件分割符</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//无论当前文件是否存在，只要给定具体的路径，都可以返回相应的路径名称</span>
        <span class="token class-name">File</span> file2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"c:/a/b/c"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file2<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//判断文件是否是文件或者目录</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file2<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file2<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// String[] list = file2.list();</span>
<span class="token comment">// for(String str:list)&#123;</span>
<span class="token comment">// System.out.println(list.toString());</span>
<span class="token comment">// &#125;</span>
<span class="token comment">// System.out.println("---------------");</span>
<span class="token comment">// File[] files = file2.listFiles();</span>
<span class="token comment">// for(File f : files)&#123;</span>
<span class="token comment">// System.out.println(f);</span>
<span class="token comment">// &#125;</span>

        <span class="token comment">//打印当前文件系统的所有盘符</span>
        <span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files1 <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">.</span><span class="token function">listRoots</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>files1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>files1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token comment">//创建单级目录</span>
        file2<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//创建多级目录</span>
        file2<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="IO-流"><a class="header-anchor" href="#IO-流"></a>IO 流</h3>
<p>字节流<br>
InputStream,OutpuStream<br>
字符流<br>
Reader,Writer</p>
<h4 id="InputStream-抽象类"><a class="header-anchor" href="#InputStream-抽象类"></a>InputStream(抽象类)</h4>
<p>以子类 FileInputStream 为例说明</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* 注意：当编写io流的程序的时候一定要注意关闭流
 *      步骤;
 *          1、选择合适的io流对象
 *          2、创建对象
 *          3、传输数据
 *          4、关闭流对象（占用系统资源）
 */</span>

 inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"abc.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//1.单个读取</span>
    <span class="token keyword">int</span> read <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>read <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>read<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//2.添加缓冲区的方式进行读取，每次会将数据添加到缓冲区中，当缓冲区满了之后，一次 读取，而不是每一个字节进行读取</span>
    <span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>length <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//3.缓冲数组+限定长度</span>
    <span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// read(byte[] b, int off, int len)</span>
    <span class="token comment">//b - the buffer into which the data is read.</span>
    <span class="token comment">// off - the start offset in array b at which the data is written.</span>
    <span class="token comment">// len - the maximum number of bytes to read.</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>length <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="OutputStream-抽象类"><a class="header-anchor" href="#OutputStream-抽象类"></a>OutputStream(抽象类)</h4>
<p>以子类 FileOutputStream 为例说明</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"aaa.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">OutputStream</span> outputStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
    outputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"\r\nabc"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
        outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Reader-抽象类"><a class="header-anchor" href="#Reader-抽象类"></a>Reader(抽象类)</h4>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//FileReader</span>
  <span class="token class-name">Reader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
            reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token string">"abc.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> read <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>read<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
                reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
<span class="token comment">//bufferReader</span>
        <span class="token class-name">BufferedReader</span>  reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
            reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token string">"aaa.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> read <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>read <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>read<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
                reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Writer-抽象类"><a class="header-anchor" href="#Writer-抽象类"></a>Writer(抽象类)</h4>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* 什么时候需要加flush,什么时候不加flush
*      最保险的方式，在输出流关闭之前每次都flush一下，然后再关闭
*      当某一个输出流对象中带有缓冲区的时候，就需要进行flush，不建议大家去记住每个输出流的分类
*/</span>
<span class="token class-name">BufferedWriter</span> bufferedWriter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token class-name">FileWriter</span> fileWriter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
    fileWriter <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"abc.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bufferedWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span>fileWriter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    bufferedWriter<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"mashibing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bufferedWriter<span class="token punctuation">.</span><span class="token function">newLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bufferedWriter<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"马士兵教育"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bufferedWriter<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
        fileWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
        bufferedWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="字节流字符流转换"><a class="header-anchor" href="#字节流字符流转换"></a>字节流字符流转换</h4>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 字节流转字符流</span>
<span class="token comment">//InputStreamReader</span>
fileInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
inputStreamReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>fileInputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//OutputStreamWriter</span>
outputStreamWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>fileOutputStream<span class="token punctuation">,</span><span class="token string">"iso8859-1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 字符流转字节流</span>
<span class="token comment">//没 如果是字符文件的话直接用字符流读就行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="RandomAccessFile"><a class="header-anchor" href="#RandomAccessFile"></a>RandomAccessFile</h4>
<p>RandomAccessFile 是随机访问文件(包括读/写)的类。它支持对文件随机访问的读取和写入，即我们可以从指定的位置读取/写入文件数据。<br>
需要注意的是，RandomAccessFile 虽然属于 <a href="http://java.io">java.io</a> 包，但它不是 InputStream 或者 OutputStream 的子类；它也不同于 FileInputStream 和 FileOutputStream。 FileInputStream 只能对文件进行读操作，而 FileOutputStream 只能对文件进行写操作；但是，RandomAccessFile 同时支持文件的读和写，并且它支持随机访问。<br>
下面是一个分块读取大文件的例子</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandomAccessFileTest</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"doc.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//整个文件的大小</span>
        <span class="token keyword">long</span> length <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//规定块的大小</span>
        <span class="token keyword">int</span> blockSize <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
        <span class="token comment">//文件可以被切分成多少个块</span>
        <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>length<span class="token operator">*</span><span class="token number">1.0</span><span class="token operator">/</span>blockSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"要被切成《%d》个块"</span><span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> beginPos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> actualSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>blockSize<span class="token operator">></span>length<span class="token operator">?</span>length<span class="token operator">:</span>blockSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token comment">//每次读取块的时候的起始偏移量</span>
            beginPos <span class="token operator">=</span> i<span class="token operator">*</span>blockSize<span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>size<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                actualSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> length<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
                actualSize <span class="token operator">=</span> blockSize<span class="token punctuation">;</span>
                length <span class="token operator">-=</span>actualSize<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">"---》起始位置是："</span><span class="token operator">+</span>beginPos<span class="token operator">+</span><span class="token string">"---->读取的大小是："</span><span class="token operator">+</span>actualSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">readSplit</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>beginPos<span class="token punctuation">,</span>actualSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">readSplit</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> beginPos<span class="token punctuation">,</span><span class="token keyword">int</span> actualSize<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">RandomAccessFile</span> randomAccessFile <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
            randomAccessFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"doc.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//表示从哪个偏移量开始读取数据</span>
            randomAccessFile<span class="token punctuation">.</span><span class="token function">seek</span><span class="token punctuation">(</span>beginPos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>length <span class="token operator">=</span> randomAccessFile<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>actualSize<span class="token operator">></span>length<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    actualSize<span class="token operator">-=</span>length<span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>actualSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
                randomAccessFile<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="多线程"><a class="header-anchor" href="#多线程"></a>多线程</h2>
<p>参考这篇博客 <a href="#">Post not found: javase-thread</a></p>
<h2 id="网络"><a class="header-anchor" href="#网络"></a>网络</h2>
<p>参考这篇博客 <a href="#">Post not found: javase-net</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>jsgame-01</title>
    <url>/2017/08/19/cn/jsgame-01/</url>
    <content><![CDATA[<p>使用js写一些小游戏 游戏1打砖块</p>
<span id="more"></span>
<p>本系列参考教材是 <a href="https://space.bilibili.com/39066904#!/">https://space.bilibili.com/39066904#!/</a></p>
<p>喜欢的可以顺道关注下他的知乎还是很有收获的</p>
<p>这应该会是一个漫长的修行之路</p>
<p>开始吧</p>
<p>html代码很简单</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>game1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
            <span class="token selector">canvas</span> <span class="token punctuation">&#123;</span>
                <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvas<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>game.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>先实现让一个小方块在按下后会左后移动</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">log <span class="token operator">=</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>console<span class="token punctuation">)</span>
<span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">150</span>
<span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">200</span>
img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'paddle.png'</span>
img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> key <span class="token operator">=</span> event<span class="token punctuation">.</span>key
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">"a"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        x <span class="token operator">-=</span> <span class="token number">10</span>
        ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
        ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">"d"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        x <span class="token operator">+=</span> <span class="token number">10</span>
        ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
        ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后对代码进行优化 每秒刷新30次使得显示更加平滑 第一次修改如下</p>
<p>这样是不对的 因为没有把左右平移放到 Interval里面所以刷新率并没有改变</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> key <span class="token operator">=</span> event<span class="token punctuation">.</span>key
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">"a"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        x <span class="token operator">-=</span> <span class="token number">10</span>
        keydown <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">"d"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        x <span class="token operator">+=</span> <span class="token number">10</span>
        keydown <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token string">"a"</span> <span class="token operator">||</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token string">"d"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        keydown <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>keydown <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
        ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token comment">//1000 1秒 一秒钟刷新30张</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>再次修改后正确</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">log <span class="token operator">=</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>console<span class="token punctuation">)</span>
<span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">150</span>
<span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">200</span>
<span class="token keyword">var</span> rightdown <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">var</span> leftdown <span class="token operator">=</span> <span class="token boolean">false</span>
img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'paddle.png'</span>
img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> key <span class="token operator">=</span> event<span class="token punctuation">.</span>key
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">"a"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        rightdown <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">"d"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        leftdown <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token string">"a"</span> <span class="token operator">||</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token string">"d"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        rightdown <span class="token operator">=</span> <span class="token boolean">false</span>
        leftdown <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rightdown <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        x <span class="token operator">-=</span> <span class="token number">10</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>leftdown <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        x <span class="token operator">+=</span> <span class="token number">10</span>
    <span class="token punctuation">&#125;</span>
    ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
    ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token comment">//1000 1秒 一秒钟刷新30张</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后就得到了一个0分代码 修改修改如下</p>
<p>需要对外只暴露函数作为接口</p>
<p>首先抽取滑块作为Paddle对象</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">imgFromPath</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    img<span class="token punctuation">.</span>src <span class="token operator">=</span> src
    <span class="token keyword">return</span> img
<span class="token punctuation">&#125;</span>
<span class="token comment">//滑块类</span>
<span class="token keyword">class</span> <span class="token class-name">Paddle</span> <span class="token punctuation">&#123;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
        <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
    <span class="token punctuation">&#125;</span>
    <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">__main</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    log <span class="token operator">=</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>console<span class="token punctuation">)</span>
    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> rightdown <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">var</span> leftdown <span class="token operator">=</span> <span class="token boolean">false</span>

    <span class="token keyword">var</span> paddle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paddle</span><span class="token punctuation">(</span><span class="token string">'paddle.png'</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>

    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> key <span class="token operator">=</span> event<span class="token punctuation">.</span>key
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">"a"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            rightdown <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">"d"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            leftdown <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token string">"a"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            rightdown <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token string">"d"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            leftdown <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rightdown <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            paddle<span class="token punctuation">.</span><span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>leftdown <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            paddle<span class="token punctuation">.</span><span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//清屏</span>
        ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
        <span class="token comment">//重新画图</span>
        ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>paddle<span class="token punctuation">.</span>img<span class="token punctuation">,</span> paddle<span class="token punctuation">.</span>x<span class="token punctuation">,</span> paddle<span class="token punctuation">.</span>y<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token comment">//1000 1秒 一秒钟刷新30张</span>
<span class="token punctuation">&#125;</span>
<span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后继续收取 将整个canvas的绘图 作为对象Engine 把整个画图擦图都封装起来</p>
<p>修改如下</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">log <span class="token operator">=</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>console<span class="token punctuation">)</span>
<span class="token function-variable function">imgFromPath</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    img<span class="token punctuation">.</span>src <span class="token operator">=</span> src
    <span class="token keyword">return</span> img
<span class="token punctuation">&#125;</span>
<span class="token keyword">class</span> <span class="token class-name">Engine</span> <span class="token punctuation">&#123;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>keydowns <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>actions <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter">paddle</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span>
        <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">var</span> actions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>actions<span class="token punctuation">)</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> actions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">var</span> key <span class="token operator">=</span> actions<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"key"</span> <span class="token operator">+</span> key<span class="token punctuation">)</span>
                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"keydown:"</span> <span class="token operator">+</span> t<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
                    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"t.actions:"</span> <span class="token operator">+</span> t<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    t<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
            t<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            t<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>paddle<span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token parameter">paddle</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span>

        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            t<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            t<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token function">alert</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">+</span> <span class="token string">"+"</span> <span class="token operator">+</span> t<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>

        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>actions<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            paddle<span class="token punctuation">.</span><span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>actions<span class="token punctuation">[</span><span class="token string">'d'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            paddle<span class="token punctuation">.</span><span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">// this.actions[key] = callback()</span>


    <span class="token punctuation">&#125;</span>
    <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
    <span class="token comment">//在canvas中画出需要的物体</span>
    <span class="token function">draw</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>img<span class="token punctuation">,</span> o<span class="token punctuation">.</span>x<span class="token punctuation">,</span> o<span class="token punctuation">.</span>y<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>

<span class="token punctuation">&#125;</span>
<span class="token comment">//滑块类</span>
<span class="token keyword">class</span> <span class="token class-name">Paddle</span> <span class="token punctuation">&#123;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
        <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
    <span class="token punctuation">&#125;</span>
    <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">__main</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Engine</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> paddle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paddle</span><span class="token punctuation">(</span><span class="token string">'paddle.png'</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>

    <span class="token comment">// g.registerAction('a', function() &#123;</span>
    <span class="token comment">//     paddle.moveLeft()</span>
    <span class="token comment">// &#125;)</span>
    <span class="token comment">// g.registerAction('d', function() &#123;</span>
    <span class="token comment">//     paddle.moveRight()</span>
    <span class="token comment">// &#125;)</span>
    g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span>paddle<span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>paddle<span class="token punctuation">)</span>

<span class="token punctuation">&#125;</span>
<span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>有个很严重的问题一开始按键就会停不下来<br>
这个会在之后再回来改 先照着gua的方法来写 把整个过程封装在了一个function Game中</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">log <span class="token operator">=</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>console<span class="token punctuation">)</span>
<span class="token function-variable function">imgFromPath</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    img<span class="token punctuation">.</span>src <span class="token operator">=</span> src
    <span class="token keyword">return</span> img
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">Game</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">keydowns</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span>canvas <span class="token operator">=</span> canvas
    g<span class="token punctuation">.</span>context <span class="token operator">=</span> context
    g<span class="token punctuation">.</span><span class="token function-variable function">drawImage</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">img</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>img<span class="token punctuation">,</span> img<span class="token punctuation">.</span>x<span class="token punctuation">,</span> img<span class="token punctuation">.</span>y<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    g<span class="token punctuation">.</span><span class="token function-variable function">clear</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> g<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> g<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    g<span class="token punctuation">.</span><span class="token function-variable function">registerAction</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> callback
    <span class="token punctuation">&#125;</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> actions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>actions<span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> actions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">var</span> key <span class="token operator">=</span> actions<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                g<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        g<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        g<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> g
<span class="token punctuation">&#125;</span>
<span class="token comment">//滑块类</span>
<span class="token keyword">class</span> <span class="token class-name">Paddle</span> <span class="token punctuation">&#123;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
        <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
    <span class="token punctuation">&#125;</span>
    <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">__main</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> paddle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paddle</span><span class="token punctuation">(</span><span class="token string">'paddle.png'</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>

    g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        paddle<span class="token punctuation">.</span><span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        paddle<span class="token punctuation">.</span><span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token comment">// g.registerAction(paddle)</span>

    g<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>paddle<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>加上一个球 点击f球会发射 碰到墙会反弹</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">log <span class="token operator">=</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>console<span class="token punctuation">)</span>
<span class="token function-variable function">imgFromPath</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    img<span class="token punctuation">.</span>src <span class="token operator">=</span> src
    <span class="token keyword">return</span> img
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">Game</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">keydowns</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span>canvas <span class="token operator">=</span> canvas
    g<span class="token punctuation">.</span>context <span class="token operator">=</span> context
    g<span class="token punctuation">.</span><span class="token function-variable function">drawImage</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> width <span class="token operator">=</span> img<span class="token punctuation">.</span>img<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height <span class="token operator">=</span> img<span class="token punctuation">.</span>img<span class="token punctuation">.</span>height</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>img<span class="token punctuation">,</span> img<span class="token punctuation">.</span>x<span class="token punctuation">,</span> img<span class="token punctuation">.</span>y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    g<span class="token punctuation">.</span><span class="token function-variable function">clear</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> g<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> g<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    g<span class="token punctuation">.</span><span class="token function-variable function">registerAction</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> callback
    <span class="token punctuation">&#125;</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> actions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>actions<span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> actions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">var</span> key <span class="token operator">=</span> actions<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                g<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        g<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        g<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        g<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> g
<span class="token punctuation">&#125;</span>
<span class="token comment">//滑块类</span>
<span class="token keyword">class</span> <span class="token class-name">Paddle</span> <span class="token punctuation">&#123;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
        <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
    <span class="token punctuation">&#125;</span>
    <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//ball</span>
<span class="token keyword">class</span> <span class="token class-name">Ball</span> <span class="token punctuation">&#123;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
        <span class="token keyword">this</span><span class="token punctuation">.</span>Xspeed <span class="token operator">=</span> speed
        <span class="token keyword">this</span><span class="token punctuation">.</span>Yspeed <span class="token operator">=</span> speed
        <span class="token keyword">this</span><span class="token punctuation">.</span>fired <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">&#125;</span>

    <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fired<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span>
            <span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">></span> <span class="token number">400</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>Xspeed <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>Xspeed
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">></span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>Yspeed <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>Yspeed
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Xspeed
            <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Yspeed
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fired <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
    <span class="token punctuation">&#125;</span>
    <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">__main</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> paddle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paddle</span><span class="token punctuation">(</span><span class="token string">'paddle.png'</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> ball <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ball</span><span class="token punctuation">(</span><span class="token string">'ball.png'</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        paddle<span class="token punctuation">.</span><span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        paddle<span class="token punctuation">.</span><span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        ball<span class="token punctuation">.</span><span class="token function">fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        ball<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    g<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>paddle<span class="token punctuation">)</span>
        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>ball<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>加入了与板子的碰撞基本实现功能 还有一些小bug和功能下次再改</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">log <span class="token operator">=</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>console<span class="token punctuation">)</span>
<span class="token function-variable function">imgFromPath</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    img<span class="token punctuation">.</span>src <span class="token operator">=</span> src
    <span class="token keyword">return</span> img
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">Game</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">keydowns</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span>canvas <span class="token operator">=</span> canvas
    g<span class="token punctuation">.</span>context <span class="token operator">=</span> context
    g<span class="token punctuation">.</span><span class="token function-variable function">drawImage</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> width <span class="token operator">=</span> img<span class="token punctuation">.</span>img<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height <span class="token operator">=</span> img<span class="token punctuation">.</span>img<span class="token punctuation">.</span>height</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>img<span class="token punctuation">,</span> img<span class="token punctuation">.</span>x<span class="token punctuation">,</span> img<span class="token punctuation">.</span>y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    g<span class="token punctuation">.</span><span class="token function-variable function">clear</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> g<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> g<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    g<span class="token punctuation">.</span><span class="token function-variable function">registerAction</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> callback
    <span class="token punctuation">&#125;</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> actions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>actions<span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> actions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">var</span> key <span class="token operator">=</span> actions<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                g<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        g<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        g<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        g<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> g
<span class="token punctuation">&#125;</span>
<span class="token comment">//滑块类</span>
<span class="token keyword">class</span> <span class="token class-name">Paddle</span> <span class="token punctuation">&#123;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
        <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed
    <span class="token punctuation">&#125;</span>
    <span class="token function">collide</span><span class="token punctuation">(</span><span class="token parameter">ball</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ball<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">50</span> <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ball<span class="token punctuation">.</span>x <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">&amp;&amp;</span> ball<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>img<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
    <span class="token punctuation">&#125;</span>
    <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//ball</span>
<span class="token keyword">class</span> <span class="token class-name">Ball</span> <span class="token punctuation">&#123;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speedX<span class="token punctuation">,</span> speedY</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
        <span class="token keyword">this</span><span class="token punctuation">.</span>speedX <span class="token operator">=</span> speedX
        <span class="token keyword">this</span><span class="token punctuation">.</span>speedY <span class="token operator">=</span> speedY
        <span class="token keyword">this</span><span class="token punctuation">.</span>fired <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">&#125;</span>

    <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fired<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span>
            <span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">></span> <span class="token number">400</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>speedX <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>speedX
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">></span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>speedY <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>speedY
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speedX
            <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speedY
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fired <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
    <span class="token punctuation">&#125;</span>
    <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">__main</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> paddle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paddle</span><span class="token punctuation">(</span><span class="token string">'paddle.png'</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> ball <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ball</span><span class="token punctuation">(</span><span class="token string">'ball.png'</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        paddle<span class="token punctuation">.</span><span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        paddle<span class="token punctuation">.</span><span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        ball<span class="token punctuation">.</span><span class="token function">fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        ball<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>paddle<span class="token punctuation">.</span><span class="token function">collide</span><span class="token punctuation">(</span>ball<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            ball<span class="token punctuation">.</span>speedY <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    g<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>paddle<span class="token punctuation">)</span>
        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>ball<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>延时效果(截图只有8帧实际会流畅很多)<br>
<img src="https://losssblog.oss-cn-hangzhou.aliyuncs.com/jsgame-01/1.gif?x-oss-process=style/blogimage" alt=""></p>
<p>加入方块</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">log <span class="token operator">=</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>console<span class="token punctuation">)</span>
<span class="token function-variable function">imgFromPath</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  img<span class="token punctuation">.</span>src <span class="token operator">=</span> src
  <span class="token keyword">return</span> img
<span class="token punctuation">&#125;</span>
screenX <span class="token operator">=</span> <span class="token number">400</span>
screenY <span class="token operator">=</span> <span class="token number">300</span>
<span class="token comment">//判断两个物体是否相撞</span>
<span class="token function-variable function">pub_collide</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> j</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//(x,y) (x,y+h)(x+w,y)(x+w,y+h)</span>
  <span class="token comment">//x  j.x j.x+w j.y j.y+h</span>
  <span class="token keyword">var</span> iheight <span class="token operator">=</span> i<span class="token punctuation">.</span>img<span class="token punctuation">.</span>height
  <span class="token keyword">var</span> iwidth <span class="token operator">=</span> i<span class="token punctuation">.</span>img<span class="token punctuation">.</span>width
  <span class="token keyword">var</span> jheight <span class="token operator">=</span> j<span class="token punctuation">.</span>img<span class="token punctuation">.</span>height
  <span class="token keyword">var</span> jwidth <span class="token operator">=</span> j<span class="token punctuation">.</span>img<span class="token punctuation">.</span>width
  <span class="token keyword">var</span> d1x <span class="token operator">=</span> i<span class="token punctuation">.</span>x
  <span class="token keyword">var</span> d1y <span class="token operator">=</span> i<span class="token punctuation">.</span>y
  <span class="token keyword">var</span> d2x <span class="token operator">=</span> i<span class="token punctuation">.</span>x
  <span class="token keyword">var</span> d2y <span class="token operator">=</span> i<span class="token punctuation">.</span>y <span class="token operator">+</span> iheight
  <span class="token keyword">var</span> d3x <span class="token operator">=</span> i<span class="token punctuation">.</span>x <span class="token operator">+</span> iwidth
  <span class="token keyword">var</span> d3y <span class="token operator">=</span> i<span class="token punctuation">.</span>y
  <span class="token keyword">var</span> d4x <span class="token operator">=</span> i<span class="token punctuation">.</span>x <span class="token operator">+</span> iwidth
  <span class="token keyword">var</span> d4y <span class="token operator">=</span> i<span class="token punctuation">.</span>y <span class="token operator">+</span> iheight
  <span class="token comment">// alert("!!!d1x " + d1x + " d1y " + d1y + " d4x " + d4x + " d4y " + d4y + " j.x " + j.x + " j.width " + j.width + " j.y " + j.y + " j.height " + j.height)</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d1x <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>x <span class="token operator">+</span> jwidth <span class="token operator">&amp;&amp;</span> d1x <span class="token operator">></span> j<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d1y <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>y <span class="token operator">+</span> jheight <span class="token operator">&amp;&amp;</span> d1y <span class="token operator">></span> j<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    result <span class="token operator">+=</span> <span class="token number">1</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d2x <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>x <span class="token operator">+</span> jwidth <span class="token operator">&amp;&amp;</span> d2x <span class="token operator">></span> j<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d2y <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>y <span class="token operator">+</span> jheight <span class="token operator">&amp;&amp;</span> d2y <span class="token operator">></span> j<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    result <span class="token operator">+=</span> <span class="token number">1</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d3x <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>x <span class="token operator">+</span> jwidth <span class="token operator">&amp;&amp;</span> d3x <span class="token operator">></span> j<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d3y <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>y <span class="token operator">+</span> jheight <span class="token operator">&amp;&amp;</span> d3y <span class="token operator">></span> j<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    result <span class="token operator">+=</span> <span class="token number">1</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d4x <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>x <span class="token operator">+</span> jwidth <span class="token operator">&amp;&amp;</span> d4x <span class="token operator">></span> j<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d4y <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>y <span class="token operator">+</span> jheight <span class="token operator">&amp;&amp;</span> d4y <span class="token operator">></span> j<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    result <span class="token operator">+=</span> <span class="token number">1</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"相撞"</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string-property property">"collide"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string-property property">"side"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">//侧面相撞</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"侧面相撞"</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string-property property">"collide"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string-property property">"side"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string-property property">"collide"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string-property property">"side"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token comment">// alert("相撞!!!" + d1x + "d1y" + d1y + "d4x" + d4x + "d4y" + d4y + "j.x" + j.x + "j.width" + j.width + "j.y" + j.y + "j.height" + j.height)</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">Game</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">keydowns</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>
  g<span class="token punctuation">.</span>canvas <span class="token operator">=</span> canvas
  g<span class="token punctuation">.</span>context <span class="token operator">=</span> context
  g<span class="token punctuation">.</span><span class="token function-variable function">drawImage</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> width <span class="token operator">=</span> img<span class="token punctuation">.</span>img<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height <span class="token operator">=</span> img<span class="token punctuation">.</span>img<span class="token punctuation">.</span>height</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>img<span class="token punctuation">,</span> img<span class="token punctuation">.</span>x<span class="token punctuation">,</span> img<span class="token punctuation">.</span>y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
  g<span class="token punctuation">.</span><span class="token function-variable function">clear</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> g<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> g<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
  g<span class="token punctuation">.</span><span class="token function-variable function">registerAction</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> callback
  <span class="token punctuation">&#125;</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> actions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>actions<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> actions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">var</span> key <span class="token operator">=</span> actions<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    g<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> g
<span class="token punctuation">&#125;</span>
<span class="token comment">//滑块类</span>
<span class="token keyword">class</span> <span class="token class-name">Paddle</span> <span class="token punctuation">&#123;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
    <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> speed
  <span class="token punctuation">&#125;</span>
  <span class="token function">move</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      x <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">></span> screenX <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      x <span class="token operator">=</span> screenX <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> x
  <span class="token punctuation">&#125;</span>
  <span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">collide</span><span class="token punctuation">(</span><span class="token parameter">ball</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token function">pub_collide</span><span class="token punctuation">(</span>ball<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token comment">// if (ball.y + 50 > this.img.y) &#123;</span>
    <span class="token comment">//</span>
    <span class="token comment">//     if (ball.x > this.img.x &amp;&amp; ball.x &lt; this.img.x + this.img.width) &#123;</span>
    <span class="token comment">//         return true</span>
    <span class="token comment">//     &#125;</span>
    <span class="token comment">// &#125;</span>
    <span class="token comment">// return false</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
  <span class="token punctuation">&#125;</span>
  <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">class</span> <span class="token class-name">Block</span> <span class="token punctuation">&#123;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
    <span class="token keyword">this</span><span class="token punctuation">.</span>alive <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>alive <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">collide</span><span class="token punctuation">(</span><span class="token parameter">ball</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token function">pub_collide</span><span class="token punctuation">(</span>ball<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//ball</span>
<span class="token keyword">class</span> <span class="token class-name">Ball</span> <span class="token punctuation">&#123;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speedX<span class="token punctuation">,</span> speedY</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
    <span class="token keyword">this</span><span class="token punctuation">.</span>speedX <span class="token operator">=</span> speedX
    <span class="token keyword">this</span><span class="token punctuation">.</span>speedY <span class="token operator">=</span> speedY
    <span class="token keyword">this</span><span class="token punctuation">.</span>fired <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">&#125;</span>

  <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fired<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">></span> screenX<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>speedX <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>speedX
      <span class="token punctuation">&#125;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">></span> screenY<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>speedY <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>speedY
      <span class="token punctuation">&#125;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speedX
      <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speedY
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>fired <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
  <span class="token punctuation">&#125;</span>
  <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">__main</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> paddle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paddle</span><span class="token punctuation">(</span><span class="token string">'paddle.png'</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> ball <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ball</span><span class="token punctuation">(</span><span class="token string">'ball.png'</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> block <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Block</span><span class="token punctuation">(</span><span class="token string">'block.png'</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
  g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    paddle<span class="token punctuation">.</span><span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    paddle<span class="token punctuation">.</span><span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    ball<span class="token punctuation">.</span><span class="token function">fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  g<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    ball<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> paddle<span class="token punctuation">.</span><span class="token function">collide</span><span class="token punctuation">(</span>ball<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token string">"collide"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      ball<span class="token punctuation">.</span>speedY <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token string">"side"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        ball<span class="token punctuation">.</span>speedX <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    result <span class="token operator">=</span> block<span class="token punctuation">.</span><span class="token function">collide</span><span class="token punctuation">(</span>ball<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>block<span class="token punctuation">.</span>alive <span class="token operator">&amp;&amp;</span> result<span class="token punctuation">.</span>collide<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      ball<span class="token punctuation">.</span>speedY <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span>
      block<span class="token punctuation">.</span><span class="token function">kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>side<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        ball<span class="token punctuation">.</span>speedX <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>

  g<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>paddle<span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>ball<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
    <span class="token function">log</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>alive<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>block<span class="token punctuation">.</span>alive<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>加入暂停</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">log <span class="token operator">=</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>console<span class="token punctuation">)</span>
<span class="token function-variable function">imgFromPath</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  img<span class="token punctuation">.</span>src <span class="token operator">=</span> src
  <span class="token keyword">return</span> img
<span class="token punctuation">&#125;</span>
screenX <span class="token operator">=</span> <span class="token number">400</span>
screenY <span class="token operator">=</span> <span class="token number">300</span>
paused <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token comment">//判断两个物体是否相撞</span>
<span class="token function-variable function">pub_collide</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> j</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//(x,y) (x,y+h)(x+w,y)(x+w,y+h)</span>
  <span class="token comment">//x  j.x j.x+w j.y j.y+h</span>
  <span class="token keyword">var</span> iheight <span class="token operator">=</span> i<span class="token punctuation">.</span>img<span class="token punctuation">.</span>height
  <span class="token keyword">var</span> iwidth <span class="token operator">=</span> i<span class="token punctuation">.</span>img<span class="token punctuation">.</span>width
  <span class="token keyword">var</span> jheight <span class="token operator">=</span> j<span class="token punctuation">.</span>img<span class="token punctuation">.</span>height
  <span class="token keyword">var</span> jwidth <span class="token operator">=</span> j<span class="token punctuation">.</span>img<span class="token punctuation">.</span>width
  <span class="token keyword">var</span> d1x <span class="token operator">=</span> i<span class="token punctuation">.</span>x
  <span class="token keyword">var</span> d1y <span class="token operator">=</span> i<span class="token punctuation">.</span>y
  <span class="token keyword">var</span> d2x <span class="token operator">=</span> i<span class="token punctuation">.</span>x
  <span class="token keyword">var</span> d2y <span class="token operator">=</span> i<span class="token punctuation">.</span>y <span class="token operator">+</span> iheight
  <span class="token keyword">var</span> d3x <span class="token operator">=</span> i<span class="token punctuation">.</span>x <span class="token operator">+</span> iwidth
  <span class="token keyword">var</span> d3y <span class="token operator">=</span> i<span class="token punctuation">.</span>y
  <span class="token keyword">var</span> d4x <span class="token operator">=</span> i<span class="token punctuation">.</span>x <span class="token operator">+</span> iwidth
  <span class="token keyword">var</span> d4y <span class="token operator">=</span> i<span class="token punctuation">.</span>y <span class="token operator">+</span> iheight
  <span class="token comment">// alert("!!!d1x " + d1x + " d1y " + d1y + " d4x " + d4x + " d4y " + d4y + " j.x " + j.x + " j.width " + j.width + " j.y " + j.y + " j.height " + j.height)</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d1x <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>x <span class="token operator">+</span> jwidth <span class="token operator">&amp;&amp;</span> d1x <span class="token operator">></span> j<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d1y <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>y <span class="token operator">+</span> jheight <span class="token operator">&amp;&amp;</span> d1y <span class="token operator">></span> j<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    result <span class="token operator">+=</span> <span class="token number">1</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d2x <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>x <span class="token operator">+</span> jwidth <span class="token operator">&amp;&amp;</span> d2x <span class="token operator">></span> j<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d2y <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>y <span class="token operator">+</span> jheight <span class="token operator">&amp;&amp;</span> d2y <span class="token operator">></span> j<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    result <span class="token operator">+=</span> <span class="token number">1</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d3x <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>x <span class="token operator">+</span> jwidth <span class="token operator">&amp;&amp;</span> d3x <span class="token operator">></span> j<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d3y <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>y <span class="token operator">+</span> jheight <span class="token operator">&amp;&amp;</span> d3y <span class="token operator">></span> j<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    result <span class="token operator">+=</span> <span class="token number">1</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d4x <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>x <span class="token operator">+</span> jwidth <span class="token operator">&amp;&amp;</span> d4x <span class="token operator">></span> j<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d4y <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>y <span class="token operator">+</span> jheight <span class="token operator">&amp;&amp;</span> d4y <span class="token operator">></span> j<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    result <span class="token operator">+=</span> <span class="token number">1</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"相撞"</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string-property property">"collide"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string-property property">"side"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">//侧面相撞</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"侧面相撞"</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string-property property">"collide"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string-property property">"side"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string-property property">"collide"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string-property property">"side"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token comment">// alert("相撞!!!" + d1x + "d1y" + d1y + "d4x" + d4x + "d4y" + d4y + "j.x" + j.x + "j.width" + j.width + "j.y" + j.y + "j.height" + j.height)</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">Game</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">keydowns</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>
  g<span class="token punctuation">.</span>canvas <span class="token operator">=</span> canvas
  g<span class="token punctuation">.</span>context <span class="token operator">=</span> context
  g<span class="token punctuation">.</span><span class="token function-variable function">drawImage</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> width <span class="token operator">=</span> img<span class="token punctuation">.</span>img<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height <span class="token operator">=</span> img<span class="token punctuation">.</span>img<span class="token punctuation">.</span>height</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>img<span class="token punctuation">,</span> img<span class="token punctuation">.</span>x<span class="token punctuation">,</span> img<span class="token punctuation">.</span>y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
  g<span class="token punctuation">.</span><span class="token function-variable function">clear</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> g<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> g<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
  g<span class="token punctuation">.</span><span class="token function-variable function">registerAction</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> callback
  <span class="token punctuation">&#125;</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> actions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>actions<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> actions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">var</span> key <span class="token operator">=</span> actions<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>g<span class="token punctuation">.</span>keydowns<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        g<span class="token punctuation">.</span>actions<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    g<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> g
<span class="token punctuation">&#125;</span>
<span class="token comment">//滑块类</span>
<span class="token keyword">class</span> <span class="token class-name">Paddle</span> <span class="token punctuation">&#123;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
    <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> speed
  <span class="token punctuation">&#125;</span>
  <span class="token function">move</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      x <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">></span> screenX <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      x <span class="token operator">=</span> screenX <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> x
  <span class="token punctuation">&#125;</span>
  <span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">collide</span><span class="token punctuation">(</span><span class="token parameter">ball</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token function">pub_collide</span><span class="token punctuation">(</span>ball<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token comment">// if (ball.y + 50 > this.img.y) &#123;</span>
    <span class="token comment">//</span>
    <span class="token comment">//     if (ball.x > this.img.x &amp;&amp; ball.x &lt; this.img.x + this.img.width) &#123;</span>
    <span class="token comment">//         return true</span>
    <span class="token comment">//     &#125;</span>
    <span class="token comment">// &#125;</span>
    <span class="token comment">// return false</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
  <span class="token punctuation">&#125;</span>
  <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">class</span> <span class="token class-name">Block</span> <span class="token punctuation">&#123;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
    <span class="token keyword">this</span><span class="token punctuation">.</span>alive <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>alive <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">collide</span><span class="token punctuation">(</span><span class="token parameter">ball</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token function">pub_collide</span><span class="token punctuation">(</span>ball<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//ball</span>
<span class="token keyword">class</span> <span class="token class-name">Ball</span> <span class="token punctuation">&#123;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> speedX<span class="token punctuation">,</span> speedY</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> <span class="token function">imgFromPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
    <span class="token keyword">this</span><span class="token punctuation">.</span>speedX <span class="token operator">=</span> speedX
    <span class="token keyword">this</span><span class="token punctuation">.</span>speedY <span class="token operator">=</span> speedY
    <span class="token keyword">this</span><span class="token punctuation">.</span>fired <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">&#125;</span>

  <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fired<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">></span> screenX<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>speedX <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>speedX
      <span class="token punctuation">&#125;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">></span> screenY<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>speedY <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>speedY
      <span class="token punctuation">&#125;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speedX
      <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speedY
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>fired <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">&#125;</span>
  <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x
  <span class="token punctuation">&#125;</span>
  <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> <span class="token function-variable function">__main</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> paddle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paddle</span><span class="token punctuation">(</span><span class="token string">'paddle.png'</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> ball <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ball</span><span class="token punctuation">(</span><span class="token string">'ball.png'</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> block <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Block</span><span class="token punctuation">(</span><span class="token string">'block.png'</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
  g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    paddle<span class="token punctuation">.</span><span class="token function">moveLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    paddle<span class="token punctuation">.</span><span class="token function">moveRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  g<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    ball<span class="token punctuation">.</span><span class="token function">fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
      paused <span class="token operator">=</span> <span class="token operator">!</span>paused
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  g<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>paused <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">&#125;</span>
    ball<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> paddle<span class="token punctuation">.</span><span class="token function">collide</span><span class="token punctuation">(</span>ball<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token string">"collide"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      ball<span class="token punctuation">.</span>speedY <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token string">"side"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        ball<span class="token punctuation">.</span>speedX <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    result <span class="token operator">=</span> block<span class="token punctuation">.</span><span class="token function">collide</span><span class="token punctuation">(</span>ball<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>block<span class="token punctuation">.</span>alive <span class="token operator">&amp;&amp;</span> result<span class="token punctuation">.</span>collide<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      ball<span class="token punctuation">.</span>speedY <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span>
      block<span class="token punctuation">.</span><span class="token function">kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>side<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        ball<span class="token punctuation">.</span>speedX <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>

  g<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>paddle<span class="token punctuation">)</span>
    g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>ball<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
    <span class="token function">log</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>alive<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>block<span class="token punctuation">.</span>alive<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>jsgame</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>js</tag>
        <tag>game</tag>
      </tags>
  </entry>
</search>
